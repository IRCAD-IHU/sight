<plugin id="Tuto11Picker" version="@PROJECT_VERSION@" >

    <requirement id="preferences" />
    <requirement id="visuOgre" />
    <requirement id="material" />
    <requirement id="guiQt" />
    <requirement id="servicesReg" />

    <extension implements="::fwServices::registry::AppConfig" >
        <id>Tuto11Picker_AppCfg</id>
        <config>

            <!-- ******************************* Objects declaration ****************************** -->

            <object uid="mesh" type="::fwData::Mesh" />
            <object uid="image" type="::fwData::Image" />
            <object uid="snapshot" type="::fwData::Image" />

            <!-- ******************************* UI declaration *********************************** -->

            <service uid="mainFrame" type="::gui::frame::SDefaultFrame" >
                <gui>
                    <frame>
                        <name>Tuto11Picker</name>
                        <icon>Tuto11Picker-@PROJECT_VERSION@/tuto.ico</icon>
                        <minSize width="800" height="600" />
                    </frame>
                    <menuBar/>
                </gui>
                <registry>
                    <menuBar sid="menuBarView" start="yes" />
                    <view sid="containerView" start="yes" />
                </registry>
            </service>

            <service uid="menuBarView" type="::gui::aspect::SDefaultMenuBar" >
                <gui>
                    <layout>
                        <menu name="File" />
                    </layout>
                </gui>
                <registry>
                    <menu sid="menuFileView" start="yes" />
                </registry>
            </service>

            <service uid="menuFileView" type="::gui::aspect::SDefaultMenu" >
                <gui>
                    <layout>
                        <menuItem name="Open image" shortcut="Ctrl+I" />
                        <menuItem name="Open mesh" shortcut="Ctrl+M" />
                        <separator/>
                        <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="openImageAct" start="yes" />
                    <menuItem sid="openMeshAct" start="yes" />
                    <menuItem sid="quitAct" start="yes" />
                </registry>
            </service>

            <service uid="containerView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager" >
                        <orientation value="vertical" />
                        <view proportion="0" backgroundColor="#3E4453" />
                        <view proportion="1" />
                    </layout>
                </gui>
                <registry>
                    <view sid="pointEditorSrv" start="yes" />
                    <view sid="sceneView" start="yes" />
                </registry>
            </service>

            <service uid="sceneView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager" >
                        <orientation value="vertical" />
                        <view proportion="1" />
                        <view proportion="0" minHeight="30" backgroundColor="#3E4453" />
                    </layout>
                </gui>
                <registry>
                    <view sid="genericSceneSrv" start="yes" />
                    <view sid="editorsView" start="yes" />
                </registry>
            </service>

            <service uid="editorsView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager" >
                        <orientation value="horizontal" />
                        <view proportion="0" minWidth="50" />
                        <view proportion="1" />
                        <view proportion="0" minWidth="30" />
                    </layout>
                </gui>
                <registry>
                    <view sid="showNegatoSrv" start="yes" />
                    <view sid="sliderIndexEditorSrv" start="yes" />
                    <view sid="snapshotSrv" start="yes" />
                </registry>
            </service>

            <!-- ******************************* Actions ****************************************** -->

            <service uid="openImageAct" type="::gui::action::SStarter" >
                <start uid="imageReaderSrv" />
            </service>

            <service uid="openMeshAct" type="::gui::action::SStarter" >
                <start uid="meshReaderSrv" />
            </service>

            <service uid="quitAct" type="::gui::action::SQuit" />

            <!-- *************************** Begin generic scene *************************** -->

            <service uid="genericSceneSrv" type="::fwRenderOgre::SRender" >
                <scene>
                    <background topColor="#36393E" bottomColor="#36393E" />

                    <layer id="default" order="1" />
                    <adaptor uid="trackballInteractorAdp" />
                    <adaptor uid="pickerInteractorAdp" />
                    <adaptor uid="meshAdp" />
                    <adaptor uid="negatoAdp" />
                    <adaptor uid="snapshotAdp" />
                </scene>
            </service>

            <service uid="trackballInteractorAdp" type="::visuOgreAdaptor::STrackballCamera" >
                <config layer="default" priority="0" />
            </service>

            <service uid="pickerInteractorAdp" type="::visuOgreAdaptor::SVoxelPicker" >
                <in key="image" uid="image" />
                <config layer="default" mode="3D" priority="1" />
            </service>

            <service uid="meshAdp" type="::visuOgreAdaptor::SMesh" autoConnect="yes" >
                <inout key="mesh" uid="mesh" />
                <config layer="default" />
            </service>

            <service uid="negatoAdp" type="::visuOgreAdaptor::SNegato3D" autoConnect="yes" >
                <inout key="image" uid="image" />
                <config layer="default" sliceIndex="axial" interactive="true" />
            </service>

            <service uid="snapshotAdp" type="::visuOgreAdaptor::SFragmentsInfo" >
                <inout key="image" uid="snapshot" />
                <config layer="default" flip="true" />
            </service>

            <!-- ******************************* Services ***************************************** -->

            <service uid="snapshotSrv" type="::guiQt::editor::SSignalButton" >
                <config>
                   <checkable>false</checkable>
                   <icon>flatIcon-0.1/icons/YellowPhoto.svg</icon>
                </config>
            </service>

            <service uid="showNegatoSrv" type="::guiQt::editor::SSignalButton" >
                <config>
                    <checkable>true</checkable>
                    <icon>flatIcon-0.1/icons/RedCross.svg</icon>
                    <icon2>flatIcon-0.1/icons/Layers.svg</icon2>
                    <iconWidth>40</iconWidth>
                    <iconHeight>16</iconHeight>
                    <checked>true</checked>
                </config>
            </service>

            <service uid="pointEditorSrv" type="::uiVisuQt::PointEditor" />

            <service uid="meshReaderSrv" type="::uiIO::editor::SIOSelector" >
                <inout key="data" uid="mesh" />
                <type mode="reader" />
            </service>

            <service uid="imageReaderSrv" type="::uiIO::editor::SIOSelector" >
                <inout key="data" uid="image" />
                <type mode="reader" />
            </service>

            <!-- This service convert a simple fwData::Image to medical Image -->
            <service uid="medicalImageConverterSrv" type="::ctrlSelection::MedicalImageSrv" autoConnect="yes" >
                <inout key="image" uid="image" />
            </service>

            <service uid="sliderIndexEditorSrv" type="::uiImageQt::SliceIndexPositionEditor" autoConnect="yes" >
                <inout key="image" uid="image" />
                <sliceIndex>axial</sliceIndex>
            </service>

            <!-- Write the snapshot image -->
            <service uid="imageWriterSrv" type="::uiIO::editor::SIOSelector" >
                <inout key="data" uid="snapshot" />
                <type mode="writer" />
                <selection mode="exclude" />
                <addSelection service="::ioAtoms::SWriter" />
            </service>

            <!-- ******************************* Connections ***************************************** -->

            <connect>
                <signal>snapshotSrv/clicked</signal>
                <slot>imageWriterSrv/update</slot>
            </connect>

            <connect>
                <signal>showNegatoSrv/toggled</signal>
                <slot>negatoAdp/updateVisibility</slot>
            </connect>

            <connect>
                <signal>pickerInteractorAdp/picked</signal>
                <slot>pointEditorSrv/getInteraction</slot>
            </connect>

            <!-- ******************************* Start services ***************************************** -->

            <start uid="mainFrame" />
            <start uid="medicalImageConverterSrv" />
            <start uid="imageWriterSrv" />
            <start uid="trackballInteractorAdp" />
            <start uid="pickerInteractorAdp" />
            <start uid="meshAdp" />
            <start uid="negatoAdp" />
            <start uid="snapshotAdp" />

        </config>
    </extension>
</plugin>
