<plugin id="Tuto02DataServiceBasic" version="@PROJECT_VERSION@" >

    <!-- The modules in requirements are automatically started when this 
         Application is launched. -->
    <requirement id="::sight::modules::services" />
    <requirement id="::sight::modules::guiQt" />

    <extension implements="::sight::services::registry::AppConfig" >
        <id>TutoDataServiceBasic_AppCfg</id>
        <config>

            <!-- ******************************* Objects declaration ****************************** -->

            <!-- In tutoDataServiceBasic, the central data object is a ::sight::data::Image. -->
            <object uid="imageData" type="::sight::data::Image" />

            <!-- ******************************* UI declaration *********************************** -->

            <!--
                Description service of the GUI:
                The ::sight::modules::gui::frame::SDefaultFrame service automatically positions the various
                containers in the application main window.
                Here, it declares a container for the 3D rendering service.
            -->
            <service uid="mainFrame" type="::sight::modules::gui::frame::SDefaultFrame" >
                <gui>
                    <frame>
                        <name>Tuto02DataServiceBasic</name>
                        <icon>Tuto02DataServiceBasic-@PROJECT_VERSION@/tuto.ico</icon>
                        <minSize width="800" height="600" />
                    </frame>
                </gui>
                <registry>
                    <!-- Associate the container for the rendering service. -->
                    <view sid="imageRendereSrv" />
                </registry>
            </service>

            <!-- ******************************* Services ***************************************** -->

            <!--
                Reading service:
                The <file> tag defines the path of the image to load. Here, it is a relative
                path from the repository in which you launch the application.
            -->
            <service uid="imageReaderSrv" type="::ioVTK::SImageReader" >
                <inout key="data" uid="imageData" />
                <file>../../data/patient1.vtk</file>
            </service>

            <!--
                Visualization service of a 3D medical image:
                This service will render the 3D image.
            -->
            <service uid="imageRendereSrv" type="::visuBasic::SImage" >
                <in key="image" uid="imageData" />
            </service>

            <!-- ******************************* Start services ***************************************** -->

            <!--
                Definition of the starting order of the different services:
                The frame defines the 3D scene container, so it must be started first.
                The services will be stopped the reverse order compared to the starting one.
            -->
            <start uid="mainFrame" />
            <start uid="imageReaderSrv" />
            <start uid="imageRendereSrv" />

            <!-- ******************************* Update services ***************************************** -->

            <!--
                Definition of the service to update:
                The reading service load the data on the update.
                The render update must be called after the reading of the image.
            -->
            <update uid="imageReaderSrv" />
            <update uid="imageRendereSrv" />

        </config>
    </extension>

</plugin>
