<plugin id="ExHybridMarkerTracker" version="@PROJECT_VERSION@" >

    <requirement id="guiQt" />
    <requirement id="servicesReg" />
    <requirement id="visuOgre" />
    <requirement id="visuOgreQt" />
    <requirement id="material" />
    <requirement id="preferences" />

    <extension implements="::fwServices::registry::AppConfig" >
        <id>ExHybridMarkerTracker_AppCfg</id>
        <config>

            <!-- ******************************* Objects declaration ****************************** -->

            <object uid="cameraSeries" type="::arData::CameraSeries" />
            <object uid="camera" type="::arData::Camera" src="deferred" />
            <object uid="frameTL" type="::arData::FrameTL" />
            <object uid="sourceFrame" type="::fwData::Image" />
            <object uid="trackedFrame" type="::fwData::Image" />
            <object uid="finalFrame" type="::fwData::Image" />
            <object uid="poseMatrix" type="::fwData::TransformationMatrix3D" />
            <object uid="cameraToMarker" type="::fwData::TransformationMatrix3D" />

            <!-- ******************************* UI declaration *********************************** -->

            <service uid="mainFrame" type="::gui::frame::SDefaultFrame" >
                <gui>
                    <menuBar/>
                    <toolBar/>
                    <frame>
                        <name>ExHybridMarkerTracker</name>
                        <icon>ExHybridMarkerTracker-@PROJECT_VERSION@/app.ico</icon>
                    </frame>
                </gui>
                <registry>
                    <menuBar sid="menuBarView" start="yes" />
                    <toolBar sid="toolbarView" start="yes" />
                    <view sid="mainView" start="yes" />
                </registry>
            </service>

            <service uid="menuBarView" type="::gui::aspect::SDefaultMenuBar" >
                <gui>
                    <layout>
                        <menu name="File" />
                        <menu name="Preferences" />
                    </layout>
                </gui>
                <registry>
                    <menu sid="menuFileView" start="yes" />
                    <menu sid="menuPreferencesView" start="yes" />
                </registry>
            </service>

            <service uid="menuFileView" type="::gui::aspect::SDefaultMenu" >
                <gui>
                    <layout>
                        <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="quitAct" start="yes" />
                </registry>
            </service>

            <service uid="menuPreferencesView" type="::gui::aspect::SDefaultMenu" >
                <gui>
                    <layout>
                        <menuItem name="Show parameters" shortcut="Ctrl+H" style="check" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="showHideParametersAct" start="yes" />
                </registry>
            </service>

            <service uid="toolbarView" type="::gui::aspect::SDefaultToolBar" >
                <gui>
                    <layout>
                        <menuItem name="Load calibration" icon="flatIcon-0.1/icons/YellowCamera.svg" />
                        <editor/>
                        <menuItem name="Start" icon="flatIcon-0.1/icons/GreenStart.svg" shortcut="Space" />
                        <menuItem name="Pause" icon="flatIcon-0.1/icons/OrangePause.svg" shortcut="Space" />
                        <menuItem name="Play" icon="flatIcon-0.1/icons/GreenStart.svg" shortcut="Space" />
                        <menuItem name="Stop" icon="flatIcon-0.1/icons/RedStop.svg" />
                        <menuItem name="Loop" icon="flatIcon-0.1/icons/OrangeLoop.svg" style="check" />
                        <separator/>
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="loadCalibAct" start="yes" />
                    <editor sid="videoSelectorSrv"  />
                    <menuItem sid="startVideoAct" start="yes" />
                    <menuItem sid="pauseVideoAct" start="yes" />
                    <menuItem sid="resumeVideoAct" start="yes" />
                    <menuItem sid="stopVideoAct" start="yes" />
                    <menuItem sid="loopVideoAct" start="yes" />
                </registry>
            </service>

            <service uid="mainView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager" >
                        <orientation value="vertical" />
                        <view proportion="0" />
                    </layout>
                    <slideView hAlign="right" width="400" />
                </gui>
                <registry>
                    <view sid="genericSceneSrv" start="yes" />
                    <slideView sid="parametersView" start="yes" />
                </registry>
            </service>

            <service uid="parametersView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager" >
                        <orientation value="vertical" />
                        <view proportion="0" caption="" />
                        <view proportion="0" caption="" />
                    </layout>
                </gui>
                <registry>
                    <view sid="hybridMarkerParamsSrv" start="yes" />
                    <view sid="matrixViewerSrv" start="yes" />
                </registry>
            </service>

            <!-- ************************************* Action ************************************ -->

            <service uid="quitAct" type="::gui::action::SQuit" />

            <service uid="showHideParametersAct" type="::gui::action::SBooleanSlotCaller" >
                <slots>
                    <slot>parametersView/setVisible</slot>
                </slots>
            </service>

            <service uid="loadCalibAct" type="::gui::action::SSlotCaller" >
                <slots>
                    <slot>calibrationReaderSrv/update</slot>
                </slots>
            </service>

            <!-- Start the frame grabber -->
            <service uid="startVideoAct" type="::gui::action::SSlotCaller" >
                <slots>
                    <slot>videoGrabberSrv/startCamera</slot>
                </slots>
                <state executable="false" />
            </service>

            <!-- Pause the frame grabber -->
            <service uid="pauseVideoAct" type="::gui::action::SSlotCaller" >
                <slots>
                    <slot>videoGrabberSrv/pauseCamera</slot>
                    <slot>resumeVideoAct/show</slot>
                    <slot>pauseVideoAct/hide</slot>
                </slots>
                <state visible="false" />
            </service>

            <!-- Resume the frame grabber -->
            <service uid="resumeVideoAct" type="::gui::action::SSlotCaller" >
                <slots>
                    <slot>videoGrabberSrv/pauseCamera</slot>
                    <slot>resumeVideoAct/hide</slot>
                    <slot>pauseVideoAct/show</slot>
                </slots>
                <state visible="false" />
            </service>

            <!-- Stop the frame grabber -->
            <service uid="stopVideoAct" type="::gui::action::SSlotCaller" >
                <slots>
                    <slot>videoGrabberSrv/stopCamera</slot>
                    <slot>startVideoAct/show</slot>
                    <slot>resumeVideoAct/hide</slot>
                    <slot>pauseVideoAct/hide</slot>
                    <slot>stopVideoAct/setInexecutable</slot>
                    <slot>loopVideoAct/setInexecutable</slot>
                    <slot>loopVideoAct/deactivate</slot>
                </slots>
                <state executable="false" />
            </service>

            <!-- Loop the frame grabber -->
            <service uid="loopVideoAct" type="::gui::action::SSlotCaller" >
                <slots>
                    <slot>videoGrabberSrv/loopVideo</slot>
                </slots>
                <state executable="false" />
            </service>

            <!-- ******************************* Begin Generic Scene ******************************* -->

            <service uid="genericSceneSrv" type="::fwRenderOgre::SRender" >
                <scene renderMode="sync" >
                    <background topColor="#36393E" bottomColor="#36393E" />

                    <layer id="video" order="1" />
                    <adaptor uid="videoAdp" />

                    <layer id="default" order="2" />
                    <adaptor uid="axisAdp" />
                    <adaptor uid="cameraAdp" />
                </scene>
            </service>

            <service uid="videoAdp" type="::visuOgreAdaptor::SVideo" autoConnect="yes" >
                <in key="image" uid="finalFrame" />
                <config layer="video" />
            </service>

            <service uid="axisAdp" type="::visuOgreAdaptor::SAxis" >
                <config layer="default" length="10" origin="true" label="false" originColor="#D25252" />
            </service>

            <service uid="cameraAdp" type="::visuOgreAdaptor::SCamera" >
                <inout key="transform" uid="cameraToMarker" autoConnect="yes" />
                <in key="calibration" uid="camera" />
                <config layer="default" />
            </service>

            <!-- ************************************* Services ************************************ -->

            <service uid="hybridMarkerParamsSrv" type="::guiQt::editor::SParameters" >
                <parameters>
                    <!-- Show drawing on video or not -->
                    <param type="bool" name="Show drawings" key="showDrawings" defaultValue="true" />
                    <!-- Symmetric pattern size, for curved pattern set the central symmetric pattern size-->
                    <param type="int" name="Symmetric board size width" key="symboardSizeWidth" defaultValue="2" min="0" max="100" />
                    <param type="int" name="Symmetric board size height" key="symboardSizeHeight" defaultValue="5" min="0" max="100" />
                    <!-- The size of the asymmetric pattern in millimeters-->
                    <param type="double" name="Asymmetric square size" key="asymSquareSize" defaultValue="2.0" min="0.0" max="100.0" />
                    <!-- The size of the symmetric pattern (width and height) in millimeters -->
                    <param type="double" name="Symmetric square size X" key="symSquareSizeX" defaultValue="4.0" min="0.0" max="100.0" />
                    <param type="double" name="Symmetric square size Y" key="symSquareSizeY" defaultValue="6.0" min="0.0" max="100.0" />
                    <!-- The radius (millimeter) of cylinder the curved marker is attached on -->
                    <param type="double" name="Radius" key="radius" defaultValue="5.0" min="0.0" max="100.0" />
                    <!-- Distance from the center line to chess line in millimeters-->
                    <param type="double" name="Chess distance center" key="chessDistCenter" defaultValue="8.0" min="0.0" max="100.0" />
                    <!-- Distance between chess in millimeter-->
                    <param type="double" name="Chess interval" key="chessInterval" defaultValue="4.0" min="0.0" max="100.0" />
                </parameters>
            </service>

            <service uid="videoSelectorSrv" type="::videoQt::editor::SCamera" >
                <inout key="camera" uid="camera" />
                <videoSupport>yes</videoSupport>
            </service>

            <service uid="videoGrabberSrv" type="::videoOpenCV::SFrameGrabber" >
                <in key="camera" uid="camera" />
                <inout key="frameTL" uid="frameTL" autoConnect="yes" />
            </service>

            <service uid="frameUpdaterSrv" type="::videoTools::SFrameMatrixSynchronizer" worker="videoWorker" >
                <in group="frameTL" >
                    <key uid="frameTL" autoConnect="yes" />
                </in>
                <inout group="image" >
                    <key uid="sourceFrame" />
                </inout>
                <framerate>0</framerate>
                <tolerance>100</tolerance>
            </service>

            <service uid="videoUndistorterSrv" type="::videoCalibration::SDistortion" >
                <in key="camera" uid="camera" autoConnect="yes" />
                <in key="input" uid="trackedFrame" autoConnect="yes" />
                <inout key="output" uid="finalFrame" />
                <mode>undistort</mode>
            </service>

            <service uid="hybridMarkerTrackerSrv" type="::hybridMarkerTracker::SHybridMarkerTracker" worker="tracking" >
                <in key="camera" uid="camera" autoConnect="yes" />
                <in key="frameIn" uid="sourceFrame" autoConnect="yes" />
                <inout key="frame" uid="trackedFrame" />
                <inout key="pose" uid="poseMatrix" />
            </service>

            <service uid="matrixViewerSrv" type="::uiTools::editor::SMatrixViewer" >
                <in key="matrix" uid="poseMatrix" autoConnect="yes" />
                <title>Pose matrix</title>
            </service>

            <service uid="matrixReverserSrv" type="::maths::SConcatenateMatrices" >
                <in group="matrix" >
                    <key uid="poseMatrix" autoConnect="yes" inverse="true" />
                </in>
                <inout key="output" uid="cameraToMarker" />
            </service>

            <service uid="calibrationReaderSrv" type="::ioCalibration::SOpenCVReader" >
                <inout key="data" uid="cameraSeries" />
            </service>

            <service uid="cameraExtractorSrv" type="::ctrlCamp::SExtractObj" >
                <inout key="source" uid="cameraSeries" >
                    <extract from="@cameras.0" />
                </inout>
                <out group="target" >
                    <key uid="camera" />
                </out>
            </service>

            <service uid="sceneSynchronizerSrv" type="::ctrlCom::SSignalGate" >
                <signal>finalFrame/bufferModified</signal>
                <signal>cameraToMarker/modified</signal>
            </service>

            <!-- ******************************* Connections ***************************************** -->

            <connect>
                <signal>videoSelectorSrv/configuredFile</signal>
                <signal>videoSelectorSrv/configuredStream</signal>
                <signal>videoSelectorSrv/configuredDevice</signal>
                <slot>startVideoAct/update</slot>
            </connect>

            <connect>
                <signal>videoGrabberSrv/cameraStarted</signal>
                <slot>pauseVideoAct/show</slot>
                <slot>startVideoAct/hide</slot>
                <slot>stopVideoAct/setExecutable</slot>
                <slot>loopVideoAct/setExecutable</slot>
            </connect>

            <connect>
                <signal>camera/idModified</signal>
                <slot>videoGrabberSrv/stopCamera</slot>
            </connect>

            <connect>
                <signal>camera/modified</signal>
                <slot>startVideoAct/setExecutable</slot>
                <slot>stopVideoAct/update</slot>
            </connect>

            <connect>
                <signal>sceneSynchronizerSrv/allReceived</signal>
                <slot>frameUpdaterSrv/synchronize</slot>
                <slot>genericSceneSrv/requestRender</slot>
            </connect>

            <connect>
                <signal>videoUndistorterSrv/started</signal>
                <slot>videoUndistorterSrv/changeState</slot>
            </connect>

            <connect>
                <signal>cameraSeries/modified</signal>
                <slot>cameraExtractorSrv/update</slot>
            </connect>

            <connect>
                <signal>hybridMarkerParamsSrv/intChanged</signal>
                <slot>hybridMarkerTrackerSrv/setIntParameter</slot>
            </connect>

            <connect>
                <signal>hybridMarkerParamsSrv/doubleChanged</signal>
                <slot>hybridMarkerTrackerSrv/setDoubleParameter</slot>
            </connect>

            <connect>
                <signal>hybridMarkerParamsSrv/boolChanged</signal>
                <slot>hybridMarkerTrackerSrv/setBoolParameter</slot>
            </connect>

            <!-- ******************************* Start services ***************************************** -->

            <start uid="mainFrame" />
            <start uid="videoGrabberSrv" />
            <start uid="frameUpdaterSrv" />
            <start uid="hybridMarkerTrackerSrv" />
            <start uid="sceneSynchronizerSrv" />
            <start uid="matrixReverserSrv" />
            <start uid="calibrationReaderSrv" />
            <start uid="cameraExtractorSrv" />
            <start uid="videoSelectorSrv" />
            <start uid="videoUndistorterSrv" />
            <start uid="cameraAdp" />
            <start uid="videoAdp" />
            <start uid="axisAdp" />

        </config>
    </extension>
</plugin>
