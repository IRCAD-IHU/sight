<plugin id="ExIgtl" version="@PROJECT_VERSION@" >

    <requirement id="guiQt" />
    <requirement id="servicesReg" />
    <requirement id="visuOgre" />
    <requirement id="visuOgreQt" />
    <requirement id="material" />
    <requirement id="preferences" />

    <extension implements="::fwServices::registry::AppConfig" >
        <id>ExIgtl_AppCfg</id>
        <config>

            <!-- ******************************* Objects declaration ****************************** -->

            <object uid="objectMeshUid" type="::fwData::Mesh" />
            <object uid="cameraMatrix" type="::fwData::TransformationMatrix3D" />
            <object uid="meshMatrix" type="::fwData::TransformationMatrix3D" >
                <matrix>
                    <![CDATA[
                        1    0    0    5
                        0    1    0    0
                        0    0    1    0
                        0    0    0    1
                    ]]>
                </matrix>
            </object>

            <!-- ******************************* UI declaration *********************************** -->

            <service uid="mainFrame" type="::gui::frame::SDefaultFrame" >
                <gui>
                    <toolBar/>
                    <frame>
                        <name>ExIgtl</name>
                        <icon>ExIgtl-@PROJECT_VERSION@/tuto.ico</icon>
                    </frame>
                </gui>
                <registry>
                    <toolBar sid="toolbarView" start="yes" />
                    <view sid="genericSceneSrv" start="yes" />
                </registry>
            </service>

            <service uid="toolbarView" type="::gui::aspect::SDefaultToolBar" >
                <gui>
                    <layout>
                        <editor/>
                        <menuItem name="Load mesh" icon="flatIcon-0.1/icons/BlueLoad.svg" />
                        <separator/>
                        <menuItem name="start sender" icon="flatIcon-0.1/icons/GreenServerConnected.svg" />
                        <menuItem name="stop sender" icon="flatIcon-0.1/icons/RedServerDisconnected.svg" />
                        <menuItem name="configure sender" icon="flatIcon-0.1/icons/BlueParametersConnected.svg" />
                        <separator/>
                        <menuItem name="start listener" icon="flatIcon-0.1/icons/GreenServerConnected.svg" />
                        <menuItem name="stop listener" icon="flatIcon-0.1/icons/RedServerDisconnected.svg" />
                        <menuItem name="configure listener" icon="flatIcon-0.1/icons/BlueParametersConnected.svg" />
                        <separator/>
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="loadMeshAct" start="yes" />
                    <menuItem sid="startServerAct" start="yes" />
                    <menuItem sid="stopServerAct" start="yes" />
                    <menuItem sid="configureServerAct" start="yes" />
                    <menuItem sid="startClientAct" start="yes" />
                    <menuItem sid="stopClientAct" start="yes" />
                    <menuItem sid="configureClientAct" start="yes" />
                </registry>
            </service>

            <!-- ************************************* Action ************************************ -->

            <service uid="loadMeshAct" type="::gui::action::SSlotCaller" >
                <slots>
                    <slot>meshReaderSrv/update</slot>
                </slots>
            </service>

            <service uid="startServerAct" type="::gui::action::SStarter" >
                <start uid="matrixNetworkSenderSrv" />
            </service>

            <service uid="stopServerAct" type="::gui::action::SStarter" >
                <stop uid="matrixNetworkSenderSrv" />
                <state visible="false" />
            </service>

            <service uid="configureServerAct" type="::uiPreferences::action::SPreferencesConfiguration" >
                <preference>
                    <type>int</type>
                    <name>Server port</name>
                    <key>SERVER_PORT_KEY</key>
                    <default_value>4242</default_value>
                </preference>
            </service>

            <service uid="startClientAct" type="::gui::action::SStarter" >
                <start uid="matrixNetworkListenerSrv" />
            </service>

            <service uid="stopClientAct" type="::gui::action::SStarter" >
                <stop uid="matrixNetworkListenerSrv" />
                <state visible="false" />
            </service>

            <service uid="configureClientAct" type="::uiPreferences::action::SPreferencesConfiguration" >
                <preference>
                    <type>text</type>
                    <name>Client IP address</name>
                    <key>CLIENT_IP_KEY</key>
                    <default_value>127.0.0.1</default_value>
                </preference>
                <preference>
                    <type>int</type>
                    <name>Client port</name>
                    <key>CLIENT_PORT_KEY</key>
                    <default_value>4242</default_value>
                </preference>
            </service>

            <!-- ******************************* Begin Generic Scene ******************************* -->

            <service uid="genericSceneSrv" type="::fwRenderOgre::SRender" >
                <scene>
                    <background topColor="#36393E" bottomColor="#36393E" />

                    <layer id="default" order="1" />
                    <adaptor uid="trackballInteractorAdp" />
                    <adaptor uid="cameraAdp" />
                    <adaptor uid="transformAdp" />
                    <adaptor uid="meshAdp" />
                </scene>
            </service>

            <service uid="trackballInteractorAdp" type="::visuOgreAdaptor::STrackballCamera" >
                <config layer="default" priority="0" />
            </service>

            <service uid="cameraAdp" type="::visuOgreAdaptor::SCamera" autoConnect="yes" >
                <inout key="transform" uid="cameraMatrix" />
                <config layer="default" />
            </service>

            <service uid="transformAdp" type="::visuOgreAdaptor::STransform" autoConnect="yes" >
                <inout key="transform" uid="meshMatrix" />
                <config layer="default" transform="meshMatrixTransform" />
            </service>

            <service uid="meshAdp" type="::visuOgreAdaptor::SMesh" autoConnect="yes" >
                <inout key="mesh" uid="objectMeshUid" />
                <config layer="default" transform="meshMatrixTransform" autoresetcamera="no" />
            </service>

            <!-- ************************************* Services ************************************ -->

            <service uid="meshReaderSrv" type="::uiIO::editor::SIOSelector" >
                <inout key="data" uid="objectMeshUid" />
            </service>

            <service uid="matrixNetworkListenerSrv" type="::ioIGTL::SClientListener" >
                <inout group="objects" >
                    <key uid="meshMatrix" deviceName="device01" />
                    <key uid="cameraMatrix" deviceName="device02" />
                </inout>
                <server>%CLIENT_IP_KEY%:%CLIENT_PORT_KEY%</server>
            </service>

            <service uid="matrixNetworkSenderSrv" type="::ioIGTL::SServerSender" autoConnect="yes" >
                <in group="objects" >
                    <key uid="meshMatrix" deviceName="device01" />
                    <key uid="cameraMatrix" deviceName="device02" />
                </in>
                <port>%SERVER_PORT_KEY%</port>
            </service>

            <!-- ******************************* Connections ***************************************** -->

            <connect>
                <signal>matrixNetworkSenderSrv/connected</signal>
                <slot>startServerAct/hide</slot>
                <slot>stopServerAct/show</slot>
            </connect>

            <connect>
                <signal>matrixNetworkSenderSrv/disconnected</signal>
                <slot>startServerAct/show</slot>
                <slot>stopServerAct/hide</slot>
            </connect>

            <connect>
                <signal>matrixNetworkListenerSrv/connected</signal>
                <slot>startClientAct/hide</slot>
                <slot>stopClientAct/show</slot>
            </connect>

            <connect>
                <signal>matrixNetworkListenerSrv/disconnected</signal>
                <slot>startClientAct/show</slot>
                <slot>stopClientAct/hide</slot>
            </connect>

            <!-- ******************************* Start services ***************************************** -->

            <start uid="mainFrame" />
            <start uid="meshReaderSrv" />
            <start uid="trackballInteractorAdp" />
            <start uid="cameraAdp" />
            <start uid="transformAdp" />
            <start uid="meshAdp" />

        </config>
    </extension>
</plugin>
