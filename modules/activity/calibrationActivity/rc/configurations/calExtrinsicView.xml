<extension implements="::fwServices::registry::AppConfig">
    <id>calExtrinsicView</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="cameraSeries" />
        <param name="camera1" />
        <param name="camera2" />
        <param name="calibrationInfo1" />
        <param name="calibrationInfo2" />
        <param name="camIndex" />
        <param name="preferencesModifiedProxy" />
    </parameters>
    <config>

        <!-- ******************************* Objects declaration ****************************** -->

        <!-- Displayed image pair. -->
        <object uid="frame1" type="::fwData::Image" />
        <object uid="frame2" type="::fwData::Image" />

        <!-- Second pair of images used for detection. Prevents the detector from slowing down the video. -->
        <object uid="frame1TL" type="::arData::FrameTL" />
        <object uid="frame2TL" type="::arData::FrameTL" />
        <object uid="${calibrationInfo1}" type="::arData::CalibrationInfo" src="ref" />
        <object uid="${calibrationInfo2}" type="::arData::CalibrationInfo" src="ref" />
        <object uid="${cameraSeries}" type="::arData::CameraSeries" src="ref" />
        <object uid="${camera1}" type="::arData::Camera" src="ref" />
        <object uid="${camera2}" type="::arData::Camera" src="ref" />
        <object uid="exportExtrinsicMat" type="::fwData::TransformationMatrix3D" src="deferred" />

        <!-- ******************************* UI declaration *********************************** -->

        <service uid="mainView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view proportion="2" />
                    <view proportion="7" />
                </layout>
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <view sid="leftPanelView" start="yes" />
                <view sid="videoView" start="yes" />
            </registry>

        </service>

        <service uid="leftPanelView" type="::gui::view::SDefaultView" >
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="toolboxView" start="yes" />
                <view sid="errorLabelSrv" start="yes" />
            </registry>
        </service>

        <service uid="toolboxView" type="::gui::view::SDefaultView" >
            <gui>
                <toolBar/>
                <layout type="::fwGui::ToolboxLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" caption="Calibration input" expanded="true" />
                    <view proportion="1" caption="Calibration result" expanded="true" />
                </layout>
            </gui>
            <registry>
                <toolBar sid="videoToolbarView" start="yes" />
                <view sid="calibrationDataView" start="yes" />
                <view sid="cameraInfoView" start="yes" />
            </registry>
        </service>

        <service uid="videoToolbarView" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <menuItem name="Start" icon="flatIcon-0.1/icons/GreenStart.svg" shortcut="Space" />
                    <menuItem name="Pause" icon="flatIcon-0.1/icons/OrangePause.svg" shortcut="Space" />
                    <menuItem name="Play" icon="flatIcon-0.1/icons/GreenStart.svg" shortcut="Space" />
                    <menuItem name="Stop" icon="flatIcon-0.1/icons/RedStop.svg" />
                    <menuItem name="Loop" icon="flatIcon-0.1/icons/OrangeLoop.svg" style="check" />
                </layout>
            </gui>
            <registry>
                <menuItem sid="startVideoAct" start="yes" />
                <menuItem sid="pauseVideoAct" start="yes" />
                <menuItem sid="resumeVideoAct" start="yes" />
                <menuItem sid="stopVideoAct" start="yes" />
                <menuItem sid="loopVideoAct" start="yes" />
            </registry>
        </service>

        <service uid="calibrationDataView" type="::gui::view::SDefaultView">
            <gui>
                <toolBar>
                    <toolBitmapSize height="24" width="24" />
                </toolBar>
                <layout type="::fwGui::CardinalLayoutManager">
                    <view align="center" />
                </layout>
            </gui>
            <registry>
                <toolBar sid="extrinsicCameraView" start="yes" />
                <view sid="calibrationInfoEditorSrv" start="yes" />
            </registry>
        </service>


        <service uid="cameraInfoView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view caption="camera 1" />
                    <view caption="camera 2" />
                    <view caption="Extrinsic (1 to 2)" />
                </layout>
            </gui>
            <registry>
                <view sid="cameraInfo1Srv" start="yes" />
                <view sid="cameraInfo2Srv" start="yes" />
                <view sid="cameraSeriesInfoSrv" start="yes" />
            </registry>
        </service>

        <service uid="extrinsicCameraView" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <editor/>
                    <menuItem name="Add" icon="flatIcon-0.1/icons/GreenPlus.svg"  shortcut="A" />
                    <menuItem name="Remove" icon="flatIcon-0.1/icons/RedMinus.svg" />
                    <menuItem name="Calibrate" icon="flatIcon-0.1/icons/YellowPhoto.svg" shortcut="Return" />
                    <menuItem name="Display" icon="flatIcon-0.1/icons/YellowFullscreen.svg" />
                    <menuItem name="Reset" icon="flatIcon-0.1/icons/RedReset.svg" />
                    <menuItem name="Export extrinsic matrix" icon="flatIcon-0.1/icons/BlueLoad.svg" />
                    <menuItem name="Save calibration images" icon="flatIcon-0.1/icons/BlueLoad.svg" />
                    <menuItem name="Load calibration images" icon="flatIcon-0.1/icons/BlueSave.svg" />
                </layout>
            </gui>
            <registry>
                <editor sid="detectionStatusSrv" start="yes" />
                <menuItem sid="addAct" start="yes" />
                <menuItem sid="removeAct" start="yes" />
                <menuItem sid="goOpenCVAct" start="yes" />
                <menuItem sid="displayImageAct" start="yes" />
                <menuItem sid="resetAct" start="yes" />
                <menuItem sid="exportExtrinsicAct" start="yes" />
                <menuItem sid="saveInputsAct" start="yes" />
                <menuItem sid="loadInputsAct" start="yes" />
            </registry>
        </service>

        <service uid="videoView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                </layout>
                <slideView opacity="1" hAlign="left" vAlign="bottom" height="35" >
                    <styleSheet>
                        <![CDATA[
                        #SlideBar QWidget {
                            background-color: none;
                        }
                        ]]>
                    </styleSheet>
                </slideView>
            </gui>
            <registry>
                <view sid="genericSceneSrv" start="yes" />
                <slideView sid="videoSliderView" start="yes" />
            </registry>
        </service>

        <service uid="videoSliderView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <spacer />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="videoSliderSrv" start="yes" />
            </registry>
        </service>

        <!-- ************************************* Action ************************************ -->

        <service uid="addAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>chessboardDetectorSrv/recordPoints</slot>
            </slots>
        </service>

        <service uid="resetAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>calibrationInfoEditorSrv/reset</slot>
            </slots>
        </service>

        <service uid="removeAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>calibrationInfoEditorSrv/remove</slot>
            </slots>
        </service>

        <service uid="goOpenCVAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>openCVExtrinsicCalSrv/update</slot>
                <slot>Status/changeToOrange</slot>
            </slots>
        </service>

        <service uid="displayImageAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>calibrationInfoEditorSrv/getSelection</slot>
            </slots>
        </service>

        <!-- Start the frame grabber -->
        <service uid="startVideoAct" type="::gui::action::SSlotCaller" >
            <slots>
                <slot>videoGrabber1Srv/startCamera</slot>
                <slot>videoGrabber2Srv/startCamera</slot>
            </slots>
        </service>

        <!-- Pause the frame grabber -->
        <service uid="pauseVideoAct" type="::gui::action::SSlotCaller" >
            <slots>
                <slot>videoGrabber1Srv/pauseCamera</slot>
                <slot>videoGrabber2Srv/pauseCamera</slot>
                <slot>resumeVideoAct/show</slot>
                <slot>pauseVideoAct/hide</slot>
            </slots>
            <state visible="false" />
        </service>

        <!-- Resume the frame grabber -->
        <service uid="resumeVideoAct" type="::gui::action::SSlotCaller" >
            <slots>
                <slot>videoGrabber1Srv/pauseCamera</slot>
                <slot>videoGrabber2Srv/pauseCamera</slot>
                <slot>resumeVideoAct/hide</slot>
                <slot>pauseVideoAct/show</slot>
            </slots>
            <state visible="false" />
        </service>

        <!-- Stop the frame grabber -->
        <service uid="stopVideoAct" type="::gui::action::SSlotCaller" >
            <slots>
                <slot>videoGrabber1Srv/stopCamera</slot>
                <slot>videoGrabber2Srv/stopCamera</slot>
                <slot>startVideoAct/show</slot>
                <slot>resumeVideoAct/hide</slot>
                <slot>pauseVideoAct/hide</slot>
                <slot>stopVideoAct/setInexecutable</slot>
                <slot>loopVideoAct/setInexecutable</slot>
                <slot>loopVideoAct/deactivate</slot>
            </slots>
            <state executable="false" />
        </service>

        <!-- Loop the frame grabber -->
        <service uid="loopVideoAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>videoGrabber1Srv/loopVideo</slot>
                <slot>videoGrabber2Srv/loopVideo</slot>
            </slots>
            <state executable="false" />
        </service>

        <service uid="exportExtrinsicAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>extrinsicExporterSrv/update</slot>
            </slots>
        </service>

        <service uid="saveInputsAct" type="::gui::action::SSlotCaller">
            <sync>true</sync>
            <slots>
                <slot>calibrationDataWriter1Srv/configureWithUI</slot>
                <slot>calibrationDataWriter1Srv/update</slot>
                <slot>calibrationDataWriter2Srv/configureWithUI</slot>
                <slot>calibrationDataWriter2Srv/update</slot>
            </slots>
        </service>

        <service uid="loadInputsAct" type="::gui::action::SSlotCaller">
            <sync>true</sync>
            <slots>
                <slot>calibrationDataReader1Srv/configureWithUI</slot>
                <slot>calibrationDataReader1Srv/update</slot>
                <slot>calibrationDataReader2Srv/configureWithUI</slot>
                <slot>calibrationDataReader2Srv/update</slot>
            </slots>
        </service>

        <!-- ******************************* Begin Generic Scene ******************************* -->

        <service uid="genericSceneSrv" type="::fwRenderOgre::SRender" >
            <scene>
                <background topColor="#000000" bottomColor="#000000" />

                <layer id="video1" order="1">
                    <viewport width="0.5" height="1.0" hAlign="left" vAlign="top"/>
                </layer>
                <adaptor uid="video1Adp" />

                <layer id="video2" order="2">
                    <viewport width="0.5" height="1.0" hAlign="right" vAlign="top"/>
                </layer>
                <adaptor uid="video2Adp" />
            </scene>
        </service>

        <service uid="video1Adp" type="::visuOgreAdaptor::SVideo" autoConnect="yes" >
            <in key="image" uid="frame1" />
            <config layer="video1" />
        </service>

        <service uid="video2Adp" type="::visuOgreAdaptor::SVideo" autoConnect="yes" >
            <in key="image" uid="frame2" />
            <config layer="video2" />
        </service>

        <!-- ************************************* Services ************************************ -->

        <service uid="videoSliderSrv" type="::videoQt::editor::SSlider" />

        <!-- Extracts images for the detection algorithm. -->
        <service uid="frameSynchronizerSrv" type="::videoTools::SFrameMatrixSynchronizer" worker="extr_chess_checker">
            <in group="frameTL" autoConnect="yes" >
                <key uid="frame1TL" />
                <key uid="frame2TL" />
            </in>
            <inout group="image">
                <key uid="frame1" />
                <key uid="frame2" />
            </inout>
            <framerate>0</framerate>
        </service>

        <service uid="extrinsicExporterSrv" type="::uiIO::editor::SIOSelector" >
            <inout key="data" uid="exportExtrinsicMat" />
            <type mode="writer" />
            <selection mode="include" />
            <addSelection service="::ioData::TransformationMatrix3DWriterService" />
        </service>

        <service uid="calibrationInfoEditorSrv" type="::uiCalibration::SCalibrationInfoEditor" >
            <inout key="calInfo1" uid="${calibrationInfo1}" />
            <inout key="calInfo2" uid="${calibrationInfo2}" />
        </service>

        <service uid="detectionStatusSrv" type="::uiTools::editor::SStatus">
            <green>Point are visible</green>
            <orange>Calibration in progress</orange>
            <red>Points are NOT visible</red>
        </service>

        <service uid="errorLabelSrv" type="::uiTools::editor::STextStatus">
            <label>Reprojection error (RMSE)</label>
            <color>#D25252</color>
        </service>

        <service uid="chessboardDetectorSrv" type="::videoCalibration::SChessBoardDetector" worker="extr_chess_checker">
            <in group="image" autoConnect="yes" >
                <key uid="frame1" />
                <key uid="frame2" />
            </in>
            <inout group="calInfo">
                <key uid="${calibrationInfo1}" />
                <key uid="${calibrationInfo2}" />
            </inout>
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" scale="CHESSBOARD_SCALE" />
        </service>

        <service uid="displayCalibrationInfoSrv" type="::uiCalibration::SDisplayCalibrationInfo">
            <in key="calInfo1" uid="${calibrationInfo1}" />
            <in key="calInfo2" uid="${calibrationInfo2}" />
        </service>

        <service uid="videoGrabber1Srv" type="::videoTools::SGrabberProxy">
            <in key="camera" uid="${camera1}" />
            <inout key="frameTL" uid="frame1TL" />
            <config>
                <gui title="Please select the first camera grabber" />
            </config>
        </service>

        <service uid="videoGrabber2Srv" type="::videoTools::SGrabberProxy">
            <in key="camera" uid="${camera2}" />
            <inout key="frameTL" uid="frame2TL" />
            <config>
                <gui title="Please select the second camera grabber" />
            </config>
        </service>

        <service uid="openCVExtrinsicCalSrv" type="::videoCalibration::SOpenCVExtrinsic" worker="extr_chess_checker">
            <in key="calibrationInfo1" uid="${calibrationInfo1}" />
            <in key="calibrationInfo2" uid="${calibrationInfo2}" />
            <inout key="cameraSeries" uid="${cameraSeries}" />
            <out   key="matrix" uid="exportExtrinsicMat" />
            <camIndex>${camIndex}</camIndex>
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" squareSize="CHESSBOARD_SQUARE_SIZE" />
        </service>

        <service uid="cameraSeriesInfoSrv" type="::uiCalibration::SCameraSeriesEditor" autoConnect="yes">
            <in key="cameraSeries" uid="${cameraSeries}" />
            <camIndex>${camIndex}</camIndex>
        </service>

        <service uid="cameraInfo1Srv" type="::uiCalibration::SCameraInformationEditor" autoConnect="yes">
            <in key="camera" uid="${camera1}" />
        </service>

        <service uid="cameraInfo2Srv" type="::uiCalibration::SCameraInformationEditor" autoConnect="yes">
            <in key="camera" uid="${camera2}" />
        </service>

        <service uid="calibrationDataWriter1Srv" type="::ioCalibration::SCalibrationImagesWriter">
            <in key="data" uid="${calibrationInfo1}" />
            <format>.tiff</format>
        </service>

        <service uid="calibrationDataWriter2Srv" type="::ioCalibration::SCalibrationImagesWriter">
            <in key="data" uid="${calibrationInfo2}" />
            <format>.tiff</format>
        </service>

        <service uid="calibrationDataReader1Srv" type="::ioCalibration::SCalibrationInfoReader">
            <windowTitle>Load left images.</windowTitle>
            <inout key="data" uid="${calibrationInfo1}" />
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" scale="CHESSBOARD_SCALE" />
        </service>

        <service uid="calibrationDataReader2Srv" type="::ioCalibration::SCalibrationInfoReader">
            <windowTitle>Load right images.</windowTitle>
            <inout key="data" uid="${calibrationInfo2}" />
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" scale="CHESSBOARD_SCALE" />
        </service>

        <!-- ******************************* Connections ***************************************** -->

        <connect>
            <signal>videoGrabber1Srv/cameraStarted</signal>
            <signal>videoGrabber2Srv/cameraStarted</signal>
            <slot>pauseVideoAct/show</slot>
            <slot>startVideoAct/hide</slot>
            <slot>stopVideoAct/setExecutable</slot>
            <slot>loopVideoAct/setExecutable</slot>
        </connect>

        <connect>
            <signal>${camera}/idModified</signal>
            <slot>videoGrabber1Srv/stopCamera</slot>
            <slot>videoGrabber2Srv/stopCamera</slot>
        </connect>

        <connect>
            <signal>${camera}/modified</signal>
            <slot>stopVideoAct/update</slot>
        </connect>

        <!-- Manage the video slider -->
        <connect>
            <signal>videoSliderSrv/positionChanged</signal>
            <slot>videoGrabber1Srv/setPositionVideo</slot>
            <slot>videoGrabber2Srv/setPositionVideo</slot>
        </connect>

        <connect>
            <signal>videoGrabber1Srv/positionModified</signal>
            <signal>videoGrabber2Srv/positionModified</signal>
            <slot>videoSliderSrv/setPositionSlider</slot>
        </connect>

        <connect>
            <signal>videoGrabber1Srv/durationModified</signal>
            <signal>videoGrabber2Srv/durationModified</signal>
            <slot>videoSliderSrv/setDurationSlider</slot>
        </connect>

        <connect>
            <signal>chessboardDetectorSrv/chessboardDetected</signal>
            <slot>frameSynchronizerSrv/synchronize</slot>
            <slot>detectionStatusSrv/toggleGreenRed</slot>
        </connect>

        <connect>
            <signal>${calibrationInfo1}/getRecord</signal>
            <slot>displayCalibrationInfoSrv/displayImage</slot>
        </connect>

        <connect>
            <signal>${calibrationInfo2}/addedRecord</signal>
            <signal>${calibrationInfo2}/removedRecord</signal>
            <signal>${calibrationInfo2}/resetRecord</signal>
            <signal>calibrationDataReader2Srv/updated</signal>
            <slot>calibrationInfoEditorSrv/update</slot>
        </connect>

        <connect>
            <signal>openCVExtrinsicCalSrv/errorComputed</signal>
            <slot>errorLabelSrv/setDoubleParameter</slot>
        </connect>

        <connect channel="${preferencesModifiedProxy}">
            <slot>openCVExtrinsicCalSrv/updateChessboardSize</slot>
            <slot>chessboardDetectorSrv/updateChessboardSize</slot>
            <slot>calibrationDataReader1Srv/updateChessboardSize</slot>
            <slot>calibrationDataReader2Srv/updateChessboardSize</slot>
        </connect>

        <connect>
            <signal>mainView/started</signal>
            <slot>videoSliderView/show</slot>
        </connect>

        <!-- ******************************* Start/Stop services ***************************************** -->

        <start uid="mainView" />
        <start uid="openCVExtrinsicCalSrv" />
        <start uid="chessboardDetectorSrv" />
        <start uid="displayCalibrationInfoSrv" />
        <start uid="extrinsicExporterSrv" />
        <start uid="frameSynchronizerSrv" />
        <start uid="videoGrabber1Srv" />
        <start uid="videoGrabber2Srv" />
        <start uid="calibrationDataWriter1Srv" />
        <start uid="calibrationDataWriter2Srv" />
        <start uid="calibrationDataReader1Srv" />
        <start uid="calibrationDataReader2Srv" />
        <start uid="video1Adp" />
        <start uid="video2Adp" />

    </config>
</extension>
