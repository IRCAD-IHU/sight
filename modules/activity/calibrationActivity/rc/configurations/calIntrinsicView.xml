<extension implements="::fwServices::registry::AppConfig">
    <id>calIntrinsicView</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="camera" />
        <param name="calibrationInfo" />
        <param name="preferencesModifiedProxy" />
    </parameters>
    <config>

        <!-- ******************************* Objects declaration ****************************** -->

        <object uid="${calibrationInfo}" type="::arData::CalibrationInfo" src="ref" />
        <object uid="${camera}" type="::arData::Camera" src="ref" />
        <object uid="frameTL" type="::arData::FrameTL" />
        <object uid="videoFrame" type="::fwData::Image" />
        <object uid="distortedFrame" type="::fwData::Image" />

        <object uid="detectedChessboard" type="::fwData::PointList" />
        <object uid="chessboardModel" type="::fwData::PointList" src="deferred" />
        <object uid="cameraPoseMx" type="::fwData::TransformationMatrix3D" />

        <!-- ******************************* UI declaration *********************************** -->

        <service uid="mainView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view proportion="2" />
                    <view proportion="7" />
                </layout>
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <view sid="leftPanelView" start="yes" />
                <view sid="cameraView" start="yes" />
            </registry>
        </service>

        <service uid="leftPanelView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="toolboxView" start="yes" />
                <view sid="errorLabelSrv" start="yes" />
            </registry>
        </service>

        <service uid="toolboxView" type="::gui::view::SDefaultView">
            <gui>
                <toolBar/>
                <layout type="::fwGui::ToolboxLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="3" caption="Calibration input" expanded="true" />
                    <view proportion="1" caption="Calibration result" expanded="true" />
                </layout>
            </gui>
            <registry>
                <toolBar sid="videoToolbarView" start="yes" />
                <view sid="calibrationDataView" start="yes" />
                <view sid="cameraInfoSrv" start="yes" />
            </registry>
        </service>

        <service uid="videoToolbarView" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <editor />
                    <separator />
                    <menuItem name="Start" icon="flatIcon-0.1/icons/GreenStart.svg" shortcut="Space" />
                    <menuItem name="Pause" icon="flatIcon-0.1/icons/OrangePause.svg" shortcut="Space" />
                    <menuItem name="Play" icon="flatIcon-0.1/icons/GreenStart.svg" shortcut="Space" />
                    <menuItem name="Stop" icon="flatIcon-0.1/icons/RedStop.svg" />
                    <menuItem name="Loop" icon="flatIcon-0.1/icons/OrangeLoop.svg" style="check" />
                    <separator />
                    <menuItem name="Undistort video" icon="flatIcon-0.1/icons/YellowDistortion.svg" style="check" />
                </layout>
            </gui>
            <registry>
                <editor sid="videoSelectorSrv" start="yes" />
                <menuItem sid="startVideoAct" start="yes" />
                <menuItem sid="pauseVideoAct" start="yes" />
                <menuItem sid="resumeVideoAct" start="yes" />
                <menuItem sid="stopVideoAct" start="yes" />
                <menuItem sid="loopVideoAct" start="yes" />
                <menuItem sid="distortionAct" start="yes" />
            </registry>
        </service>

        <service uid="calibrationDataView" type="::gui::view::SDefaultView">
            <gui>
                <toolBar>
                    <toolBitmapSize height="24" width="24" />
                </toolBar>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                </layout>
            </gui>
            <registry>
                <toolBar sid="intrinsicCameraView" start="yes" />
                <view sid="calibrationInfoEditorSrv" start="yes" />
            </registry>
        </service>

        <service uid="intrinsicCameraView" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <editor/>
                    <menuItem name="Add" icon="flatIcon-0.1/icons/GreenPlus.svg"  shortcut="A" />
                    <menuItem name="Remove" icon="flatIcon-0.1/icons/RedMinus.svg" />
                    <menuItem name="Calibrate" icon="flatIcon-0.1/icons/YellowPhoto.svg" shortcut="Return" />
                    <menuItem name="Display" icon="flatIcon-0.1/icons/YellowFullscreen.svg" />
                    <menuItem name="Edit" icon="flatIcon-0.1/icons/BlueParametersCamera.svg" />
                    <menuItem name="Reset" icon="flatIcon-0.1/icons/RedReset.svg" />
                    <menuItem name="Save calibration images" icon="flatIcon-0.1/icons/BlueLoad.svg" />
                    <menuItem name="Load calibration images" icon="flatIcon-0.1/icons/BlueSave.svg" />
                </layout>
            </gui>
            <registry>
                <editor sid="detectionStatusSrv" start="yes" />
                <menuItem sid="addAct" start="yes" />
                <menuItem sid="removeAct" start="yes" />
                <menuItem sid="goOpenCVAct" start="yes" />
                <menuItem sid="displayImageAct" start="yes" />
                <menuItem sid="editionAct" start="yes" />
                <menuItem sid="resetAct" start="yes" />
                <menuItem sid="saveInputsAct" start="yes" />
                <menuItem sid="loadInputsAct" start="yes" />
            </registry>
        </service>

        <service uid="cameraView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                </layout>
                <slideView opacity="1" hAlign="left" vAlign="bottom" height="35" >
                    <styleSheet>
                        <![CDATA[
                        #SlideBar QWidget {
                            background-color: none;
                        }
                        ]]>
                    </styleSheet>
                </slideView>
            </gui>
            <registry>
                <view sid="genericSceneSrv" start="yes" />
                <slideView sid="videoSliderView" start="yes" />
            </registry>
        </service>

        <service uid="videoSliderView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <spacer />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="videoSliderSrv" start="yes" />
            </registry>
        </service>

        <!-- ************************************* Action ************************************ -->

        <!-- Start the frame grabber -->
        <service uid="startVideoAct" type="::gui::action::SSlotCaller" >
            <slots>
                <slot>videoGrabberSrv/startCamera</slot>
            </slots>
            <state executable="false" />
        </service>

        <!-- Pause the frame grabber -->
        <service uid="pauseVideoAct" type="::gui::action::SSlotCaller" >
            <slots>
                <slot>videoGrabberSrv/pauseCamera</slot>
                <slot>resumeVideoAct/show</slot>
                <slot>pauseVideoAct/hide</slot>
            </slots>
            <state visible="false" />
        </service>

        <!-- Resume the frame grabber -->
        <service uid="resumeVideoAct" type="::gui::action::SSlotCaller" >
            <slots>
                <slot>videoGrabberSrv/pauseCamera</slot>
                <slot>resumeVideoAct/hide</slot>
                <slot>pauseVideoAct/show</slot>
            </slots>
            <state visible="false" />
        </service>

        <!-- Stop the frame grabber -->
        <service uid="stopVideoAct" type="::gui::action::SSlotCaller" >
            <slots>
                <slot>videoGrabberSrv/stopCamera</slot>
                <slot>startVideoAct/show</slot>
                <slot>resumeVideoAct/hide</slot>
                <slot>pauseVideoAct/hide</slot>
                <slot>stopVideoAct/setInexecutable</slot>
                <slot>loopVideoAct/setInexecutable</slot>
                <slot>loopVideoAct/deactivate</slot>
            </slots>
            <state executable="false" />
        </service>

        <!-- Loop the frame grabber -->
        <service uid="loopVideoAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>videoGrabberSrv/loopVideo</slot>
            </slots>
            <state executable="false" />
        </service>

        <service uid="distortionAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>distorterSrv/changeState</slot>
                <slot>chessboardReprojectionSrv/toggleDistortion</slot>
            </slots>
            <state executable="false" />
        </service>

        <service uid="addAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>chessboardDetectorSrv/recordPoints</slot>
            </slots>
        </service>

        <service uid="resetAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>calibrationInfoEditorSrv/reset</slot>
            </slots>
        </service>

        <service uid="removeAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>calibrationInfoEditorSrv/remove</slot>
            </slots>
        </service>

        <service uid="editionAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>intrinsicEditionSrv/update</slot>
            </slots>
        </service>

        <service uid="goOpenCVAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>intrinsicCalibrationSrv/update</slot>
                <slot>detectionStatusSrv/changeToOrange</slot>
            </slots>
        </service>

        <service uid="displayImageAct" type="::gui::action::SSlotCaller">
            <slots>
                <slot>calibrationInfoEditorSrv/getSelection</slot>
            </slots>
        </service>

        <service uid="saveInputsAct" type="::gui::action::SSlotCaller">
            <sync>true</sync>
            <slots>
                <slot>calibrationDataWriterSrv/configureWithIHM</slot>
                <slot>calibrationDataWriterSrv/update</slot>
            </slots>
        </service>

        <service uid="loadInputsAct" type="::gui::action::SSlotCaller">
            <sync>true</sync>
            <slots>
                <slot>calibrationDataReaderSrv/configureWithIHM</slot>
                <slot>calibrationDataReaderSrv/update</slot>
            </slots>
        </service>

        <!-- ************************************* Services ************************************ -->

        <service uid="videoSliderSrv" type="::videoQt::editor::SSlider" />

        <service uid="detectionStatusSrv" type="::uiTools::editor::SStatus">
            <green>Point are visible</green>
            <orange>Calibration in progress</orange>
            <red>Points are NOT visible</red>
        </service>

        <service uid="errorLabelSrv" type="::uiTools::editor::STextStatus">
            <label>Reprojection error (RMSE)</label>
            <color>#D25252</color>
        </service>

        <service uid="displayCalibrationInfoSrv" type="::uiCalibration::SDisplayCalibrationInfo">
            <in key="calInfo1" uid="${calibrationInfo}" />
        </service>

        <service uid="calibrationInfoEditorSrv" type="::uiCalibration::SCalibrationInfoEditor" autoConnect="yes">
            <inout key="calInfo1" uid="${calibrationInfo}" />
        </service>

        <service uid="intrinsicCalibrationSrv" type="::videoCalibration::SOpenCVIntrinsic">
            <in key="calibrationInfo" uid="${calibrationInfo}" />
            <inout key="camera" uid="${camera}" />
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" squareSize="CHESSBOARD_SQUARE_SIZE" />
        </service>

        <service uid="computeCameraPoseSrv" type="::registrationCV::SSolvePnP" worker="intr_chess_checker">
            <in key="pointList2d" uid="detectedChessboard" />
            <in key="pointList3d" uid="chessboardModel" />
            <in key="calibration" uid="${camera}" />
            <inout key="matrix" uid="cameraPoseMx" />
            <config inverse="false" />
        </service>

        <service uid="cameraInfoSrv" type="::uiCalibration::SCameraInformationEditor" autoConnect="yes">
            <in key="camera" uid="${camera}" />
        </service>

        <service uid="intrinsicEditionSrv" type="::uiCalibration::SIntrinsicEdition">
            <inout key="camera" uid="${camera}" />
        </service>

        <service uid="calibrationDataWriterSrv" type="::ioCalibration::SCalibrationImagesWriter">
            <in key="data" uid="${calibrationInfo}" />
            <format>.tiff</format>
        </service>

        <service uid="calibrationDataReaderSrv" type="::ioCalibration::SCalibrationInfoReader">
            <inout key="data" uid="${calibrationInfo}" />
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" scale="CHESSBOARD_SCALE" />
        </service>

        <service uid="videoSelectorSrv" type="::videoQt::editor::SCamera">
            <inout key="camera" uid="${camera}" />
            <videoSupport>yes</videoSupport>
            <label></label>
        </service>

        <service uid="videoGrabberSrv" type="::videoTools::SGrabberProxy">
            <in key="camera" uid="${camera}" />
            <inout key="frameTL" uid="frameTL" />
        </service>

        <service uid="frameSynchronizerSrv" type="::videoTools::SFrameMatrixSynchronizer">
            <in group="frameTL">
                <key uid="frameTL" autoConnect="yes" />
            </in>
            <inout group="image">
                <key uid="videoFrame" />
            </inout>
            <tolerance>200</tolerance>
            <framerate>0</framerate>
        </service>

        <service uid="distorterSrv" type="::videoCalibration::SDistortion" >
            <in key="camera" uid="${camera}" autoConnect="yes" />
            <in key="input" uid="videoFrame" />
            <inout key="output" uid="distortedFrame" />
            <mode>undistort</mode>
        </service>

        <service uid="chessboardDetectorSrv" type="::videoCalibration::SChessBoardDetector" worker="intr_chess_checker">
            <in group="image" autoConnect="yes">
                <key uid="videoFrame" />
            </in>
            <inout group="calInfo">
                <key uid="${calibrationInfo}" />
            </inout>
            <inout group="detection">
                <key uid="detectedChessboard" />
            </inout>
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" scale="CHESSBOARD_SCALE" />
        </service>

        <service uid="chessboardReprojectionSrv" type="::videoCalibration::SChessboardReprojection" >
            <in key="transform" uid="cameraPoseMx" />
            <in key="camera" uid="${camera}" />
            <in key="detectedChessboard" uid="detectedChessboard" />
            <inout key="videoImage" uid="distortedFrame" />
            <out key="chessboardModel" uid="chessboardModel" />
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" squareSize="CHESSBOARD_SQUARE_SIZE" />
            <config drawDetected="true" drawReprojection="true" distortReprojection="true" />
        </service>

        <!-- ******************************* Begin Generic Scene ******************************* -->

        <service uid="genericSceneSrv" type="::fwRenderOgre::SRender" >
            <scene renderMode="sync">
                <background topColor="#000000" bottomColor="#000000" />

                <layer id="default" order="1" />
                <adaptor uid="videoAdp" />
            </scene>
        </service>

        <service uid="videoAdp" type="::visuOgreAdaptor::SVideo" >
            <in key="image" uid="distortedFrame" />
            <config layer="default" />
        </service>

        <!-- ******************************* Connections ***************************************** -->

        <connect>
            <signal>videoSelectorSrv/configuredCameras</signal>
            <slot>videoGrabberSrv/reconfigure</slot>
        </connect>

        <connect>
            <signal>videoSelectorSrv/configuredFile</signal>
            <signal>videoSelectorSrv/configuredStream</signal>
            <signal>videoSelectorSrv/configuredDevice</signal>
            <slot>startVideoAct/update</slot>
        </connect>

        <connect>
            <signal>videoGrabberSrv/cameraStarted</signal>
            <slot>pauseVideoAct/show</slot>
            <slot>startVideoAct/hide</slot>
            <slot>stopVideoAct/setExecutable</slot>
            <slot>loopVideoAct/setExecutable</slot>
        </connect>

        <connect>
            <signal>${camera}/idModified</signal>
            <slot>videoGrabberSrv/stopCamera</slot>
        </connect>

        <connect>
            <signal>${camera}/modified</signal>
            <slot>startVideoAct/setExecutable</slot>
            <slot>stopVideoAct/update</slot>
        </connect>

        <!-- Manage the video slider -->
        <connect>
            <signal>videoSliderSrv/positionChanged</signal>
            <slot>videoGrabberSrv/setPositionVideo</slot>
        </connect>

        <connect>
            <signal>videoGrabberSrv/positionModified</signal>
            <slot>videoSliderSrv/setPositionSlider</slot>
        </connect>

        <connect>
            <signal>videoGrabberSrv/durationModified</signal>
            <slot>videoSliderSrv/setDurationSlider</slot>
        </connect>

        <connect>
            <signal>videoSelectorSrv/configuredFile</signal>
            <slot>videoSliderView/show</slot>
        </connect>

        <connect>
            <signal>videoSelectorSrv/configuredStream</signal>
            <signal>videoSelectorSrv/configuredDevice</signal>
            <slot>videoSliderView/hide</slot>
        </connect>

        <connect>
            <signal>${camera}/intrinsicCalibrated</signal>
            <slot>distortionAct/setExecutable</slot>
        </connect>

        <connect>
            <signal>chessboardDetectorSrv/chessboardDetected</signal>
            <slot>detectionStatusSrv/toggleGreenRed</slot>
        </connect>

        <connect>
            <signal>${calibrationInfo}/getRecord</signal>
            <slot>displayCalibrationInfoSrv/displayImage</slot>
        </connect>

        <connect>
            <signal>${calibrationInfo}/addedRecord</signal>
            <signal>${calibrationInfo}/removedRecord</signal>
            <signal>${calibrationInfo}/resetRecord</signal>
            <slot>calibrationInfoEditorSrv/update</slot>
        </connect>

        <connect>
            <signal>intrinsicCalibrationSrv/errorComputed</signal>
            <slot>errorLabelSrv/setDoubleParameter</slot>
        </connect>

        <connect>
            <signal>chessboardDetectorSrv/updated</signal>
            <slot>computeCameraPoseSrv/update</slot>
        </connect>

        <connect>
            <signal>computeCameraPoseSrv/updated</signal>
            <slot>distorterSrv/update</slot>
        </connect>

        <connect>
            <signal>distorterSrv/updated</signal>
            <slot>chessboardReprojectionSrv/update</slot>
        </connect>

        <connect>
            <signal>chessboardReprojectionSrv/updated</signal>
            <slot>videoAdp/update</slot>
        </connect>

        <connect>
            <signal>videoAdp/updated</signal>
            <slot>genericSceneSrv/requestRender</slot>
            <slot>frameSynchronizerSrv/synchronize</slot>
        </connect>

        <connect>
            <signal>visibilityParameters/boolChanged</signal>
        </connect>

        <connect channel="${preferencesModifiedProxy}">
            <slot>intrinsicCalibrationSrv/updateChessboardSize</slot>
            <slot>chessboardDetectorSrv/updateChessboardSize</slot>
            <slot>chessboardReprojectionSrv/updateChessboardSize</slot>
            <slot>calibrationDataReaderSrv/updateChessboardSize</slot>
            <slot>frameSynchronizerSrv/synchronize</slot>
        </connect>

        <!-- ******************************* Start/Stop services ***************************************** -->

        <start uid="mainView" />
        <start uid="intrinsicCalibrationSrv" />
        <start uid="chessboardDetectorSrv" />
        <start uid="chessboardReprojectionSrv" />
        <start uid="displayCalibrationInfoSrv" />
        <start uid="intrinsicEditionSrv" />
        <start uid="calibrationDataWriterSrv" />
        <start uid="calibrationDataReaderSrv" />
        <start uid="videoGrabberSrv" />
        <start uid="frameSynchronizerSrv" />
        <start uid="distorterSrv" />
        <start uid="computeCameraPoseSrv" />
        <start uid="videoAdp" />

    </config>
</extension>
