<extension implements="::fwServices::registry::AppConfig">
    <id>calIntrinsicView</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="camera" />
        <param name="calibrationInfo" />
        <param name="preferencesModifiedProxy" />
    </parameters>
    <config>

        <!-- ******************************* Objects declaration ****************************** -->

        <object uid="${calibrationInfo}" type="::arData::CalibrationInfo" src="ref" />
        <object uid="${camera}" type="::arData::Camera" src="ref" />
        <object uid="frameTL" type="::arData::FrameTL" />
        <object uid="detectionFrame" type="::fwData::Image" />
        <object uid="videoFrame" type="::fwData::Image" />

        <object uid="detectedChessboard" type="::fwData::PointList" />
        <object uid="chessboardModel" type="::fwData::PointList" src="deferred" />
        <object uid="cameraPoseMx" type="::fwData::TransformationMatrix3D" />

        <!-- ******************************* UI declaration *********************************** -->

        <service uid="intrinsicCameraView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view proportion="2" />
                    <view proportion="7" />
                </layout>
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <view sid="leftPanelView" start="yes" />
                <view sid="cameraView" start="yes" />
            </registry>
        </service>

        <service uid="leftPanelView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="toolboxView" start="yes" />
                <view sid="errorLabel" start="yes" />
            </registry>
        </service>

        <service uid="cameraView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="genericSceneSrv" start="yes" />
                <view sid="videoSlider" start="yes" />
            </registry>
        </service>

        <service uid="toolboxView" type="::gui::view::SDefaultView">
            <gui>
                <toolBar/>
                <layout type="::fwGui::ToolboxLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="3" caption="Calibration input" expanded="true" />
                    <view proportion="1" caption="Calibration result" expanded="true" />
                </layout>
            </gui>
            <registry>
                <toolBar sid="videoToolbar" start="yes" />
                <view sid="calibrationDataView" start="yes" />
                <view sid="cameraInfo" start="yes" />
            </registry>
        </service>

        <service uid="calibrationDataView" type="::gui::view::SDefaultView">
            <gui>
                <toolBar>
                    <toolBitmapSize height="24" width="24" />
                </toolBar>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                </layout>
            </gui>
            <registry>
                <toolBar sid="intrinsicCamera" start="yes" />
                <view sid="calibrationInfoEditor" start="yes" />
            </registry>
        </service>

        <service uid="videoToolbar" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <editor/>
                    <menuItem name="Start camera" icon="media-0.1/icons/start-cam.svg" />
                    <menuItem name="Stop camera" icon="media-0.1/icons/stop-cam.svg" />
                    <menuItem name="Pause video" icon="media-0.1/icons/pause-cam.svg" style="check" shortcut="Space" />
                    <menuItem name="Loop video" icon="media-0.1/icons/loop-cam.svg" style="check" />
                    <separator />
                    <menuItem name="Undistort video" icon="media-0.1/icons/distortion.svg" style="check" />
                </layout>
            </gui>
            <registry>
                <editor sid="cameraSelector" start="yes" />
                <menuItem sid="actionStartCamera" start="yes" />
                <menuItem sid="actionStopCamera" start="yes" />
                <menuItem sid="actionPauseVideo" start="yes" />
                <menuItem sid="actionLoopVideo" start="yes" />
                <menuItem sid="actionDistortion" start="yes" />
            </registry>
        </service>

        <service uid="intrinsicCamera" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <editor/>
                    <menuItem name="Add" icon="media-0.1/icons/Import.svg" shortcut="A" />
                    <menuItem name="Remove" icon="media-0.1/icons/remove.svg" />
                    <menuItem name="Reset" icon="media-0.1/icons/reset.svg" />
                    <menuItem name="Calibrate with openCV" icon="media-0.1/icons/CheckButton.svg" shortcut="Return"/>
                    <menuItem name="Draw" icon="media-0.1/icons/Preview.svg" />
                    <menuItem name="Edit" icon="media-0.1/icons/configuration.svg" />
                    <menuItem name="Save calibration images" icon="media-0.1/icons/save.svg" />
                    <menuItem name="Load calibration images" icon="media-0.1/icons/LoadActivity.svg" />
                </layout>
            </gui>
            <registry>
                <editor sid="detectionStatus" start="yes" />
                <menuItem sid="actionAdd" start="yes" />
                <menuItem sid="actionRemove" start="yes" />
                <menuItem sid="actionReset" start="yes" />
                <menuItem sid="actionGoOpenCV" start="yes" />
                <menuItem sid="actionDisplayImage" start="yes" />
                <menuItem sid="actionEdition" start="yes" />
                <menuItem sid="actionSaveInputs" start="yes" />
                <menuItem sid="actionLoadInputs" start="yes" />
            </registry>
        </service>

        <!-- ************************************* Action ************************************ -->

        <service uid="actionStartCamera" type="::gui::action::SSlotCaller">
            <slots>
                <slot>videoGrabber/startCamera</slot>
                <slot>actionStartCamera/hide</slot>
                <slot>actionStopCamera/show</slot>
            </slots>
        </service>

        <service uid="actionStopCamera" type="::gui::action::SSlotCaller">
            <state visible="false" />
            <slots>
                <slot>videoGrabber/stopCamera</slot>
                <slot>actionStopCamera/hide</slot>
                <slot>actionStartCamera/show</slot>
                <slot>actionPauseVideo/deactivate</slot>
            </slots>
        </service>

        <service uid="actionPauseVideo" type="::gui::action::SSlotCaller">
            <slots>
                <slot>videoGrabber/pauseCamera</slot>
            </slots>
        </service>

        <service uid="actionLoopVideo" type="::gui::action::SSlotCaller">
            <slots>
                <slot>videoGrabber/loopVideo</slot>
            </slots>
        </service>

        <service uid="actionDistortion" type="::gui::action::SSlotCaller">
            <state active="false" visible="false" />
            <slots>
                <slot>distorter/changeState</slot>
                <slot>chessboardReprojection/toggleDistortion</slot>
            </slots>
        </service>

        <service uid="actionAdd" type="::gui::action::SSlotCaller">
            <slots>
                <slot>chessboardDetector/recordPoints</slot>
            </slots>
        </service>

        <service uid="actionReset" type="::gui::action::SSlotCaller">
            <slots>
                <slot>calibrationInfoEditor/reset</slot>
            </slots>
        </service>

        <service uid="actionRemove" type="::gui::action::SSlotCaller">
            <slots>
                <slot>calibrationInfoEditor/remove</slot>
            </slots>
        </service>

        <service uid="actionEdition" type="::gui::action::SSlotCaller">
            <slots>
                <slot>intrinsicEdition/update</slot>
            </slots>
        </service>

        <service uid="actionGoOpenCV" type="::gui::action::SSlotCaller">
            <slots>
                <slot>intrinsicCalibration/update</slot>
                <slot>detectionStatus/changeToOrange</slot>
            </slots>
        </service>

        <service uid="actionDisplayImage" type="::gui::action::SSlotCaller">
            <slots>
                <slot>calibrationInfoEditor/getSelection</slot>
            </slots>
        </service>

        <service uid="actionSaveInputs" type="::gui::action::SSlotCaller">
            <sync>true</sync>
            <slots>
                <slot>calibrationDataWriter/configureWithIHM</slot>
                <slot>calibrationDataWriter/update</slot>
            </slots>
        </service>

        <service uid="actionLoadInputs" type="::gui::action::SSlotCaller">
            <sync>true</sync>
            <slots>
                <slot>calibrationDataReader/configureWithIHM</slot>
                <slot>calibrationDataReader/update</slot>
            </slots>
        </service>

        <service uid="videoSlider" type="::videoQt::editor::SSlider" />

        <!-- ************************************* Services ************************************ -->

        <service uid="detectionStatus" type="::uiTools::editor::SStatus">
            <green>Point are visible</green>
            <orange>Calibration in progress</orange>
            <red>Points are NOT visible</red>
        </service>

        <service uid="errorLabel" type="::uiTools::editor::STextStatus">
            <label>Reprojection Error (RMSE)</label>
        </service>

        <service uid="detectionFrameUpdater" type="::videoTools::SFrameMatrixSynchronizer">
            <in group="frameTL">
                <key uid="frameTL" autoConnect="yes"/>
            </in>
            <inout group="image">
                <key uid="detectionFrame" />
            </inout>
            <tolerance>200</tolerance>
            <framerate>0</framerate>
        </service>

        <service uid="chessboardDetector" type="::videoCalibration::SChessBoardDetector" worker="intr_chess_checker">
            <in group="image" autoConnect="yes">
                <key uid="detectionFrame" />
            </in>
            <inout group="calInfo">
                <key uid="${calibrationInfo}" />
            </inout>
            <inout group="detection">
                <key uid="detectedChessboard" />
            </inout>
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" scale="CHESSBOARD_SCALE" />
        </service>

        <service uid="displayCalibrationInfo" type="::uiCalibration::SDisplayCalibrationInfo">
            <in key="calInfo1" uid="${calibrationInfo}" />
        </service>

        <service uid="calibrationInfoEditor" type="::uiCalibration::SCalibrationInfoEditor" autoConnect="yes">
            <inout key="calInfo1" uid="${calibrationInfo}" />
        </service>

        <service uid="intrinsicCalibration" type="::videoCalibration::SOpenCVIntrinsic">
            <in key="calibrationInfo" uid="${calibrationInfo}" />
            <inout key="camera" uid="${camera}" />
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" squareSize="CHESSBOARD_SQUARE_SIZE" />
        </service>

        <service uid="chessboardReprojection" type="::videoCalibration::SChessboardReprojection" >
            <in key="transform" uid="cameraPoseMx" />
            <in key="camera" uid="${camera}"/>
            <in key="detectedChessboard" uid="detectedChessboard" />
            <inout key="videoImage" uid="videoFrame" />
            <out key="chessboardModel" uid="chessboardModel" />
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" squareSize="CHESSBOARD_SQUARE_SIZE" />
            <config drawDetected="true" drawReprojection="true" distortReprojection="true" />
        </service>

        <service uid="computeCameraPose" type="::registrationCV::SSolvePnP" worker="intr_chess_checker">
            <in key="pointList2d" uid="detectedChessboard" />
            <in key="pointList3d" uid="chessboardModel" />
            <in key="calibration" uid="${camera}" />
            <inout key="matrix" uid="cameraPoseMx" />
            <config inverse="false"/>
        </service>

        <service uid="distorter" type="::videoCalibration::SDistortion" >
            <in key="camera" uid="${camera}" autoConnect="yes" />
            <in key="input" uid="detectionFrame" />
            <inout key="output" uid="videoFrame" />
            <mode>undistort</mode>
        </service>

        <service uid="cameraInfo" type="::uiCalibration::SCameraInformationEditor" autoConnect="yes">
            <in key="camera" uid="${camera}" />
        </service>

        <service uid="intrinsicEdition" type="::uiCalibration::SIntrinsicEdition">
            <inout key="camera" uid="${camera}" />
        </service>

        <service uid="calibrationDataWriter" type="::ioCalibration::SCalibrationImagesWriter">
            <in key="data" uid="${calibrationInfo}" />
            <format>.tiff</format>
        </service>

        <service uid="calibrationDataReader" type="::ioCalibration::SCalibrationInfoReader">
            <inout key="data" uid="${calibrationInfo}" />
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" scale="CHESSBOARD_SCALE" />
        </service>

        <service uid="videoGrabber" type="::videoTools::SGrabberProxy">
            <in key="camera" uid="${camera}" />
            <inout key="frameTL" uid="frameTL" />
        </service>

        <service uid="cameraSelector" type="::videoQt::editor::SCamera">
            <inout key="camera" uid="${camera}" />
            <videoSupport>yes</videoSupport>
        </service>

        <!-- ******************************* Begin Generic Scene ******************************* -->

        <service uid="genericSceneSrv" type="::fwRenderOgre::SRender" >
            <scene>
                <background topColor="#000000" bottomColor="#000000" />

                <layer id="default" order="1" />
                <adaptor uid="videoAdp" />
            </scene>
        </service>

        <service uid="videoAdp" type="::visuOgreAdaptor::SVideo" autoConnect="yes" >
            <in key="image" uid="videoFrame" />
            <config layer="default" />
        </service>

        <!-- ******************************* Connections ***************************************** -->

        <connect>
            <signal>${camera}/idModified</signal>
            <slot>videoGrabber/stopCamera</slot>
        </connect>

        <connect>
            <signal>videoSlider/positionChanged</signal>
            <slot>videoGrabber/setPositionVideo</slot>
        </connect>

        <connect>
            <signal>videoGrabber/positionModified</signal>
            <slot>videoSlider/setPositionSlider</slot>
        </connect>

        <connect>
            <signal>videoGrabber/durationModified</signal>
            <slot>videoSlider/setDurationSlider</slot>
        </connect>

        <connect>
            <signal>cameraSelector/configuredCameras</signal>
            <slot>videoGrabber/reconfigure</slot>
        </connect>

        <connect>
            <signal>${camera}/intrinsicCalibrated</signal>
            <slot>actionDistortion/show</slot>
        </connect>

        <connect>
            <signal>chessboardDetector/chessboardDetected</signal>
            <slot>detectionStatus/toggleGreenRed</slot>
        </connect>

        <connect>
            <signal>${calibrationInfo}/getRecord</signal>
            <slot>displayCalibrationInfo/displayImage</slot>
        </connect>

        <connect>
            <signal>${calibrationInfo}/addedRecord</signal>
            <signal>${calibrationInfo}/removedRecord</signal>
            <signal>${calibrationInfo}/resetRecord</signal>
            <slot>calibrationInfoEditor/update</slot>
        </connect>

        <connect>
            <signal>intrinsicCalibration/errorComputed</signal>
            <slot>errorLabel/setDoubleParameter</slot>
        </connect>

        <connect>
            <signal>chessboardDetector/updated</signal>
            <slot>computeCameraPose/update</slot>
        </connect>

        <connect>
            <signal>computeCameraPose/updated</signal>
            <slot>distorter/update</slot>
        </connect>

        <connect>
            <signal>distorter/updated</signal>
            <slot>chessboardReprojection/update</slot>
        </connect>

        <connect>
            <signal>chessboardReprojection/updated</signal>
            <slot>genericSceneSrv/requestRender</slot>
            <slot>detectionFrameUpdater/synchronize</slot>
        </connect>

        <connect>
            <signal>visibilityParameters/boolChanged</signal>
        </connect>

        <connect channel="${preferencesModifiedProxy}">
            <slot>intrinsicCalibration/updateChessboardSize</slot>
            <slot>chessboardDetector/updateChessboardSize</slot>
            <slot>chessboardReprojection/updateChessboardSize</slot>
            <slot>calibrationDataReader/updateChessboardSize</slot>
            <slot>detectionFrameUpdater/synchronize</slot>
        </connect>

        <!-- ******************************* Start/Stop services ***************************************** -->

        <start uid="intrinsicCameraView" />
        <start uid="intrinsicCalibration" />
        <start uid="chessboardDetector" />
        <start uid="chessboardReprojection" />
        <start uid="displayCalibrationInfo" />
        <start uid="intrinsicEdition" />
        <start uid="calibrationDataWriter" />
        <start uid="calibrationDataReader" />
        <start uid="videoGrabber" />
        <start uid="detectionFrameUpdater" />
        <start uid="distorter" />
        <start uid="videoAdp" />
        <start uid="computeCameraPose" />

    </config>
</extension>
