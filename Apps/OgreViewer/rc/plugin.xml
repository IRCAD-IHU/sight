<?xml version="1.0" encoding="UTF-8"?>

<plugin id="OgreViewer" version="@PROJECT_VERSION@" >

    <requirement id="preferences" />
    <requirement id="visuOgre" />
    <requirement id="material" />
    <requirement id="visuVTKQt" />

    <requirement id="arDataReg" />
    <requirement id="dataReg" />
    <requirement id="servicesReg" />

    <xi:include href="configurations/OgreGenericScene.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/OgreNegato2D.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/VTKGenericScene.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

    <extension implements="::fwServices::registry::ServiceConfig">
        <id>LandmarksAtomsConfig</id>
        <desc>Json/Xml Reader (Sight)</desc>
        <config>
            <patcher context="Landmark" version="V2" />
        </config>
    </extension>

    <extension implements="::fwServices::registry::AppConfig">
        <id>OgreViewer_Extension</id>
        <config>

            <!-- ******************************* Objects declaration ****************************** -->

            <object uid="modelSeries" type="::fwMedData::ModelSeries" />
            <object uid="image" type="::fwData::Image" />
            <object uid="landmarks" type="::fwData::Landmarks" />
            <object uid="volumeTF" type="::fwData::TransferFunction" src="deferred" />

            <!-- ******************************* UI declaration *********************************** -->

            <service uid="mainView" type="::gui::frame::SDefaultFrame" >
                <gui>
                    <frame>
                        <name>Ogre Viewer</name>
                        <icon>OgreViewer-@PROJECT_VERSION@/icons/ogre-head.svg</icon>
                        <minSize width="1100" height="700" />
                    </frame>
                    <menuBar />
                </gui>
                <registry>
                    <menuBar sid="menuBarView" start="yes" />
                    <view sid="containerView" start="yes" />
                </registry>
            </service>

            <service uid="menuBarView" type="::gui::aspect::SDefaultMenuBar" >
                <gui>
                    <layout>
                        <menu name="File" />
                    </layout>
                </gui>
                <registry>
                    <menu sid="menuView" start="yes" />
                </registry>
            </service>

            <service uid="menuView" type="::gui::aspect::SDefaultMenu" >
                <gui>
                    <layout>
                        <menuItem name="Open mesh..." shortcut="Ctrl+M" />
                        <menuItem name="Open image..." shortcut="Ctrl+O" />
                        <menuItem name="Open landmarks..." />
                        <separator />
                        <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="openMeshAct" start="yes" />
                    <menuItem sid="openImageAct" start="yes" />
                    <menuItem sid="openLandmarksAct" start="yes" />
                    <menuItem sid="quitAct" start="yes" />
                </registry>
            </service>

            <service uid="containerView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::CardinalLayoutManager">
                        <view align="center" />
                        <view align="right" minWidth="500" />
                    </layout>
                </gui>
                <registry>
                    <view sid="tabView" start="yes" />
                    <view sid="parametersView" start="yes" />
                </registry>
            </service>

            <service uid="tabView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::TabLayoutManager">
                        <view caption="Ogre scene" selected="yes" />
                        <view caption="Ogre 2D negato" selected="no" />
                        <view caption="VTK scene" selected="no" />
                    </layout>
                </gui>
                <registry>
                    <view wid="OgreSceneView" start="yes" />
                    <view wid="Ogre2DNegatoView" start="yes" />
                    <view wid="VTKSceneView" start="yes" />
                </registry>
            </service>

            <service uid="parametersView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::TabLayoutManager">
                        <view caption="Compositor manager" />
                        <view caption="Organ manager" selected="yes" />
                        <view caption="Light manager" />
                        <view caption="TF editor" />
                    </layout>
                </gui>
                <registry>
                    <view sid="compositorView" start="yes" />
                    <view wid="organView" start="yes" />
                    <view wid="lightView" start="yes" />
                    <view wid="volumeTFVView" start="yes" />
                </registry>
            </service>

            <service uid="compositorView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::ToolboxLayoutManager">
                        <orientation value="vertical" />
                        <view caption="Compositor selector" expanded="true" />
                        <view caption="Compositor parameters" expanded="true" />
                        <view caption="Transparency parameters" expanded="true" />
                    </layout>
                </gui>
                <registry>
                    <view sid="compositorSelectorSrv" />
                    <view sid="compositorParametersSrv" />
                    <view sid="transparencyView" start="yes"/>
                </registry>
            </service>

            <service uid="transparencyView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="vertical" />
                        <view/>
                    </layout>
                </gui>
                <registry>
                    <view sid="compositorEditorSrv" />
                </registry>
            </service>

            <!-- ******************************* Actions ****************************************** -->

            <service uid="openMeshAct" type="::gui::action::SStarter" >
                <start uid="meshReaderSrv" />
            </service>

            <service uid="openImageAct" type="::gui::action::SStarter" >
                <start uid="imageReaderSrv" />
            </service>

            <service uid="openLandmarksAct" type="::gui::action::SSlotCaller" >
                <slots>
                    <slot>landmarksReaderSrv/update</slot>
                </slots>
            </service>

            <service uid="quitAct" type="::gui::action::SQuit"  />

            <!-- ************************ Configuration launchers ********************************* -->

            <service uid="ogreGenericSceneCfg" type="::fwServices::SConfigController" >
                <appConfig id="OgreGenericScene" />
                <parameter replace="WID_PARENT" by="OgreSceneView" />
                <parameter replace="COMPOSITOR_CHANEL" by="compositorChannel" />
                <inout key="modelSeries" uid="modelSeries" />
                <inout key="image" uid="image" />
                <inout key="volumeTF" uid="volumeTF" optional="yes" />
                <inout key="landmarks" uid="landmarks" />
            </service>

            <service uid="ogre2DNegatoCfg" type="::fwServices::SConfigController" >
                <appConfig id="OgreNegato2D" />
                <parameter replace="WID_PARENT" by="Ogre2DNegatoView" />
                <inout key="image" uid="image" />
                <inout key="volumeTF" uid="volumeTF" optional="yes" />
            </service>

            <service uid="vtkGenericSceneCfg" type="::fwServices::SConfigController" >
                <appConfig id="VTKGenericScene" />
                <parameter replace="WID_PARENT" by="VTKSceneView" />
                <inout key="modelSeries" uid="modelSeries" />
                <inout key="image" uid="image" />
                <inout key="volumeTF" uid="volumeTF" optional="yes" />
            </service>

            <service uid="organManagerCfg"  type="::fwServices::SConfigController">
                <appConfig id="OgreOrganManager" />
                <inout key="organManagerModelSeries" uid="modelSeries" />
                <parameter replace="WID_PARENT" by="organView" />
            </service>

            <service uid="lightManagerCfg"  type="::fwServices::SConfigController">
                <appConfig id="OgreLightManager" />
                <parameter replace="WID_PARENT" by="lightView" />
            </service>

            <service uid="imageTFManagerCfg" type="::fwServices::SConfigController">
                <appConfig id="OgreHistogramManager" />
                <inout key="IMAGE" uid="image" />
                <inout key="TF" uid="volumeTF" optional="yes" />
                <parameter replace="WID_PARENT" by="volumeTFVView" />
            </service>

            <!-- ******************************* Services ***************************************** -->

            <service uid="medicalImageSrv" type="::ctrlSelection::MedicalImageSrv" >
                <inout key="image" uid="image" autoConnect="yes" />
            </service>

            <service uid="compositorSelectorSrv" type="::uiVisuOgre::SCompositorSelector"  />

            <service uid="compositorParametersSrv" type="::uiVisuOgre::SCompositorParameterEditor"  >
                <layer id="default" />
            </service>

            <service uid="compositorEditorSrv" type="::uiVisuOgre::SCoreCompositorEditor"  />

            <service uid="meshReaderSrv" type="::uiIO::editor::SIOSelector" >
                <inout key="data" uid="modelSeries" />
                <type mode="reader" />
            </service>

            <service uid="imageReaderSrv" type="::uiIO::editor::SIOSelector" >
                <inout key="data" uid="image" />
                <type mode="reader" />
            </service>

            <service uid="landmarksReaderSrv" type="::uiIO::editor::SIOSelector" >
                <inout key="data" uid="landmarks" />
                <type mode="reader" />
                <selection mode="include" />
                <addSelection service="::ioAtoms::SReader" />
                <config id="LandmarksAtomsConfig" service="::ioAtoms::SReader" />
            </service>

            <!-- ******************************* Connections ***************************************** -->

            <connect channel="compositorChannel" >
                <slot>compositorParametersSrv/updateCompositor</slot>
            </connect>

            <!-- ******************************* Start/Stop services ***************************************** -->

            <start uid="medicalImageSrv" />
            <start uid="mainView" />
            <start uid="vtkGenericSceneCfg" />
            <start uid="ogreGenericSceneCfg" />
            <start uid="ogre2DNegatoCfg" />
            <start uid="organManagerCfg" />
            <start uid="lightManagerCfg" />
            <start uid="imageTFManagerCfg" />
            <start uid="compositorSelectorSrv" />
            <start uid="compositorParametersSrv" />
            <start uid="compositorEditorSrv" />
            <start uid="landmarksReaderSrv" />

        </config>
    </extension>
</plugin>
