<plugin id="TutoOgreGenericScene" version="@DASH_VERSION@" >

    <requirement id="dataReg" />
    <requirement id="servicesReg" />
    <requirement id="visuOgreQt" />

    <extension implements="::fwServices::registry::AppConfig2">
        <id>TutoOgreGenericScene</id>
        <config>

            <object uid="imageUID"  type="::fwData::Image" />
            <object uid="meshUID" type="::fwData::Mesh" />
            <object uid="materialUID" type="::fwData::Material" />
            <object uid="textureUID" type="::fwData::Image" />
            <object uid="meshTF" type="::fwData::TransformationMatrix3D" />
            <object uid="TFSelections" type="::fwData::Composite" />
            <object uid="collimation"  type="::fwData::Float" />

            <service uid="mainFrame" type="::gui::frame::SDefaultFrame" >
                <gui>
                    <frame>
                        <name>TutoOgreGenericScene</name>
                        <icon>@BUNDLE_PREFIX@/TutoOgreGenericScene_@DASH_VERSION@/tuto.ico</icon>
                        <minSize width="1024" height="768" />
                    </frame>
                    <menuBar />
                </gui>
                <registry>
                    <menuBar sid="menuBar" start="yes" />
                    <view sid="mainView" start="yes" />
                </registry>
            </service>

            <service uid="menuBar" type="::gui::aspect::SDefaultMenuBar"  >
                <gui>
                    <layout>
                        <menu name="File" />
                    </layout>
                </gui>
                <registry>
                    <menu sid="menu" start="yes" />
                </registry>
            </service>

            <service uid="menu" type="::gui::aspect::SDefaultMenu"  >
                <gui>
                    <layout>
                        <menuItem name="Open image" shortcut="Ctrl+I" />
                        <menuItem name="Open mesh" shortcut="Ctrl+M" />
                        <menuItem name="Open texture" shortcut="Ctrl+T" />
                        <separator />
                        <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="actionOpenImage" start="yes" />
                    <menuItem sid="actionOpenMesh" start="yes" />
                    <menuItem sid="actionOpenTexture" start="yes" />
                    <menuItem sid="actionQuit" start="yes" />
                </registry>
            </service>

            <service uid="actionOpenImage" type="::gui::action::SStarter" >
                <start uid="imageReader" />
            </service>

            <service uid="actionOpenMesh" type="::gui::action::SStarter"  >
                <start uid="meshReader" />
            </service>

            <service uid="actionOpenTexture" type="::gui::action::SStarter" >
                <start uid="textureReader" />
            </service>

            <service uid="actionQuit" type="::gui::action::SQuit"  />

            <service uid="mainView" type="::gui::view::SDefaultView"  >
                <gui>
                    <layout type="::fwGui::LineLayoutManager" >
                        <orientation value="vertical" />
                        <view proportion="1" />
                        <view proportion="0" />
                    </layout>
                </gui>
                <registry>
                    <view sid="genericSceneOgre" start="yes" />
                    <view sid="multiViewBottom" start="yes" />
                </registry>
            </service>

            <service uid="multiViewBottom" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager" >
                        <orientation value="vertical" />
                        <view proportion="1" />
                        <view proportion="1" />
                        <view proportion="1" />
                        <view proportion="1" />
                    </layout>
                </gui>
                <registry>
                    <view sid="sliderIndexEditor" start="yes" />
                    <view sid="windowLevel" start="yes" />
                    <view sid="transparencyEditor" start="yes" />
                    <view sid="collimationEditor" start="yes" />
                </registry>
            </service>


            <service uid="sliderIndexEditor" type="::uiImage::SliceIndexPositionEditor" autoConnect="yes" >
                <in key="image" uid="imageUID" />
                <sliceIndex>Sagittal</sliceIndex>
            </service>

            <service uid="windowLevel" type="::uiImage::WindowLevel" autoConnect="yes">
                <inout key="image" uid="imageUID" autoConnect="yes"/>
                <inout key="TFSelections" uid="TFSelections" />
                <config selectedTFKey="SelectedTF" />
            </service>

            <service uid="transparencyEditor" type="::uiImage::ImageTransparency" autoConnect="yes" >
                <inout key="image" uid="imageUID" />
            </service>

            <service uid="collimationEditor" type="::guiQt::editor::SParameters" autoConnect="no">
                <parameters>
                    <param type="double" name="Collimation" key="u_collimation" defaultValue="0" min="-100" max="100" />
                </parameters>
            </service>

<!--            <service uid="imageReader" type="::uiIO::editor::SIOSelector" >-->
            <service uid="imageReader" type="::ioVTK::SImageReader" >
                <inout key="target" uid="imageUID" />
                <type mode="reader" />
                <file>/home/fbridault/dev/f4s/data/patient1.vtk</file>
            </service>

<!--            <service uid="meshReader" type="::uiIO::editor::SIOSelector" >-->
            <service uid="meshReader" type="::ioVTK::SMeshReader" >
                <inout key="target" uid="meshUID" />
                <type mode="reader" />
                <file>/home/fbridault/dev/f4s/data/liver.vtk</file>
            </service>

            <service uid="textureReader" type="::uiIO::editor::SIOSelector" >
                <inout key="target" uid="textureUID" />
                <type mode="reader" />
            </service>

            <!-- ####################################  Begin Generic Scene ######################################### -->
            <service uid="genericSceneOgre" type="::fwRenderOgre::SRender">
                <scene fullscreen="no" />
                <background topColor="#DDDDDD" bottomColor="#43958D" topScale="0.7" bottomScale="1.0" />
                <layer id="default" depth="1" stereoMode="AutoStereo8"/>
                <adaptor uid="interactorAdaptor" start="yes" />
                <adaptor uid="meshAdaptor" start="yes" />
                <adaptor uid="materialAdaptor" start="yes" />
<!--                <adaptor uid="negato3DAdaptor" start="yes" />-->
                <adaptor uid="textureAdaptor" start="yes" />
                <adaptor uid="compositorAdaptor" start="yes" />
                <adaptor uid="volumeRender" start="yes" />
            </service>

            <service uid="interactorAdaptor" type="::visuOgreAdaptor::SInteractorStyle" >
                <config layer="default" style="Trackball" />
            </service>

            <service uid="meshAdaptor" type="::visuOgreAdaptor::SMesh" autoConnect="yes">
                <in key="mesh" uid="meshUID" />
                <config layer="default" materialName="texMaterial" />
            </service>

            <service uid="materialAdaptor" type="::visuOgreAdaptor::SMaterial">
                <in key="material" uid="materialUID" />
                <config layer="default" materialName="texMaterial" textureName="meshTexture" normalLength="1.0"/>
            </service>

<!--            <service uid="negato3DAdaptor" type="::visuOgreAdaptor::SNegato3D" >
                <in key="image" uid="imageUID" autoConnect="yes" />
                <inout key="TF" uid="TFSelections" />
                <config layer="default" opacity="opacityFloatUID" selectedTFKey="SelectedTF" />
            </service>-->
            <service uid="volumeRender" type="::visuOgreAdaptor::SVolumeRender" >
                <in key="image" uid="imageUID" autoConnect="yes" />
                <inout key="TF" uid="TFSelections" />
                <config layer="default" widgets="no" preintegration="no" mode="raytracing" selectedTFKey="SelectedTF" />
            </service>

            <service uid="textureAdaptor" type="::visuOgreAdaptor::STexture" autoConnect="yes">
                <in key="texture" uid="textureUID" />
                <config layer="default" textureName="meshTexture" filtering="linear" wrapping="repeat" />
            </service>

            <service uid="compositorAdaptor" type="::visuOgreAdaptor::SCompositorParameter">
                <inout key="param" uid="collimation" />
                <config layer="default" compositorName="AutoStereo8" parameter="u_collimation" shaderType="fragment" />
            </service>

            <connect>
                <signal>collimationEditor/doubleChanged</signal>
                <slot>compositorAdaptor/setDoubleParameter</slot>
            </connect>
            <!-- ####################################  End Generic Scene ########################################### -->

            <start uid="mainFrame" />
            <start uid="imageReader" />

            <start uid="meshReader" />
            <update uid="meshReader" />
        </config>
    </extension>

</plugin>
