<plugin id="TutoOgreGenericScene" version="@DASH_VERSION@" >

    <requirement id="dataReg" />
    <requirement id="servicesReg" />
    <requirement id="visuOgreQt" />

    <extension implements="::fwServices::registry::AppConfig2">
        <id>TutoOgreGenericScene</id>
        <config>

            <object uid="imageUID"  type="::fwData::Image" />
            <object uid="meshUID" type="::fwData::Mesh" />
            <object uid="materialUID" type="::fwData::Material" />
            <object uid="textureUID" type="::fwData::Image" />
            <object uid="cameraTF" type="::fwData::TransformationMatrix3D" />
            <object uid="meshTF" type="::fwData::TransformationMatrix3D" />
            <object uid="TFSelections" type="::fwData::Composite" />

            <service uid="MyIHM" type="::gui::frame::SDefaultFrame" >
                <gui>
                    <frame>
                        <name>TutoOgreGenericScene</name>
                        <icon>@BUNDLE_PREFIX@/TutoOgreGenericScene_0-1/tuto.ico</icon>
                        <minSize width="1024" height="768" />
                    </frame>
                    <menuBar />
                </gui>
                <registry>
                    <menuBar sid="myMenuBar" start="yes" />
                    <view sid="mainView" start="yes" />
                </registry>
            </service>

            <service uid="myMenuBar" type="::gui::aspect::SDefaultMenuBar"  >
                <gui>
                    <layout>
                        <menu name="File" />
                    </layout>
                </gui>
                <registry>
                    <menu sid="myMenu" start="yes" />
                </registry>
            </service>

            <service uid="myMenu" type="::gui::aspect::SDefaultMenu"  >
                <gui>
                    <layout>
                        <menuItem name="Open image" shortcut="Ctrl+I" />
                        <menuItem name="Open mesh" shortcut="Ctrl+M" />
                        <menuItem name="Open texture" shortcut="Ctrl+T" />
                        <separator />
                        <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="action_openImage" start="yes" />
                    <menuItem sid="action_openMesh" start="yes" />
                    <menuItem sid="action_openTexture" start="yes" />
                    <menuItem sid="action_quit" start="yes" />
                </registry>
            </service>

            <service uid="action_openImage" type="::gui::action::SStarter" >
                <start uid="imageReader" />
            </service>

            <service uid="action_openMesh" type="::gui::action::SStarter"  >
                <start uid="meshReader" />
            </service>

            <service uid="action_openTexture" type="::gui::action::SStarter" >
                <start uid="textureReader" />
            </service>

            <service uid="action_quit" type="::gui::action::SQuit"  />

            <service uid="mainView" type="::gui::view::SDefaultView"  >
                <gui>
                    <layout type="::fwGui::LineLayoutManager" >
                        <orientation value="vertical" />
                        <view proportion="1" />
                        <view proportion="0" />
                    </layout>
                </gui>
                <registry>
                    <view sid="genericSceneOgre" start="yes" />
                    <view sid="multiView_bottom" start="yes" />
                </registry>
            </service>

            <service uid="multiView_bottom" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager" >
                        <orientation value="vertical" />
                        <view proportion="1" />
                        <view proportion="1" />
                        <view proportion="1" />
                    </layout>
                </gui>
                <registry>
                    <view sid="sliderIndexEditor" start="yes" />
                    <view sid="windowLevel" start="yes" />
                    <view sid="transparencyEditor" start="yes" />
                </registry>
            </service>

            <service uid="genericSceneOgre" type="::fwRenderOgre::SRender" autoConnect="yes">
                <in key="meshKey" uid="meshUID" />
                <in key="materialKey" uid="materialUID" />
                <in key="image" uid="imageUID" />
                <in key="textureImage" uid="textureUID" />
                <in key="cameraTF" uid="cameraTF" />
                <inout key="TFSelections" uid="TFSelections" />
                <scene>
                    <background topColor="#DDDDDD" bottomColor="#43958D" topScale="0.7" bottomScale="1.0" />

                    <renderer id="default" layer="1" />

                    <adaptor id="interactorAdaptor" class="::visuOgreAdaptor::SInteractorStyle" objectId="self">
                        <config renderer="default" style="Trackball" />
                    </adaptor>

                    <adaptor id="cameraAdaptor" class="::visuOgreAdaptor::SCamera" objectId="cameraTF">
                        <config renderer="default" />
                    </adaptor>

                    <!-- Mesh adaptor -->
                    <adaptor id="meshAdaptor" class="::visuOgreAdaptor::SMesh" objectId="meshKey">
                        <config renderer="default" materialAdaptor="materialAdaptor" />
                    </adaptor>

                    <adaptor id="materialAdaptor" uid="materialAdaptorUID" class="::visuOgreAdaptor::SMaterial" objectId="materialKey">
                        <config renderer="default" textureAdaptor="textureAdaptor" normalLength="1.0"/>
                    </adaptor>

                    <!-- 3D Negato -->
                    <adaptor id="Scene_Negato3D" uid="Negato3D" class="::visuOgreAdaptor::SNegato3D" objectId="image">
                        <config renderer="default" opacity="opacityFloatUID" selectedTFKey="SelectedTF" tfSelectionFwID="TFSelections" />
                    </adaptor>

                    <adaptor id="textureAdaptor" uid="textureAdaptorUID" class="::visuOgreAdaptor::STexture" objectId="textureImage">
                        <config renderer="default" textureName="meshTexture" filtering="linear" wrapping="repeat" />
                    </adaptor>
                </scene>
            </service>

            <service uid="imageReader" type="::uiIO::editor::SIOSelector" >
                <inout key="target" uid="imageUID" />
                <type mode="reader" />
            </service>

            <service uid="sliderIndexEditor" type="::uiImage::SliceIndexPositionEditor" autoConnect="yes" >
                <in key="image" uid="imageUID" />
                <sliceIndex>Sagittal</sliceIndex>
            </service>

            <service uid="windowLevel" type="::uiImage::WindowLevel" autoConnect="yes">
                <inout key="image" uid="imageUID" autoConnect="yes"/>
                <inout key="TFSelections" uid="TFSelections" />
                <config selectedTFKey="SelectedTF" />
            </service>

            <service uid="transparencyEditor" type="::uiImage::ImageTransparency" autoConnect="yes" >
                <inout key="image" uid="imageUID" />
            </service>

            <service uid="meshReader" type="::uiIO::editor::SIOSelector" >
                <inout key="target" uid="meshUID" />
                <type mode="reader" />
            </service>

            <service uid="textureReader" type="::uiIO::editor::SIOSelector" >
                <inout key="target" uid="textureUID" />
                <type mode="reader" />
            </service>

            <start uid="MyIHM" />
            <start uid="imageReader" />

        </config>
    </extension>

</plugin>
