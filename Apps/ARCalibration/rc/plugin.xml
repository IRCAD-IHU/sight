<plugin id="ARCalibration">

    <xi:include href="configurations/ARCalibrationBase.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/sdb.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

    <extension implements="::fwServices::registry::AppConfigParameters">
        <id>ARCalibrationAppBase</id>
        <parameters>
            <param name="appName" value="ARCalibration 0.1" />
            <param name="appIconPath" value="Bundles/ARCalibration_0-1/arcalibration.ico" />
        </parameters>
    </extension>

    <extension implements="::fwServices::registry::AppConfig">
        <id>ExportSelection</id>
        <type>parameters</type>
        <parameters>
            <param name="selection" />
        </parameters>
        <config>
            <object uid="${selection}" src="ref">
                <service uid="export_selection" impl="::uiIO::editor::IOSelectorService" autoConnect="yes">
                    <type mode="writer" />
                     <selection mode="include" /> 
                     <addSelection service="::ioAtoms::SWriter" /> 
                     <config id="MDAtomsConfig" service="::ioAtoms::SWriter" />
                 </service>
                <start uid="export_selection" />
                <update uid="export_selection" />
            </object>
        </config>
    </extension>
    
    <extension implements="::fwActivities::registry::Activities">
        <id>CameraSeriesExport</id>
        <title>CameraSeries Export</title>
        <desc>CameraSeries Export</desc>
        <icon>NONE</icon>
        <requirements>
            <requirement name="series" type="::arData::CameraSeries" minOccurs="1" maxOccurs="1" />
        </requirements>
        <builder>::fwActivities::builder::ActivitySeries</builder>
        <appConfig id="ExportSelection">
            <parameters>
                <parameter replace="selection" by="@values.series" />
            </parameters>
        </appConfig>
    </extension>

    <extension implements="::fwServices::registry::ServiceConfig">
        <id>SDBOpenIOSelectorConfig</id>
        <service>::uiIO::editor::IOSelectorService</service>
        <desc>"Open" action's IOSelector config</desc>
        <config>
            <type mode="reader" />
            <selection mode="include" />
            <addSelection service="::ioAtoms::SReader" />
            <config id="MDAtomsConfig" service="::ioAtoms::SReader" />
        </config>
    </extension>

    <extension implements="::fwServices::registry::ServiceConfig">
        <id>MDAtomsConfig</id>
        <desc>reader/writer config to read/write an atom representing a medical data</desc>
        <config>
            <patcher context="MedicalData" version="V09AR" /> 
         </config>
     </extension>

</plugin>
