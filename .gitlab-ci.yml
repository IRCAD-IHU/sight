stages:
  - lint
  - build
  - tests
  - deploy

sheldon:
  image: registry.lan.local:5000/docker-envdev-clang6:dev
  stage: lint
  script:
    - git -c http.sslVerify=false clone --depth 1 https://gitlab-ci-token:${CI_JOB_TOKEN}@git.ircad.fr/Sight/sight-git.git
    - sight-git/hooks/sheldon HEAD^ HEAD

build:debug:
  image: registry.lan.local:5000/docker-envdev-clang6:dev
  stage: build
  script:
    - export CC=/usr/bin/clang-6.0
    - export CXX=/usr/bin/clang++-6.0
    - mkdir $CI_PROJECT_DIR/install $CI_PROJECT_DIR/build
    - cd $CI_PROJECT_DIR/build/
    - >
     cmake $CI_PROJECT_DIR
     -G Ninja
     -DUSE_CONAN=ON
     -DCMAKE_INSTALL_PREFIX=$CI_PROJECT_DIR/install
     -DCMAKE_BUILD_TYPE=Debug
     -DBUILD_TESTS=ON
     -DBUILD_DOCUMENTATION=OFF
     -DENABLE_PCH=ON
    - ninja

build:release:
  image: registry.lan.local:5000/docker-envdev-clang6:dev
  stage: build
  script:
    - export CC=/usr/bin/clang-6.0
    - export CXX=/usr/bin/clang++-6.0
    - mkdir $CI_PROJECT_DIR/install $CI_PROJECT_DIR/build
    - cd $CI_PROJECT_DIR/build/
    - >
     cmake $CI_PROJECT_DIR
     -G Ninja
     -DUSE_CONAN=ON
     -DCMAKE_INSTALL_PREFIX=$CI_PROJECT_DIR/install
     -DCMAKE_BUILD_TYPE=Release
     -DBUILD_TESTS=OFF
     -DBUILD_DOCUMENTATION=OFF
     -DENABLE_PCH=ON
    - ninja

doxygen:
  image: registry.lan.local:5000/docker-envdev-clang6:dev
  stage: build
  script:
    - sudo apt-get update -yqq && sudo apt-get install -yqq graphviz doxygen
    - export CC=/usr/bin/clang-6.0
    - export CXX=/usr/bin/clang++-6.0
    - mkdir $CI_PROJECT_DIR/install $CI_PROJECT_DIR/build
    - cd $CI_PROJECT_DIR/build/
    - >
     cmake $CI_PROJECT_DIR
     -G Ninja
     -DUSE_CONAN=ON
     -DCMAKE_INSTALL_PREFIX=$CI_PROJECT_DIR/install
     -DCMAKE_BUILD_TYPE=Release
     -DBUILD_TESTS=OFF
     -DBUILD_DOCUMENTATION=ON
     -DENABLE_PCH=ON
     -DBUILD_DOCSET=ON
     -DDOCUMENTATION_HTML_TARZ=ON
    - ninja doc
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - $CI_PROJECT_DIR/build/Documentation/Doxygen/

unit:
  image: registry.lan.local:5000/docker-envdev-clang6:dev
  stage: tests
  script:
    - export CC=/usr/bin/clang-6.0
    - export CXX=/usr/bin/clang++-6.0
  
pages:
  stage: deploy
  dependencies:
    - doxygen
  script:
    - mv build/Documentation/Doxygen/html/ public/
  artifacts:
    paths:
    - public