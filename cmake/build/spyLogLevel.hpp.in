/* WARNING, this file is GENERATED by Sight CMake-based build system from CMake/build/spyLogLevel.hpp.in
 * DO NOT EDIT MANUALLY !!!
 */

#ifndef __@PROJECT_NAME_UPCASE@_SPYLOGLEVEL_HPP__
#define __@PROJECT_NAME_UPCASE@_SPYLOGLEVEL_HPP__

#include <boost/preprocessor/control/expr_iif.hpp>
#include <boost/preprocessor/comparison/greater_equal.hpp>

// This file is included in 2 different ways whe using PCH:
// - From the config.hpp, it the compile unit uses a PCH (this it is included at the very beginning)
// - From the command line, if a PCH is being compiled

// We undef first the macro to remove the definition from the PCH
// So far indeed, the log level of the PCH was used
#undef __FWCORE_IF_ENABLED
#undef __FWCORE_IF_ELSE_ENABLED

// Now define the macro with the log level of this target
#define __FWCORE_IF_ENABLED( level, expr ) \
    BOOST_PP_EXPR_IIF( BOOST_PP_GREATER_EQUAL(SPYLOG_LEVEL_@FWPROJECT_NAME@, level), expr)

#define __FWCORE_IF_ELSE_ENABLED( level, expr1, expr2 ) \
    BOOST_PP_IIF( BOOST_PP_GREATER_EQUAL(SPYLOG_LEVEL_@FWPROJECT_NAME@, level), expr1, expr2)

#endif // __@PROJECT_NAME_UPCASE@_SPYLOGLEVEL_HPP__
