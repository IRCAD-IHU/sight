<extension implements="::fwServices::registry::AppConfig">
    <id>calExtrinsicView</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="cameraSeries" />
        <param name="camera1" />
        <param name="camera2" />
        <param name="calibrationInfo1" />
        <param name="calibrationInfo2" />
        <param name="camIndex" />
        <param name="preferencesModifiedProxy" />
    </parameters>
    <config>
        <!-- ******************************* Objects declaration ****************************** -->
        <object uid="Frame1" type="::fwData::Image" />
        <object uid="Frame2" type="::fwData::Image" />
        <object uid="Frame1TL" type="::arData::FrameTL" />
        <object uid="Frame2TL" type="::arData::FrameTL" />
        <object uid="${calibrationInfo1}" type="::arData::CalibrationInfo" src="ref" />
        <object uid="${calibrationInfo2}" type="::arData::CalibrationInfo" src="ref" />
        <object uid="${cameraSeries}" type="::arData::CameraSeries" src="ref" />
        <object uid="${camera1}" type="::arData::Camera" src="ref" />
        <object uid="${camera2}" type="::arData::Camera" src="ref" />
        <!-- ******************************* UI declaration *********************************** -->
        <service uid="extrinsicView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::CardinalLayoutManager">
                    <view align="center" />
                </layout>
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <view sid="extrinsicCameraView" start="yes" />
            </registry>
        </service>

        <service uid="extrinsicCameraView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::CardinalLayoutManager">
                    <view align="center" />
                    <view align="bottom" caption="Calibration" />
                    <view align="bottom" caption="Information" />
                </layout>
                <toolBar/>
            </gui>
            <registry>
                <toolBar sid="toolBar" start="yes" />
                <view sid="videoView" start="yes" />
                <view sid="calibrationInfoView" start="yes" />
                <view sid="cameraInfoView" start="yes" />
            </registry>
        </service>

        <service uid="toolBar" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <menuItem name="Start camera" icon="arMedia-0.1/icons/start-cam.svg" />
                    <menuItem name="Stop camera" icon="arMedia-0.1/icons/stop-cam.svg" />
                    <menuItem name="Pause video" icon="arMedia-0.1/icons/pause-cam.svg" />
                    <menuItem name="Loop video" icon="arMedia-0.1/icons/loop-cam.svg" style="check" />
                </layout>
            </gui>
            <registry>
                <menuItem sid="ActionStartCamera" start="yes" />
                <menuItem sid="ActionStopCamera" start="yes" />
                <menuItem sid="PauseVideo" start="yes" />
                <menuItem sid="LoopVideo" start="yes" />
            </registry>
        </service>

        <service uid="calibrationInfoView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::CardinalLayoutManager">
                    <view align="center" />
                </layout>
                <toolBar align="left">
                    <toolBitmapSize height="24" width="24" />
                </toolBar>
            </gui>
            <registry>
                <view sid="ExtrinsicCalibrationInfoEditor" start="yes" />
                <toolBar sid="extrinsicCamera" start="yes" />
            </registry>
        </service>

        <service uid="videoView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="camerasView" start="yes" />
                <view sid="VideoSlider" start="yes" />
            </registry>
        </service>

        <service uid="camerasView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view/>
                    <view/>
                </layout>
            </gui>
            <registry>
                <view sid="camera1" start="yes" />
                <view sid="camera2" start="yes" />
            </registry>
        </service>

        <service uid="extrinsicCamera" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <editor/>
                    <menuItem name="Add" icon="media-0.1/icons/Import.svg" />
                    <menuItem name="Remove" icon="arMedia-0.1/icons/remove.svg" />
                    <menuItem name="Reset" icon="arMedia-0.1/icons/reset.svg" />
                    <menuItem name="Calibrate with openCV" icon="arMedia-0.1/icons/CheckButton.svg" />
                    <menuItem name="Draw" icon="media-0.1/icons/Preview.svg" />
                </layout>
            </gui>
            <registry>
                <editor sid="Status" start="yes" />
                <menuItem sid="ActionAdd" start="yes" />
                <menuItem sid="ActionRemove" start="yes" />
                <menuItem sid="ActionReset" start="yes" />
                <menuItem sid="ActionGoOpenCV" start="yes" />
                <menuItem sid="ActionDisplayImage" start="yes" />
            </registry>
        </service>

        <service uid="cameraInfoView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view caption="camera 1" />
                    <view caption="camera 2" />
                    <view caption="camera series" />
                    <view align="bottom" />
                </layout>
            </gui>
            <registry>
                <view sid="cameraInfo1" start="yes" />
                <view sid="cameraInfo2" start="yes" />
                <view sid="cameraSeriesInfo" start="yes" />
                <view sid="errorLabel" start="yes" />
            </registry>
        </service>

        <!-- ******************************* Actions ****************************************** -->
        <service uid="ActionAdd" type="::gui::action::SSlotCaller">
            <slots>
                <slot>ChessboardDetector/detectPoints</slot>
            </slots>
        </service>

        <service uid="ActionReset" type="::gui::action::SSlotCaller">
            <slots>
                <slot>ExtrinsicCalibrationInfoEditor/reset</slot>
            </slots>
        </service>

        <service uid="ActionRemove" type="::gui::action::SSlotCaller">
            <slots>
                <slot>ExtrinsicCalibrationInfoEditor/remove</slot>
            </slots>
        </service>

        <service uid="ActionGoOpenCV" type="::gui::action::SSlotCaller">
            <slots>
                <slot>openCVExtrinsicCal/update</slot>
                <slot>Status/changeToOrange</slot>
            </slots>
        </service>

        <service uid="ActionDisplayImage" type="::gui::action::SSlotCaller">
            <slots>
                <slot>ExtrinsicCalibrationInfoEditor/getSelection</slot>
            </slots>
        </service>

        <service uid="ActionStartCamera" type="::gui::action::SSlotCaller">
            <slots>
                <slot>VideoGrabber1/startCamera</slot>
                <slot>VideoGrabber2/startCamera</slot>
            </slots>
        </service>

        <service uid="ActionStopCamera" type="::gui::action::SSlotCaller">
            <slots>
                <slot>VideoGrabber1/stopCamera</slot>
                <slot>VideoGrabber2/stopCamera</slot>
            </slots>
        </service>

        <service uid="PauseVideo" type="::gui::action::SSlotCaller">
            <slots>
                <slot>VideoGrabber1/pauseCamera</slot>
                <slot>VideoGrabber2/pauseCamera</slot>
            </slots>
        </service>

        <service uid="LoopVideo" type="::gui::action::SSlotCaller">
            <slots>
                <slot>VideoGrabber1/loopVideo</slot>
                <slot>VideoGrabber2/loopVideo</slot>
            </slots>
        </service>

        <!-- ******************************* Services ***************************************** -->
        <service uid="VideoSlider" type="::videoQt::editor::SSlider" />
        <service uid="synchronizer" type="::videoTools::SFrameMatrixSynchronizer" worker="synchronizer">
            <in group="frameTL">
                <key uid="Frame1TL" />
                <key uid="Frame2TL" />
            </in>
            <inout group="image">
                <key uid="Frame1" />
                <key uid="Frame2" />
            </inout>
            <framerate>30</framerate>
        </service>

        <!-- *************************** Begin generic scene *************************** -->

        <service uid="camera1" type="::fwRenderVTK::SRender" >
            <scene renderMode="timer">
                <renderer id="default" background="0.0" />
                <adaptor uid="videoAdapter1" />
                <adaptor uid="interactorStyle1" />
            </scene>
        </service>

        <service uid="videoAdapter1" type="::visuVTKARAdaptor::SVideo" autoConnect="yes">
            <in key="frame" uid="Frame1" />
            <config renderer="default" />
        </service>

        <service uid="interactorStyle1" type="::visuVTKAdaptor::SInteractorStyle">
            <config renderer="default" style="InteractorStyle2DForNegato" />
        </service>

        <!-- *************************** End generic scene *************************** -->

        <!-- *************************** Begin generic scene *************************** -->

        <service uid="camera2" type="::fwRenderVTK::SRender">
            <scene renderMode="timer">
                <renderer id="default" background="0.0" />
                <adaptor uid="videoAdapter2" />
                <adaptor uid="interactorStyle2" />
            </scene>
        </service>

        <service uid="videoAdapter2" type="::visuVTKARAdaptor::SVideo" autoConnect="yes">
            <in key="frame" uid="Frame2" />
            <config renderer="default" />
        </service>

        <service uid="interactorStyle2" type="::visuVTKAdaptor::SInteractorStyle">
            <config renderer="default" style="InteractorStyle2DForNegato" />
        </service>

        <!-- *************************** End generic scene *************************** -->

        <service uid="ExtrinsicCalibrationInfoEditor" type="::uiCalibration::SCalibrationInfoEditor" autoConnect="yes">
            <inout key="calInfo1" uid="${calibrationInfo1}" />
            <inout key="calInfo2" uid="${calibrationInfo2}" />
        </service>

        <service uid="Status" type="::uiTools::editor::SStatus">
            <green>Point are visible</green>
            <orange>Calibration in progress</orange>
            <red>Points are NOT visible</red>
        </service>

        <service uid="errorLabel" type="::uiTools::editor::STextStatus">
            <label>Reprojection Error (RMSE)</label>
        </service>

        <service uid="ChessboardDetector" type="::videoCalibration::SChessBoardDetector" worker="extr_chess_checker">
            <in group="timeline">
                <key uid="Frame1TL" />
                <key uid="Frame2TL" />
            </in>
            <inout group="calInfo">
                <key uid="${calibrationInfo1}" />
                <key uid="${calibrationInfo2}" />
            </inout>
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" />
        </service>

        <service uid="DisplayCalibrationInfo" type="::uiCalibration::SDisplayCalibrationInfo">
            <in key="calInfo1" uid="${calibrationInfo1}" />
            <in key="calInfo2" uid="${calibrationInfo2}" />
        </service>

        <service uid="VideoGrabber1" type="::videoTools::SGrabberProxy">
            <in key="camera" uid="${camera1}" />
            <inout key="frameTL" uid="Frame1TL" />
            <config>
                <gui title="Please select the first camera grabber" />
            </config>
        </service>

        <service uid="VideoGrabber2" type="::videoTools::SGrabberProxy">
            <in key="camera" uid="${camera2}" />
            <inout key="frameTL" uid="Frame2TL" />
            <config>
                <gui title="Please select the second camera grabber" />
            </config>
        </service>

        <service uid="openCVExtrinsicCal" type="::videoCalibration::SOpenCVExtrinsic" worker="extr_chess_checker">
            <in key="calibrationInfo1" uid="${calibrationInfo1}" />
            <in key="calibrationInfo2" uid="${calibrationInfo2}" />
            <inout key="cameraSeries" uid="${cameraSeries}" />
            <camIndex>${camIndex}</camIndex>
            <board width="CHESSBOARD_WIDTH" height="CHESSBOARD_HEIGHT" squareSize="CHESSBOARD_SQUARE_SIZE" />
        </service>

        <service uid="cameraSeriesInfo" type="::uiCalibration::SCameraSeriesEditor" autoConnect="yes">
            <in key="cameraSeries" uid="${cameraSeries}" />
            <camIndex>${camIndex}</camIndex>
        </service>

        <service uid="cameraInfo1" type="::uiCalibration::SCameraInformationEditor" autoConnect="yes">
            <in key="camera" uid="${camera1}" />
        </service>

        <service uid="cameraInfo2" type="::uiCalibration::SCameraInformationEditor" autoConnect="yes">
            <in key="camera" uid="${camera2}" />
        </service>

        <!-- ******************************* Connections ************************************** -->
        <connect>
            <signal>Frame1TL/objectPushed</signal>
            <slot>ChessboardDetector/checkPoints</slot>
        </connect>

        <connect>
            <signal>Frame2TL/objectPushed</signal>
            <slot>ChessboardDetector/checkPoints</slot>
        </connect>

        <connect>
            <signal>ChessboardDetector/chessboardDetected</signal>
            <slot>Status/changeToGreen</slot>
        </connect>

        <connect>
            <signal>ChessboardDetector/chessboardNotDetected</signal>
            <slot>Status/changeToRed</slot>
        </connect>

        <connect>
            <signal>${calibrationInfo1}/getRecord</signal>
            <slot>DisplayCalibrationInfo/displayImage</slot>
        </connect>

        <connect>
            <signal>VideoSlider/positionChanged</signal>
            <slot>VideoGrabber1/setPositionVideo</slot>
            <slot>VideoGrabber2/setPositionVideo</slot>
        </connect>

        <connect>
            <signal>VideoGrabber1/durationModified</signal>
            <slot>VideoSlider/setDurationSlider</slot>
        </connect>

        <connect>
            <signal>VideoGrabber1/positionModified</signal>
            <signal>VideoGrabber2/positionModified</signal>
            <slot>VideoSlider/setPositionSlider</slot>
        </connect>

        <connect>
            <signal>${calibrationInfo1}/addedRecord</signal>
            <signal>${calibrationInfo1}/removedRecord</signal>
            <signal>${calibrationInfo1}/resetRecord</signal>
            <slot>ExtrinsicCalibrationInfoEditor/update</slot>
        </connect>

        <connect>
            <signal>openCVExtrinsicCal/errorComputed</signal>
            <slot>errorLabel/setDoubleParameter</slot>
        </connect>

        <connect channel="${preferencesModifiedProxy}">
            <slot>openCVExtrinsicCal/updateChessboardSize</slot>
            <slot>ChessboardDetector/updateChessboardSize</slot>
        </connect>

        <start uid="extrinsicView" />
        <start uid="openCVExtrinsicCal" />
        <start uid="ChessboardDetector" />
        <start uid="DisplayCalibrationInfo" />
        <start uid="synchronizer" />
        <start uid="VideoGrabber1" />
        <start uid="VideoGrabber2" />
        <!-- VTK scene 'camera1' -->
        <start uid="videoAdapter1" />
        <start uid="interactorStyle1" />
        <!-- VTK scene 'camera2' -->
        <start uid="videoAdapter2" />
        <start uid="interactorStyle2" />
    </config>
</extension>
