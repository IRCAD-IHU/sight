<extension implements="::fwServices::registry::AppConfig">
    <id>TrackedCameraRegistration</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="AS_UID" />
        <param name="SERIESDB" />
        <param name="rgbCameraSeries" />
        <param name="senseCameraSeries" />
        <param name="markerMesh" />
        <param name="mode" />
    </parameters>
    <config>

        <object uid="${rgbCameraSeries}" type="::arData::CameraSeries" src="ref"/>
        <object uid="${senseCameraSeries}" type="::arData::CameraSeries" src="ref"/>

        <object uid="${markerMesh}" type="::fwData::Mesh" src="ref"/>

        <object uid="${SERIESDB}" type="::fwMedData::SeriesDB" src="ref" />

        <object uid="rgbCamera" type="::arData::Camera" src="deferred" />
        <object uid="senseCamera" type="::arData::Camera" />

        <object uid="senseFrameTLColor" type="::arData::FrameTL" />
        <object uid="rgbFrameTLColor" type="::arData::FrameTL" />

        <object uid="rgbImageVideo" type="::fwData::Image" />
        <object uid="senseImageVideo" type="::fwData::Image" />

        <object uid="rgbMatrixTL" type="::arData::MatrixTL" />
        <object uid="senseMatrixTL" type="::arData::MatrixTL" />

        <object uid="rgbTag1Matrix" type="::fwData::TransformationMatrix3D" >
            <matrix>
                   <![CDATA[
                       1  0  0  1000
                       0  1  0  1000
                       0  0  1  -1000
                       0  0  0  1
                   ]]>
            </matrix>
        </object>

        <object uid="rgbTag2Matrix" type="::fwData::TransformationMatrix3D" >
            <matrix>
                   <![CDATA[
                       1  0  0  1000
                       0  1  0  1000
                       0  0  1  -1000
                       0  0  0  1
                   ]]>
            </matrix>
        </object>

        <object uid="senseTag1Matrix" type="::fwData::TransformationMatrix3D" >
            <matrix>
                   <![CDATA[
                       1  0  0  1000
                       0  1  0  1000
                       0  0  1  -1000
                       0  0  0  1
                   ]]>
            </matrix>
        </object>

        <object uid="senseTag2Matrix" type="::fwData::TransformationMatrix3D" >
            <matrix>
                   <![CDATA[
                       1  0  0  1000
                       0  1  0  1000
                       0  0  1  -1000
                       0  0  0  1
                   ]]>
            </matrix>
        </object>

        <object uid="registrationMatrix" type="::fwData::TransformationMatrix3D" />
        <object uid="senseOpticalCenterMatrix" type="::fwData::TransformationMatrix3D" />
        <object uid="arTag1Matrix" type="::fwData::TransformationMatrix3D" />
        <object uid="currentTag1Matrix" type="::fwData::TransformationMatrix3D" />

        <!-- ***************************************** Begin layouts declaration ***************************************** -->

        <service uid="mainView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view proportion="0" />
                    <view proportion="0" />
                </layout>
                <toolBar />
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <toolBar sid="toolbar" start="yes" />
                <view wid="rgbVideoView" start="yes" />
                <view wid="senseVideoView" start="yes" />
            </registry>
        </service>

        <service uid="toolbar" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <menuItem name="start" icon="arMedia-0.1/icons/start.svg" />
                    <menuItem name="stop" icon="arMedia-0.1/icons/stop.svg" />
                    <separator />
                    <menuItem name="Compute registration matrix" icon="arMedia-0.1/icons/calibrationActivity.svg"/>
                    <menuItem name="Switch matrices" style="check" icon="arMedia-0.1/icons/reset.svg"/>
                    <separator />
                    <menuItem name="Export registration matrix" icon="arMedia-0.1/icons/save.svg"/>
                </layout>
            </gui>
            <registry>
                <menuItem sid="startVideo" start="yes" />
                <menuItem sid="stopVideo" start="yes" />
                <menuItem sid="actionConcatenateRegistrationMatrix" start="yes" />
                <menuItem sid="actionSwitchMatrices" start="yes" />
                <menuItem sid="actionSaveMatrix" start="yes"/>
            </registry>
        </service>

        <!-- *************************** End layouts declaration ****************************** -->

        <!-- *************************** Begin services declaration ***************** -->

        <service uid="loadRgbCameraView" type="::fwServices::SConfigController">
            <appConfig id="rgbCameraView" />
            <parameter replace="WID_PARENT" uid="rgbVideoView" />

            <inout key="camera" uid="rgbCamera" />
            <inout key="frameTL" uid="rgbFrameTLColor" />
            <inout key="imageVideo" uid="rgbImageVideo" />
            <inout key="markerMesh" uid="${markerMesh}" />

            <inout key="matrixTL" uid="rgbMatrixTL" />
            <inout key="tagMatrix1" uid="currentTag1Matrix" />
            <inout key="tagMatrix2" uid="rgbTag2Matrix" />
            <inout key="registrationMatrix" uid="senseOpticalCenterMatrix" />
            <parameter replace="tagsToDetect" by="101,128" />
        </service>

        <service uid="loadSenseCameraView" type="::fwServices::SConfigController">
            <appConfig id="rgbCameraView" />
            <parameter replace="WID_PARENT" uid="senseVideoView" />

            <inout key="camera" uid="senseCamera" />
            <inout key="frameTL" uid="senseFrameTLColor" />
            <inout key="imageVideo" uid="senseImageVideo" />
            <inout key="markerMesh" uid="${markerMesh}" />

            <inout key="matrixTL" uid="senseMatrixTL" />
            <inout key="tagMatrix1" uid="senseTag1Matrix" />
            <inout key="tagMatrix2" uid="senseTag2Matrix" />
            <inout key="registrationMatrix" uid="senseTag2Matrix" />
            <parameter replace="tagsToDetect" by="101" />
        </service>

        <service uid="loadGrabberOpenni" type="::fwServices::SConfigController">
            <appConfig id="openniGrabber" />

            <inout key="cameraSeries" uid="${senseCameraSeries}" />
            <inout key="camera" uid="senseCamera" />
            <inout key="frameTL" uid="senseFrameTLColor" />
            <parameter replace="frameGrabber" uid="senseFrameGrabber" />
        </service>

        <service uid="loadGrabberQt" type="::fwServices::SConfigController">
            <appConfig id="vlcGrabber" />

            <inout key="cameraSeries" uid="${senseCameraSeries}" />
            <inout key="camera" uid="senseCamera" />
            <inout key="frameTL" uid="senseFrameTLColor" />
            <parameter replace="frameGrabber" uid="senseFrameGrabber" />
        </service>

        <service uid="synchronizer" type="::videoTools::SFrameMatrixSynchronizer" worker="synchronizer">
            <in group="frameTL">
                <key uid="rgbFrameTLColor"/>
                <key uid="senseFrameTLColor"/>
            </in>
            <inout group="image">
                <key uid="rgbImageVideo"/>
                <key uid="senseImageVideo"/>
            </inout>
            <in group="matrixTL">
                <key uid="rgbMatrixTL"/>
                <key uid="senseMatrixTL"/>
            </in>
            <inout group="matrices0">
                <key uid="rgbTag1Matrix"/>
                <key uid="rgbTag2Matrix"/>
            </inout>
            <inout group="matrices1">
                <key uid="senseTag1Matrix"/>
            </inout>
            <framerate>30</framerate>
        </service>

        <service uid="rgbFrameGrabber" type="::videoQt::SFrameGrabber" >
            <in key="camera" uid="rgbCamera" />
            <inout key="frameTL" uid="rgbFrameTLColor" />
        </service>
        <service uid="startVideo" type="::gui::action::SSlotCaller" >
            <slots>
                <slot>rgbFrameGrabber/startCamera</slot>
                <slot>senseFrameGrabber/startCamera</slot>
            </slots>
        </service>

        <service uid="stopVideo" type="::gui::action::SSlotCaller" >
            <slots>
                <slot>rgbFrameGrabber/stopCamera</slot>
                <slot>senseFrameGrabber/stopCamera</slot>
            </slots>
        </service>

        <service uid="actionConcatenateRegistrationMatrix" type="::gui::action::SSlotCaller">
            <slots>
                <slot>concatenateRegistrationMatrix/update</slot>
            </slots>
        </service>

        <service uid="actionSwitchMatrices" type="::gui::action::SSlotCaller">
            <slots>
                <slot>switchMatrices/switchMatrix</slot>
            </slots>
        </service>

        <service uid="actionSaveMatrix" type="::gui::action::SSlotCaller">
            <slots>
                <slot>matrixWriter/update</slot>
            </slots>
        </service>

        <service uid="matrixWriter" type="::uiIO::editor::SIOSelector">
            <inout key="data" uid="registrationMatrix" />
            <type mode="writer" />
            <selection mode="include" />
            <addSelection service="::ioData::TransformationMatrix3DWriterService" />
        </service>

        <service uid="extractRgbCamera" type="::ctrlCamp::SExtractObj">
            <inout key="source" uid="${rgbCameraSeries}">
                <extract from="@cameras.0" />
            </inout>
           <out group="target">
               <key uid="rgbCamera"/>
           </out>
        </service>

        <service uid="concatenateRegistrationMatrix" type="::maths::SConcatenateMatrices" >
            <in group="matrix">
                <key uid="rgbTag2Matrix" inverse="true" />
                <key uid="rgbTag1Matrix" />
                <key uid="senseTag1Matrix" inverse="true" />
            </in>
            <inout key="output" uid="registrationMatrix" />
        </service>

        <service uid="concatenatesSenseOpticalCenterMatrix" type="::maths::SConcatenateMatrices" >
            <in group="matrix">
                <key uid="rgbTag2Matrix" autoConnect="yes"/>
                <key uid="registrationMatrix" autoConnect="yes" />
            </in>
            <inout key="output" uid="senseOpticalCenterMatrix" />
        </service>

        <service uid="concatenateTag1ARMatrix" type="::maths::SConcatenateMatrices" >
            <in group="matrix">
                <key uid="rgbTag2Matrix" autoConnect="yes" />
                <key uid="registrationMatrix" autoConnect="yes" />
                <key uid="senseTag1Matrix" autoConnect="yes" />
            </in>
            <inout key="output" uid="arTag1Matrix" />
        </service>

        <service uid="switchMatrices" type="::maths::SSwitchMatrices" autoConnect="yes">
            <in group="matrix">
                <key uid="rgbTag1Matrix" />
                <key uid="arTag1Matrix" />
            </in>
            <inout key="output" uid="currentTag1Matrix" />
       </service>

        <!-- *************************** End services declaration ***************************** -->

        <!-- *************************** Begin proxies declaration **************************** -->

        <!-- *************************** End proxies declaration ****************************** -->

        <!-- *************************** Begin connect declaration **************************** -->

        <connect>
            <signal>synchronizer/allMatricesFound</signal>
            <slot>actionConcatenateRegistrationMatrix/setIsExecutable</slot>
        </connect>

        <!-- *************************** End connect declaration ****************************** -->

        <!-- *************************** Begin Start ****************************************** -->

        <start uid="mainView" />
        <start uid="concatenateRegistrationMatrix" />
        <start uid="concatenatesSenseOpticalCenterMatrix" />
        <start uid="concatenateTag1ARMatrix" />
        <start uid="switchMatrices" />
        <start uid="matrixWriter" />
        <start uid="extractRgbCamera" />
        <start uid="synchronizer" />
        <start uid="loadRgbCameraView" />
        <start uid="loadSenseCameraView" />
        <start uid="loadGrabber${mode}" />
        <start uid="rgbFrameGrabber" />

        <!-- *************************** End Start ****************************************** -->

        <!-- *************************** Begin Update ****************************************** -->

        <update uid="extractRgbCamera" />

        <!-- *************************** End Update ****************************************** -->

    </config>
</extension>
