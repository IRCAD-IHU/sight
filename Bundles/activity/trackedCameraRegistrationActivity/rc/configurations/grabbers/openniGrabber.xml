<extension implements="::fwServices::registry::AppConfig">
    <id>openniGrabber</id>
    <parameters>

        <param name="frameGrabber" />
        <param name="frameTL" />
        <param name="camera" />
        <param name="cameraSeries" />

    </parameters>
    <config>

        <!-- *************************** Begin objects declaration **************************** -->

        <object uid="${cameraSeries}" type="::arData::CameraSeries" src="ref" />
        <object uid="${camera}" type="::arData::Camera" src="ref" />
        <object uid="${frameTL}" type="::arData::FrameTL" src="ref" />
        
        <object uid="depthFrameTL" type="::arData::FrameTL" />
        <object uid="cameraDeferred" type="::arData::Camera" src="deferred" />

        <!-- *************************** End objects declaration ****************************** -->

        <!-- *************************** Begin layouts declaration **************************** -->
        <!-- *************************** End layouts declaration ****************************** -->

        <!-- *************************** Begin services declaration ***************** -->

        <!-- Manages Sense camera configuration -->
        <service uid="${frameGrabber}" type="::videoOpenni::SScan" worker="scanWorker">
            <inout key="frameTL" uid="${frameTL}" />
            <inout key="depthTL" uid="depthFrameTL" />
        </service>

        <service uid="extractCamera" type="::ctrlCamp::SExtractObj">
            <inout key="source" uid="${cameraSeries}" >
                <extract from="@cameras.1" />
            </inout>
           <out group="target">
               <key uid="cameraDeferred"/>
           </out>
        </service>

        <service uid="copyCamera" type="::ctrlCamp::SCopy" >
            <in key="source" uid="cameraDeferred" />
            <inout key="target" uid="${camera}" />
        </service>

        <!-- *************************** End services declaration ***************************** -->

        <!-- *************************** Begin proxies declaration **************************** -->

        <!-- *************************** End proxies declaration ****************************** -->

        <!-- *************************** Begin connect declaration **************************** -->

        <connect>
                <signal>${frameGrabber}/cameraStarted</signal>
                <slot>extractCamera/update</slot>
        </connect>
        
        <!-- *************************** End connect declaration ****************************** -->

        <!-- *************************** Begin Start ****************************************** -->
        
        <start uid="extractCamera" />
        <start uid="${frameGrabber}" />
        <start uid="copyCamera"/>

        <!-- *************************** End Start ******************************************** -->

        <!-- *************************** Begin Update ****************************************** -->

        <update uid="copyCamera"/>

        <!-- *************************** End Update ****************************************** -->

    </config>
</extension>
