<extension implements="::fwServices::registry::AppConfig2">
    <id>toolsCalibration</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="SERIESDB" />
        <param name="AS_UID" />
        <param name="camera1" />
        <param name="camera2" />
        <param name="cameraExtrinsic" />
        <param name="tagsId" />
    </parameters>
    <config>

        <object uid="${camera1}" type="::arData::Camera" src="ref" />
        <object uid="${camera2}" type="::arData::Camera" src="ref" />
        <object uid="${cameraExtrinsic}" type="::fwData::TransformationMatrix3D" src="ref" />
        <object uid="frame1TL" type="::arData::FrameTL" />
        <object uid="frame2TL" type="::arData::FrameTL" />
        <object uid="markersPL" type="::fwData::PointList" />
        <object uid="tagTL1" type="::arData::MarkerTL" />
        <object uid="tagTL2" type="::arData::MarkerTL" />
        <object uid="matrixTL" type="::arData::MatrixTL" />
        <object uid="image1" type="::fwData::Image" />
        <object uid="image2" type="::fwData::Image" />
        <object uid="toolCalibration" type="::fwData::TransformationMatrix3D" />

        <service uid="mainView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::CardinalLayoutManager">
                    <view caption="Tools Calibration" align="center" />
                    <view caption="Infos" align="bottom" />
                </layout>
                <toolBar />
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <view sid="camerasView" start="yes" />
                <view sid="infosView" start="yes" />
                <toolBar sid="toolbar" start="yes" />
            </registry>
        </service>

        <!-- Toolbar : Play, stop, pause videos -->
        <service uid="toolbar" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <editor />
                    <separator />
                    <menuItem name="start" icon="@BUNDLE_PREFIX@/arMedia_0-1/icons/start-cam.svg" />
                    <menuItem name="stop" icon="@BUNDLE_PREFIX@/arMedia_0-1/icons/stop-cam.svg" />
                    <menuItem name="pause" icon="@BUNDLE_PREFIX@/arMedia_0-1/icons/pause-cam.svg" />
                    <separator />
                    <editor />
                    <separator />
                    <menuItem name="Check" icon="@BUNDLE_PREFIX@/media_0-1/icons/Import.svg" />
                    <separator />
                    <menuItem name="Compute Registration" icon="@BUNDLE_PREFIX@/arMedia_0-1/icons/CheckButton.svg" />
                    <separator />
                    <menuItem name="Save" icon="@BUNDLE_PREFIX@/arMedia_0-1/icons/save.svg" />
                    <menuItem name="Show/Hide" icon="@BUNDLE_PREFIX@/arMedia_0-1/icons/show.svg" icon2="@BUNDLE_PREFIX@/arMedia_0-1/icons/hide.svg" style="check" />
                </layout>
            </gui>
            <registry>
                <editor sid="CameraSelector1" start="yes" />
                <menuItem sid="ActionStartCamera" start="yes" />
                <menuItem sid="ActionStopCamera" start="yes" />
                <menuItem sid="PauseVideo" start="yes" />
                <editor sid="CameraSelector2" start="yes" />
                <menuItem sid="DetectPoint" start="yes" />
                <menuItem sid="ActionRegistrate" start="yes" />
                <menuItem sid="ActionSaveMatrix" start="yes" />
                <menuItem sid="ActionShowHideAxes" start="yes" />
            </registry>
        </service>

        <service uid="ActionStartCamera" type="::gui::action::SSlotCaller">
            <slots>
                <slot>frameGrabber1/startCamera</slot>
                <slot>frameGrabber2/startCamera</slot>
            </slots>
        </service>

        <service uid="ActionStopCamera" type="::gui::action::SSlotCaller">
            <slots>
                <slot>frameGrabber1/stopCamera</slot>
                <slot>frameGrabber2/stopCamera</slot>
            </slots>
        </service>

        <service uid="PauseVideo" type="::gui::action::SSlotCaller">
            <slots>
                <slot>frameGrabber1/pauseCamera</slot>
                <slot>frameGrabber2/pauseCamera</slot>
            </slots>
        </service>

        <service uid="DetectPoint" type="::gui::action::SSlotCaller">
            <slots>
                <slot>markerToPoint/addPoint</slot>
            </slots>
        </service>

        <service uid="ActionRegistrate" type="::gui::action::SSlotCaller">
            <slots>
                <slot>toolRegistration/update</slot>
            </slots>
        </service>

        <service uid="ActionSaveMatrix" type="::gui::action::SSlotCaller">
            <slots>
                <slot>calibWriter/update</slot>
            </slots>
        </service>

        <service uid="ActionShowHideAxes" type="::gui::action::SBooleanSlotCaller">
            <state active="true" />
            <slots>
                <slot>sphereCenter/updateVisibility</slot>
            </slots>
        </service>


        <!-- Parent view of cameras -->
        <service uid="camerasView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view caption="Video 1" proportion="1" />
                    <view caption="Video 2" proportion="1" />
                </layout>
            </gui>
            <registry>
                <view sid="camera1View" start="yes" />
                <view sid="camera2View" start="yes" />
            </registry>
        </service>

        <service uid="infosView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view caption="3D" proportion="1" />
                </layout>
            </gui>
            <registry>
                <view sid="3DScene" start="yes" />
            </registry>
        </service>

        <!-- View for the first camera -->
        <service uid="camera1View" type="::fwRenderVTK::SRender" autoConnect="yes">
            <in key="image1" uid="image1" />
            <scene>
                <renderer id="default" background="0.0" />
                <adaptor id="videoAdapter" class="::visuVTKARAdaptor::SVideoAdapter" objectId="image1">
                    <config renderer="default" />
                </adaptor>
                <adaptor id="interactorStyle" class="::visuVTKAdaptor::InteractorStyle" objectId="self">
                    <config renderer="default" style="InteractorStyle2DForNegato" />
                </adaptor>
            </scene>
        </service>

        <!-- View for the second camera -->
        <service uid="camera2View" type="::fwRenderVTK::SRender" autoConnect="yes">
            <in key="image2" uid="image2" />
            <scene>
                <renderer id="default" background="0.0" />
                <adaptor id="videoAdapter" class="::visuVTKARAdaptor::SVideoAdapter" objectId="image2">
                    <config renderer="default" />
                </adaptor>
                <adaptor id="interactorStyle" class="::visuVTKAdaptor::InteractorStyle" objectId="self">
                    <config renderer="default" style="InteractorStyle2DForNegato" />
                </adaptor>
            </scene>
        </service>

        <!-- View for the 3D Scene -->
        <service uid="3DScene" type="::fwRenderVTK::SRender" autoConnect="yes">
            <in key="toolCalibration" uid="toolCalibration" />
            <in key="markersPL" uid="markersPL" />
            <scene>
                <renderer id="default" background="0.3" />

                <vtkObject id="calib" class="vtkTransform" />

                <adaptor id="TransformMatrixAdaptor" class="::visuVTKAdaptor::Transform" objectId="toolCalibration">
                    <config renderer="default" picker="" transform="calib" />
                </adaptor>

                <adaptor id="pointListAdaptor" class="::visuVTKARAdaptor::SPointList3D" objectId="markersPL">
                    <config renderer="default" color="#ff0000" radius="3" />
                </adaptor>
                <adaptor uid="sphereCenter" id="sphereCenter" class="::visuVTKAdaptor::Axes" objectId="self">
                    <config renderer="default" transform="calib" />
                </adaptor>

                <adaptor id="interactorStyle" class="::visuVTKAdaptor::InteractorStyle" objectId="self">
                    <config renderer="default" style="InteractorStyle3DForNegato" />
                </adaptor>

            </scene>
        </service>

        <!-- Trackers -->
        <service uid="tracker1" type="::trackerAruco::SArucoTracker" worker="tracking">
            <in key="timeline" uid="frame1TL" autoConnect="yes" />
            <in key="camera" uid="${camera1}" />
            <inout group="tagTL">
                <key uid="tagTL1" />
            </inout>
            <config>
                <track>
                    <markers id="${tagsId}" />
                </track>
                <threshold>
                    <method>ADPT_THRES</method>
                    <blockSize>7</blockSize>
                    <constant>7</constant>
                </threshold>
                <patternWidth>30</patternWidth>
                <debugMarkers>yes</debugMarkers>
            </config>
        </service>

        <service uid="tracker2" type="::trackerAruco::SArucoTracker" worker="tracking2">
            <in key="timeline" uid="frame2TL" autoConnect="yes" />
            <in key="camera" uid="${camera2}" />
            <inout group="tagTL">
                <key uid="tagTL2" />
            </inout>
            <config>
                <track>
                    <marker id="${tagsId}" />
                </track>
                <threshold>
                    <method>ADPT_THRES</method>
                    <blockSize>7</blockSize>
                    <constant>7</constant>
                </threshold>
                <patternWidth>30</patternWidth>
                <debugMarkers>yes</debugMarkers>
            </config>
        </service>

        <!-- Synchronizer -->
        <service uid="synchronizer" type="::videoTools::SFrameMatrixSynchronizer" worker="videoWorker">
            <in group="frameTL">
                <key uid="frame1TL" />
                <key uid="frame2TL" />
            </in>
            <inout group="image">
                <key uid="image1" />
                <key uid="image2" />
            </inout>
            <framerate>30</framerate>
        </service>

        <service uid="markerRegistration" type="::registrationARL::SPoseFrom2d" worker="registration">
            <in group="markerTL" autoConnect="yes">
                <key uid="tagTL1" />
                <key uid="tagTL2" />
            </in>
            <in group="camera">
                <key uid="${camera1}" />
                <key uid="${camera2}" />
            </in>
            <in key="extrinsic" uid="${cameraExtrinsic}" />
            <inout key="matrixTL" uid="matrixTL" />
            <patternWidth>60</patternWidth>
        </service>

        <!-- Cameras object (from calibration or selector) -->
        <service uid="CameraSelector1" type="::videoQt::editor::SCamera">
            <inout key="camera" uid="${camera1}" />
            <videoSupport>yes</videoSupport>
        </service>

        <service uid="CameraSelector2" type="::videoQt::editor::SCamera">
            <inout key="camera" uid="${camera2}" />
            <videoSupport>yes</videoSupport>
        </service>

        <service uid="toolRegistration" type="::videoCalibration::SFixedPointRegistration">
            <inout key="matrix" uid="toolCalibration" />
            <in key="pointList" uid="markersPL" />
            </service>

        <service uid="calibWriter" type="::uiIO::editor::SIOSelector">
            <in key="target" uid="toolCalibration" />
            <type mode="writer" />
            <selection mode="include" />
            <addSelection service="::ioData::TransformationMatrix3DWriterService" />
        </service>

        <!-- FrameTimeLines -->
        <service uid="frameGrabber1" type="::videoQt::SFrameGrabber">
            <in key="camera" uid="${camera1}" />
            <inout key="frameTL" uid="frame1TL" />
        </service>

        <service uid="frameGrabber2" type="::videoQt::SFrameGrabber">
            <in key="camera" uid="${camera2}" />
            <inout key="frameTL" uid="frame2TL" />
        </service>

        <service uid="markerToPoint" type="::videoCalibration::SMarkerToPoint">
            <inout key="pointList" uid="markersPL" />
            <in key="matrixTL" uid="matrixTL" />
        </service>

        <start uid="mainView" />
        <start uid="tracker1" />
        <start uid="tracker2" />
        <start uid="frameGrabber1" />
        <start uid="frameGrabber2" />
        <start uid="synchronizer" />
        <start uid="markerRegistration" />
        <start uid="markerToPoint" />
        <start uid="toolRegistration" />
        <start uid="calibWriter" />

    </config>
</extension>

