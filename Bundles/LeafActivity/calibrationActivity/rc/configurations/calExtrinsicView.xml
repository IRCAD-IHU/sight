<extension implements="::fwServices::registry::AppConfig">
    <id>calExtrinsicView</id>
    <type>parameters</type>
    <parameters>
        <param name="WID_PARENT" />
        <param name="GENERIC_UID" />
        <param name="cameraSeriesUid" />
        <param name="camera1Uid" />
        <param name="camera2Uid" />
        <param name="calibrationInfo1Uid" />
        <param name="calibrationInfo2Uid" />
        <param name="chessboardWidth" />
        <param name="chessboardHeight" />
        <param name="camIndex" />
    </parameters>
    <config>

        <object type="::fwData::Composite">
            <service uid="${GENERIC_UID}_extrinsicCameraView" type="::gui::view::IView" impl="::gui::view::DefaultView" autoConnect="no">
                <gui>
                    <layout type="::fwGui::CardinalLayoutManager">
                        <view align="center" />
                        <view align="bottom" caption="Calibration" />
                        <view align="bottom" caption="Information" />
                    </layout>
                    <toolBar />
                </gui>
                <registry>
                    <toolBar sid="${GENERIC_UID}_toolBar" start="yes" />
                    <parent wid="${WID_PARENT}" />
                    <view sid="${GENERIC_UID}_camerasView" start="yes" />
                    <view sid="${GENERIC_UID}_calibrationInfoView" start="yes" />
                    <view sid="${GENERIC_UID}_cameraInfoView" start="yes" />
                </registry>
            </service>
            
            <service uid="${GENERIC_UID}_toolBar" type="::fwGui::IToolBarSrv" impl="::gui::aspect::DefaultToolBarSrv" autoConnect="no">
                <gui>
                    <layout>
                        <menuItem name="Start camera" icon="Bundles/arMedia_0-1/icons/start-cam.svg" />
                        <menuItem name="Stop camera" icon="Bundles/arMedia_0-1/icons/stop-cam.svg" />
                        <menuItem name="Pause video" icon="Bundles/arMedia_0-1/icons/pause-cam.svg" />
                        <menuItem name="Loop video" icon="Bundles/arMedia_0-1/icons/loop-cam.svg" style="check" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="${GENERIC_UID}_ActionStartCamera" start="yes" />
                    <menuItem sid="${GENERIC_UID}_ActionStopCamera" start="yes" />
                    <menuItem sid="${GENERIC_UID}_PauseVideo" start="yes" />
                    <menuItem sid="${GENERIC_UID}_LoopVideo" start="yes" />
                </registry>
            </service>
            
            <service uid="${GENERIC_UID}_calibrationInfoView" type="::gui::view::IView" impl="::gui::view::DefaultView" autoConnect="no">
                <gui>
                    <layout type="::fwGui::CardinalLayoutManager">
                        <view align="center" />
                    </layout>
                    <toolBar align="left">
                        <toolBitmapSize height="24" width="24" />
                    </toolBar>
                </gui>
                <registry>
                    <view sid="${GENERIC_UID}_ExtrinsicCalibrationInfoEditor" start="yes" />
                    <toolBar sid="${GENERIC_UID}_extrinsicCamera" start="yes" />
                </registry>
            </service>
            
            <service uid="${GENERIC_UID}_camerasView" type="::gui::view::IView" impl="::gui::view::DefaultView" autoConnect="no">
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="horizontal" />
                        <view />
                        <view />
                    </layout>
                </gui>
                <registry>
                    <view sid="${GENERIC_UID}_camera1" start="yes" />
                    <view sid="${GENERIC_UID}_camera2" start="yes" />
                </registry>
            </service>
            
            <service uid="${GENERIC_UID}_extrinsicCamera" type="::fwGui::IToolBarSrv" impl="::gui::aspect::DefaultToolBarSrv" autoConnect="no">
                <gui>
                    <layout>
                        <editor />
                        <menuItem name="Add" icon="Bundles/media_0-1/icons/Import.svg" />
                        <menuItem name="Remove" icon="Bundles/arMedia_0-1/icons/remove.svg" />
                        <menuItem name="Reset" icon="Bundles/arMedia_0-1/icons/reset.svg" />
                        <menuItem name="Calibrate with openCV" icon="Bundles/arMedia_0-1/icons/CheckButton.svg" />
                        <menuItem name="Draw" icon="Bundles/mediaExt_0-1/icons/Preview.svg" />
                    </layout>
                </gui>
                <registry>
                    <editor sid="${GENERIC_UID}_Status" start="yes" />
                    <menuItem sid="${GENERIC_UID}_ActionAdd" start="yes" />
                    <menuItem sid="${GENERIC_UID}_ActionRemove" start="yes" />
                    <menuItem sid="${GENERIC_UID}_ActionReset" start="yes" />
                    <menuItem sid="${GENERIC_UID}_ActionGoOpenCV" start="yes" />
                    <menuItem sid="${GENERIC_UID}_ActionDisplayImage" start="yes" />
                </registry>
            </service>
            
            <service uid="${GENERIC_UID}_cameraInfoView" type="::gui::view::IView" impl="::gui::view::DefaultView" autoConnect="no">
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="vertical" />
                        <view caption="camera 1" />
                        <view caption="camera 2" />
                        <view caption="camera series" />
                    </layout>
                </gui>
                <registry>
                    <view sid="${GENERIC_UID}_cameraInfo1" start="yes"/>
                    <view sid="${GENERIC_UID}_cameraInfo2" start="yes"/>
                    <view sid="${GENERIC_UID}_cameraSeriesInfo" start="yes" />
                </registry>
            </service>
            
            <service uid="${GENERIC_UID}_ActionAdd" impl="::uiTools::action::STimestampSlotCaller" autoConnect="no">
                <slots>
                    <slot>${GENERIC_UID}_ChessboardDetector/detectPoints</slot>
                </slots>
            </service>
            
            <service uid="${GENERIC_UID}_ActionReset" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>${GENERIC_UID}_ExtrinsicCalibrationInfoEditor/reset</slot>
                </slots>
            </service>
            
            <service uid="${GENERIC_UID}_ActionRemove" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>${GENERIC_UID}_ExtrinsicCalibrationInfoEditor/remove</slot>
                </slots>
            </service>
            
            <service uid="${GENERIC_UID}_ActionGoOpenCV" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>${GENERIC_UID}_openCVExtrinsicCal/update</slot>
                    <slot>${GENERIC_UID}_Status/changeToOrange</slot>
                </slots>
            </service>

            <service uid="${GENERIC_UID}_ActionDisplayImage" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>${GENERIC_UID}_ExtrinsicCalibrationInfoEditor/getSelection</slot>
                </slots>
            </service>
            
            <service uid="${GENERIC_UID}_ActionStartCamera" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>${GENERIC_UID}_VideoGrabber1/startCamera</slot>
                    <slot>${GENERIC_UID}_VideoGrabber2/startCamera</slot>
                </slots>
            </service>

            <service uid="${GENERIC_UID}_ActionStopCamera" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>${GENERIC_UID}_VideoGrabber1/stopCamera</slot>
                    <slot>${GENERIC_UID}_VideoGrabber2/stopCamera</slot>
                </slots>
            </service>
            
            <service uid="${GENERIC_UID}_PauseVideo" type="::fwGui::IActionSrv" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>${GENERIC_UID}_VideoGrabber1/pauseCamera</slot>
                    <slot>${GENERIC_UID}_VideoGrabber2/pauseCamera</slot>
                </slots>
            </service>

            <service uid="${GENERIC_UID}_LoopVideo" type="::fwGui::IActionSrv" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>${GENERIC_UID}_VideoGrabber1/loopVideo</slot>
                    <slot>${GENERIC_UID}_VideoGrabber2/loopVideo</slot>
                </slots>
            </service>
            
            <service uid="${GENERIC_UID}_synchronizer" impl="::videoTools::SFrameMatrixSynchronizer" autoConnect="no" worker="synchronizer">
                <frames>
                    <frame from="timeline1" to="frame1" />
                    <frame from="timeline2" to="frame2" />
                </frames>
                <framerate>30</framerate>
            </service>
                        
            <service uid="${GENERIC_UID}_camera1" impl="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoConnect="yes">
                <scene autoRender="false">
                    <renderer id="default" background="0.0" />
                    <adaptor id="videoAdapter" class="::visuVTKARAdaptor::SVideoAdapter" objectId="frame1">
                        <config renderer="default" />
                    </adaptor>
                    <adaptor id="interactorStyle" class="::visuVTKAdaptor::InteractorStyle" objectId="self">
                        <config renderer="default" style="InteractorStyle2DForNegato" />
                    </adaptor>
                </scene>
            </service>
            
            <service uid="${GENERIC_UID}_camera2" impl="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoConnect="yes">
                <scene autoRender="false">
                    <renderer id="default" background="0.0" />
                    <adaptor id="videoAdapter" class="::visuVTKARAdaptor::SVideoAdapter" objectId="frame2">
                        <config renderer="default" />
                    </adaptor>
                    <adaptor id="interactorStyle" class="::visuVTKAdaptor::InteractorStyle" objectId="self">
                        <config renderer="default" style="InteractorStyle2DForNegato" />
                    </adaptor>
                </scene>
            </service>

             <service uid="${GENERIC_UID}_ExtrinsicCalibrationInfoEditor" impl="::uiCalibration::SCalibrationInfoEditor" type="::gui::editor::IEditor" autoConnect="yes">
                <CalInfo1>calInfo1</CalInfo1>
                <CalInfo2>calInfo2</CalInfo2>
             </service> 

            <service uid="${GENERIC_UID}_Status" impl="::uiTools::editor::SStatus" type="::gui::editor::IEditor" autoConnect="no">
                <green>Point are visible</green>
                <orange>Calibration in progress</orange>                                
                <red>Points are NOT visible</red>
            </service> 
            
            <service uid="${GENERIC_UID}_ChessboardDetector" impl="::videoCalibration::SChessBoardDetector" type="::fwServices::IController" autoConnect="no" worker="extr_chess_checker">
                <calibration timeline="timeline1" calInfo="calInfo1"/>
                <calibration timeline="timeline2" calInfo="calInfo2"/>
                <board width="${chessboardWidth}" height="${chessboardHeight}" />
            </service>
            
            <service uid="${GENERIC_UID}_CheckChessboard" impl="::videoCalibration::SCheckChessBoard" type="::fwServices::IController" autoConnect="no" worker="extr_chess_checker">
                <calibration timeline="timeline1" />
                <calibration timeline="timeline2" />
                <board width="${chessboardWidth}" height="${chessboardHeight}" />
            </service>

            <service uid="${GENERIC_UID}_DisplayCalibrationInfo" impl="::uiCalibration::SDisplayCalibrationInfo" type="::fwServices::IController" autoConnect="no">
                <CalInfo1>calInfo1</CalInfo1>
                <CalInfo2>calInfo2</CalInfo2>
            </service>

            <item key="calInfo1">
                <object uid="${calibrationInfo1Uid}" type="::arData::CalibrationInfo" src="ref"/>
            </item> 
            
            <item key="calInfo2">
                <object uid="${calibrationInfo2Uid}" type="::arData::CalibrationInfo" src="ref"/>
            </item>  
            
           <item key="timeline1">
                <object uid="${GENERIC_UID}_Frame1TL" type="::extData::FrameTL">
                    <service uid="${GENERIC_UID}_VideoGrabber1" impl="::videoQt::SFrameGrabber" autoConnect="no">
                        <cameraFwId>${camera1Uid}</cameraFwId>
                    </service>
                </object>
            </item>
            
            <item key="timeline2">
                <object uid="${GENERIC_UID}_Frame2TL" type="::extData::FrameTL">
                    <service uid="${GENERIC_UID}_VideoGrabber2" impl="::videoQt::SFrameGrabber" autoConnect="no">
                        <cameraFwId>${camera2Uid}</cameraFwId>
                    </service>
                </object>
            </item>
            
            <item key="frame1">
                <object uid="${GENERIC_UID}_Frame1" type="::fwData::Image" />
            </item>
            
            <item key="frame2">
                <object uid="${GENERIC_UID}_Frame2" type="::fwData::Image" />
            </item>
            
            <item key="cameraSeries">
                <object uid="${cameraSeriesUid}" type="::arData::CameraSeries" src="ref">
                   <service uid="${GENERIC_UID}_openCVExtrinsicCal" impl="::videoCalibration::SOpenCVExtrinsic" worker="extr_chess_checker">
                        <calibrationInfo1ID>${calibrationInfo1Uid}</calibrationInfo1ID>
                        <calibrationInfo2ID>${calibrationInfo2Uid}</calibrationInfo2ID>
                        <camIndex>${camIndex}</camIndex>
                        <board width="${chessboardWidth}" height="${chessboardHeight}" />
                   </service>
                   <service uid="${GENERIC_UID}_cameraSeriesInfo" type="::gui::editor::IEditor" impl="::uiCalibration::SCameraSeriesEditor" autoConnect="yes">
                        <camIndex>${camIndex}</camIndex>
                   </service>
                </object>
            </item>
            
            <item key="camera1">
                <object uid="${camera1Uid}" type="::arData::Camera" src="ref">
                    <service uid="${GENERIC_UID}_cameraInfo1" type="::gui::editor::IEditor" impl="::uiCalibration::SCameraInformationEditor" autoConnect="yes" />
                </object>
            </item>
            
            <item key="camera2">
                <object uid="${camera2Uid}" type="::arData::Camera" src="ref">
                    <service uid="${GENERIC_UID}_cameraInfo2" type="::gui::editor::IEditor" impl="::uiCalibration::SCameraInformationEditor" autoConnect="yes" />
                </object>
            </item>
            
            <connect>
                <signal>${GENERIC_UID}_Frame1TL/objectPushed</signal>
                <slot>${GENERIC_UID}_CheckChessboard/detectPoints</slot>
            </connect>
            <connect>
                <signal>${GENERIC_UID}_Frame2TL/objectPushed</signal>
                <slot>${GENERIC_UID}_CheckChessboard/detectPoints</slot>
            </connect>
            
            <connect>
                <signal>${GENERIC_UID}_CheckChessboard/chessboardDetected</signal>
                <slot>${GENERIC_UID}_Status/changeToGreen</slot>
            </connect>
            
            <connect>
                <signal>${GENERIC_UID}_CheckChessboard/chessboardNotDetected</signal>
                <slot>${GENERIC_UID}_Status/changeToRed</slot>
            </connect>

            <connect>
                <signal>${calibrationInfo1Uid}/getRecord</signal>
                <slot>${GENERIC_UID}_DisplayCalibrationInfo/displayImage</slot>
            </connect>

            <proxy channel="${GENERIC_UID}_extrinsicProxy">
                <signal>${calibrationInfo1Uid}/addedRecord</signal>
                <signal>${calibrationInfo1Uid}/removedRecord</signal>
                <signal>${calibrationInfo1Uid}/resetRecord</signal>
                <slot>${GENERIC_UID}_ExtrinsicCalibrationInfoEditor/update</slot>
            </proxy>
            
                                    
            <start uid="${GENERIC_UID}_extrinsicCameraView" />
            <start uid="${GENERIC_UID}_openCVExtrinsicCal" />
            <start uid="${GENERIC_UID}_CheckChessboard" />
            <start uid="${GENERIC_UID}_DisplayCalibrationInfo" />
            <start uid="${GENERIC_UID}_synchronizer" />
            <start uid="${GENERIC_UID}_VideoGrabber1" />
            <start uid="${GENERIC_UID}_VideoGrabber2" />
        </object>
    </config>
</extension>
