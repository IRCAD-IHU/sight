<extension implements="::fwServices::registry::AppConfig2">
    <id>Register</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="GENERIC_UID" />
        <param name="SERIESDB" />
        <param name="AS_UID" />
        <param name="targetImageUid" />
        <param name="referenceImageUid" />
        <param name="transformUid" />
    </parameters>
    <config>
        <object uid="${SERIESDB}" type="::fwMedData::SeriesDB" src="ref" />
        <object uid="${AS_UID}" type="::fwMedData::ActivitySeries" src="ref" />
        <object uid="${referenceImageUid}" type="::fwData::Image" src="ref" />
        <object uid="${targetImageUid}" type="::fwData::Image" src="ref" />
        <object uid="${transformUid}" type="::fwData::TransformationMatrix3D" src="ref" />
        <object uid="transformedImage" type="::fwData::Image" />
        <object uid="TFSelectionComposite" type="::fwData::Composite" />
        <object uid="TFTransformedComposite" type="::fwData::Composite" />
        <object uid="Histogram" type="::fwData::Histogram" />
        <object uid="referencePL" type="::fwData::PointList" />
        <object uid="targetPL" type="::fwData::PointList" />
        <object uid="inverseFinalTransform" type="::fwData::TransformationMatrix3D" />
        <object uid="flipMatrix" type="::fwData::TransformationMatrix3D" />
        <object uid="flipSagittalMatrix" type="::fwData::TransformationMatrix3D">
            <matrix>
                <![CDATA[
                    1      0      0     0
                    0     -1      0     0
                    0      0     -1     0
                    0      0      0     1
                ]]>
            </matrix>
        </object>

        <object uid="flipFrontalMatrix" type="::fwData::TransformationMatrix3D">
            <matrix>
                <![CDATA[
                   -1      0      0     0
                    0      1      0     0
                    0      0     -1     0
                    0      0      0     1
                ]]>
            </matrix>
        </object>

        <object uid="flipAxialMatrix" type="::fwData::TransformationMatrix3D">
            <matrix>
                <![CDATA[
                    -1      0     0     0
                     0     -1     0     0
                     0      0     1     0
                     0      0     0     1
                ]]>
            </matrix>
        </object>

        <object uid="centerTransformTarget" type="::fwData::TransformationMatrix3D" />
        <object uid="centerTransformReference" type="::fwData::TransformationMatrix3D" />
        <object uid="centerTransformResampled" type="::fwData::TransformationMatrix3D" />
        <object uid="manualTransform" type="::fwData::TransformationMatrix3D" />
        <object uid="lastTransform" type="::fwData::TransformationMatrix3D" />
        <object uid="identity" type="::fwData::TransformationMatrix3D" />
        <service uid="mainView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view proportion="4" />
                    <view proportion="1" />
                </layout>
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <view sid="imagesAndManagersView" start="yes" />
                <view sid="ParamView" start="yes" />
            </registry>
        </service>

        <service uid="imagesAndManagersView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                    <view proportion="0" />
                    <view proportion="1" />
                </layout>
            </gui>
            <registry>
                <view sid="scenesView" start="yes" />
                <view sid="editorsView" start="yes" />
                <view sid="3dScene" start="yes" />
            </registry>
        </service>

        <service uid="scenesView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view proportion="1" caption="Reference" />
                    <view proportion="1" caption="Transformed on target" />
                </layout>
            </gui>
            <registry>
                <view sid="referenceScene" start="yes" />
                <view sid="transformedScene" start="yes" />
            </registry>
        </service>

        <service uid="editorsView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view proportion="1" caption="Reference editor" />
                    <view proportion="1" caption="Transformed editor" />
                </layout>
            </gui>
            <registry>
                <view sid="referenceViewEditor" start="yes" />
                <view sid="targetViewEditor" start="yes" />
            </registry>
        </service>

        <service uid="targetViewEditor" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                    <view proportion="1" />
                    <view proportion="1" />
                </layout>
            </gui>
            <registry>
                <view wid="targetSceneEditor" />
                <view sid="blendEditor" start="yes" />
                <view sid="checkerBoardCellSlider" start="yes" />
            </registry>
        </service>

        <service uid="blendMode" type="::guiQt::editor::SParameters">
            <parameters>
                <param type="enum" name="Blend mode:" key="ImageSource" defaultValue="BLEND" values="BLEND=imageBlend,CHECKERBOARD=imageCheckerboard" />
            </parameters>
        </service>

        <service uid="checkerBoardCellSlider" type="::guiQt::editor::SParameters">
            <parameters>
                <param type="int" name="Checkerboard # of cells" key="checkerBoardSlider" defaultValue="10" min="0" max="100" />
            </parameters>
        </service>

        <service uid="blendEditor" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view proportion="1" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="transformedTransparencySlider" start="yes" />
                <view sid="blendMode" start="yes" />
            </registry>
        </service>

        <service uid="referenceViewEditor" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="1" />
                    <spacer/>
                </layout>
            </gui>
            <registry>
                <view wid="referenceSceneEditor" />
            </registry>
        </service>

        <service uid="ParamView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::TabLayoutManager">
                    <view caption="Automatic" />
                    <view caption="Landmark" />
                    <view caption="Manual" />
                    <view caption="Transfer function" />
                </layout>
            </gui>
            <registry>
                <view sid="automaticRegistrationView" start="yes" />
                <view sid="LandmarkRegistrationView" start="yes" />
                <view sid="manualRegistrationView" start="yes" />
                <view sid="TFView" start="yes" />
            </registry>
        </service>

        <service uid="automaticRegistrationView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" />
                    <view proportion="0" />
                    <spacer/>
                    <view proportion="0" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="ResetRegistration" start="yes" />
                <view sid="computeCenter" start="yes" />
                <view sid="setAutoRegistrationMetric" start="yes" />
                <view sid="applyAutomaticTransform" start="yes" />
            </registry>
        </service>

        <service uid="LandmarkRegistrationView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <spacer/>
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="applyLandmarkTransform" start="yes" />
            </registry>
        </service>

        <service uid="manualRegistrationView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" />
                    <view proportion="0" caption="Flip image" />
                    <spacer/>
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="transformEditor" start="yes" />
                <view sid="flipEditor" start="yes" />
                <view sid="applyManualTransform" start="yes" />
            </registry>
        </service>

        <service uid="flipEditor" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view proportion="0" />
                    <view proportion="0" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="flipSagittalButton" start="yes" />
                <view sid="flipFrontalButton" start="yes" />
                <view sid="flipAxialButton" start="yes" />
            </registry>
        </service>

        <service uid="TFView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" />
                    <view proportion="1" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="transformedTFSelector" start="yes" />
                <view wid="tfWidget" />
                <view sid="transformedWindowLevel" start="yes" />
            </registry>
        </service>

        <service uid="tfWidget" type="::fwServices::SConfigController">
            <appConfig id="TransferFunctionWidget" />
            <inout key="image" uid="transformedImage" />
            <inout key="histogram" uid="Histogram" />
            <inout key="TFSelections" uid="TFSelectionComposite" />
            <parameter replace="WID_PARENT" uid="tfWidget" />
            <parameter replace="SelectedTFKey" by="transformedTF" />
        </service>

        <service uid="computeCenter" type="::guiQt::editor::SSignalButton">
            <config>
                <checkable>false</checkable>
                <text>Fast registration</text>
            </config>
        </service>

        <service uid="ResetRegistration" type="::guiQt::editor::SSignalButton">
            <config>
                <checkable>false</checkable>
                <text>Reset registration</text>
            </config>
        </service>

        <service uid="medicalImageTargetSrv" type="::ctrlSelection::MedicalImageSrv">
            <inout key="image" uid="${targetImageUid}" />
        </service>

        <service uid="medicalImageTransformedSrv" type="::ctrlSelection::MedicalImageSrv">
            <inout key="image" uid="transformedImage" />
        </service>

        <service uid="referenceLandmarkManager" type="::uiMeasurement::SManageLandmark">
            <inout key="landmarks" uid="referencePL" />
        </service>

        <service uid="targetLandmarkManager" type="::uiMeasurement::SManageLandmark">
            <inout key="landmarks" uid="targetPL" />
        </service>

        <!-- *************************** Begin generic scene *************************** -->

        <service uid="referenceScene" type="::fwRenderVTK::SRender" autoConnect="yes">
            <scene renderMode="auto">
                <picker id="picker" vtkclass="fwVtkCellPicker" />
                <renderer id="default" background="#052833" />
                <adaptor uid="referenceNegatoMPR" />
                <adaptor uid="referenceInteractorStyle" />
                <adaptor uid="referencePickerInteractor" />
                <adaptor uid="referencePointListAdaptor" />
            </scene>
        </service>

        <service uid="referenceNegatoMPR" type="::visuVTKAdaptor::SNegatoMPR" autoConnect="yes">
            <inout key="image" uid="${referenceImageUid}" />
            <inout key="tfSelection" uid="TFSelectionComposite" />
            <config renderer="default" picker="picker" mode="2d" slices="1" sliceIndex="axial" selectedTFKey="referenceTF" />
        </service>

        <service uid="referenceInteractorStyle" type="::visuVTKAdaptor::SInteractorStyle">
            <config renderer="default" style="InteractorStyle2DForNegato" />
        </service>

        <service uid="referencePickerInteractor" type="::visuVTKAdaptor::SPickerInteractor">
            <config renderer="default" picker="picker" event="MOUSE_LEFT_UP" />
        </service>

        <service uid="referencePointListAdaptor" type="::visuVTKAdaptor::SLabeledPointList" autoConnect="yes">
            <inout key="pointList" uid="referencePL" />
            <config renderer="default" picker="picker" color="#550066" radius="10" />
        </service>

        <!-- *************************** End generic scene *************************** -->

        <!-- *************************** Begin generic scene *************************** -->

        <service uid="transformedScene" type="::fwRenderVTK::SRender" autoConnect="yes">
            <scene renderMode="auto">
                <picker id="picker" vtkclass="fwVtkCellPicker" />
                <vtkObject id="imageBlend" class="vtkImageBlend" />
                <vtkObject id="imageCheckerboard" class="vtkImageCheckerboard" />
                <renderer id="default" background="#052833" />
                <adaptor uid="mixedNegatoMPR" />
                <adaptor uid="mixedInteractorStyle" />
                <adaptor uid="registrationImageAdaptor" />
                <adaptor uid="mixedPickerInteractor" />
                <adaptor uid="mixedPointListAdaptor" />
            </scene>
        </service>

        <service uid="mixedNegatoMPR" type="::visuVTKAdaptor::SNegatoMPR" autoConnect="yes">
            <inout key="image" uid="${targetImageUid}" />
            <config renderer="default" picker="picker" mode="2d" slices="1" sliceIndex="axial" vtkimagesource="imageBlend" />
        </service>

        <service uid="mixedInteractorStyle" type="::visuVTKAdaptor::SInteractorStyle">
            <config renderer="default" style="InteractorStyle2DForNegato" />
        </service>

        <!-- Adaptor to show background and front image merge in the same view. -->
        <service uid="registrationImageAdaptor" type="::visuVTKAdaptor::SImagesBlend">
            <inout group="image" autoConnect="yes">
                <key uid="${targetImageUid}" tfalpha="no" />
                <key uid="transformedImage" tfalpha="no" />
            </inout>
            <inout group="tfSelection">
                <key uid="TFSelectionComposite" selectedTFKey="targetTF" />
                <key uid="TFSelectionComposite" selectedTFKey="transformedTF" />
            </inout>
            <config vtkimageregister="imageBlend" checkerboardDivision="10" />
        </service>

        <service uid="mixedPickerInteractor" type="::visuVTKAdaptor::SPickerInteractor">
            <config renderer="default" picker="picker" event="MOUSE_LEFT_UP" />
        </service>

        <service uid="mixedPointListAdaptor" type="::visuVTKAdaptor::SLabeledPointList" autoConnect="yes">
            <inout key="pointList" uid="targetPL" />
            <config renderer="default" picker="picker" color="#550066" radius="10" />
        </service>

        <!-- *************************** End generic scene *************************** -->

        <!-- *************************** Begin generic scene *************************** -->

        <service uid="3dScene" type="::fwRenderVTK::SRender" autoConnect="yes">
            <scene renderMode="auto">
                <picker id="picker" vtkclass="fwVtkCellPicker" />
                <renderer id="default" background="#052833" />
                <adaptor uid="transformAdpt" />
                <adaptor uid="targetNegatoMPR" />
                <adaptor uid="3DreferenceNegatoMPR" />
                <adaptor uid="transformedNegatoMPR" />
            </scene>
        </service>

        <service uid="transformAdpt" type="::visuVTKAdaptor::STransform" autoConnect="yes">
            <inout key="tm3d" uid="inverseFinalTransform" />
            <config transform="registration" />
        </service>

        <service uid="targetNegatoMPR" type="::visuVTKAdaptor::SNegatoMPR" autoConnect="yes">
            <inout key="image" uid="${targetImageUid}" />
            <inout key="tfSelection" uid="TFSelectionComposite" />
            <config renderer="default" picker="picker" mode="3d" slices="3" sliceIndex="axial" selectedTFKey="targetTF" />
        </service>

        <service uid="3DreferenceNegatoMPR" type="::visuVTKAdaptor::SNegatoMPR" autoConnect="yes">
            <inout key="image" uid="${referenceImageUid}" />
            <inout key="tfSelection" uid="TFSelectionComposite" />
            <config renderer="default" picker="picker" mode="3d" slices="3" sliceIndex="axial" selectedTFKey="referenceTF" transform="registration" />
        </service>

        <service uid="transformedNegatoMPR" type="::visuVTKAdaptor::SNegatoMPR" autoConnect="yes">
            <inout key="image" uid="transformedImage" />
            <inout key="tfSelection" uid="TFSelectionComposite" />
            <config renderer="default" picker="picker" mode="3d" slices="3" sliceIndex="axial" selectedTFKey="transformedTF" />
        </service>

        <!-- *************************** End generic scene *************************** -->

        <service uid="transformedImageManager" type="::fwServices::SConfigController" autoConnect="no">
            <appConfig id="ImageManager" />
            <parameter replace="WID_PARENT" uid="referenceSceneEditor" />
            <parameter replace="IMAGE_UID" uid="${referenceImageUid}" />
            <parameter replace="TF_IMAGE" uid="TFSelectionComposite" />
            <parameter replace="TF_KEY" by="referenceTF" />
            <parameter replace="ADAPTOR_NEGATO" uid="referenceNegatoMPR" />
        </service>

        <service uid="targetImageManager" type="::fwServices::SConfigController" autoConnect="no">
            <appConfig id="ImageManager" />
            <parameter replace="WID_PARENT" uid="targetSceneEditor" />
            <parameter replace="IMAGE_UID" uid="${targetImageUid}" />
            <parameter replace="TF_IMAGE" uid="TFSelectionComposite" />
            <parameter replace="TF_KEY" by="targetTF" />
            <parameter replace="ADAPTOR_NEGATO" uid="mixedNegatoMPR" />
        </service>

        <service uid="transformedTransparencySlider" type="::uiImageQt::ImageTransparency" autoConnect="yes">
            <inout key="image" uid="transformedImage" />
            <shortcut value="V" />
        </service>

        <service uid="transformedTFSelector" type="::uiTF::TransferFunctionEditor" autoConnect="yes">
            <inout key="transferFunctions" uid="TFTransformedComposite" />
            <inout key="TFSelections" uid="TFSelectionComposite" />
            <config selectedTFKey="transformedTF" />
        </service>

        <service uid="transformedWindowLevel" type="::uiImageQt::WindowLevel" autoConnect="yes">
            <inout key="image" uid="transformedImage" />
            <inout key="TFSelections" uid="TFSelectionComposite" />
            <config selectedTFKey="transformedTF" autoWindowing="yes" />
        </service>

        <service uid="computetransformedHistogram" type="::scene2D::processing::SComputeHistogram" autoConnect="yes" worker="COMPUTING_THREAD">
            <in key="image" uid="${referenceImageUid}" />
            <inout key="histogram" uid="Histogram" />
            <binsWidth>5.0</binsWidth>
        </service>

        <service uid="transformEditor" type="::uiVisuQt::STransformEditor" autoConnect="yes">
            <inout key="matrix" uid="manualTransform" />
            <translation enabled="yes" min="-1500" max="1500" />
            <rotation enabled="yes" min="-180" max="180" />
        </service>

        <service uid="applyAutomaticTransform" type="::guiQt::editor::SSignalButton">
            <config>
                <checkable>false</checkable>
                <text>Apply</text>
            </config>
        </service>

        <service uid="setAutoRegistrationMetric" type="::guiQt::editor::SParameters">
            <parameters>
                <param type="enum" name="Mode" key="metric" defaultValue="NormalizedCorrelation" values="MeanSquares,NormalizedCorrelation,MutualInformation" />
            </parameters>
        </service>

        <service uid="applyLandmarkTransform" type="::guiQt::editor::SSignalButton">
            <config>
                <checkable>false</checkable>
                <text>Apply</text>
            </config>
        </service>

        <service uid="applyManualTransform" type="::guiQt::editor::SSignalButton">
            <config>
                <checkable>false</checkable>
                <text>Apply</text>
            </config>
        </service>

        <service uid="flipSagittalButton" type="::guiQt::editor::SSignalButton">
            <config>
                <checkable>false</checkable>
                <text>Sagittal</text>
            </config>
        </service>

        <service uid="flipFrontalButton" type="::guiQt::editor::SSignalButton">
            <config>
                <checkable>false</checkable>
                <text>Frontal</text>
            </config>
        </service>

        <service uid="flipAxialButton" type="::guiQt::editor::SSignalButton">
            <config>
                <checkable>false</checkable>
                <text>Axial</text>
            </config>
        </service>

        <service uid="landmarkRegistration" type="::basicRegistration::SPointListRegistration">
            <inout key="registeredPL" uid="targetPL" />
            <inout key="referencePL" uid="referencePL" />
            <inout key="output" uid="${transformUid}" />
        </service>

        <service uid="automaticRegistration" type="::opItkRegistration::SAutomaticRegistration" worker="REGISTRATION_WORKER">
            <in key="target" uid="${targetImageUid}" />
            <in key="reference" uid="${referenceImageUid}" />
            <inout key="transform" uid="${transformUid}" />
            <minStep>0.0001</minStep>
            <maxStep>0.3</maxStep>
            <maxIterations>200</maxIterations>
            <metric>NormalizedCorrelation</metric>
        </service>

        <service uid="resampler" type="::opItkRegistration::SResampler">
            <in key="imageIn" uid="${referenceImageUid}" />
            <in key="transform" uid="${transformUid}" />
            <in key="target" uid="${targetImageUid}" />
            <inout key="imageOut" uid="transformedImage" />
        </service>

        <service uid="computeCenterTarget" type="::opItkRegistration::SImageCenter">
            <in key="image" uid="${targetImageUid}" />
            <inout key="transform" uid="centerTransformTarget" />
        </service>

        <service uid="computeCenterReference" type="::opItkRegistration::SImageCenter">
            <in key="image" uid="${referenceImageUid}" />
            <inout key="transform" uid="centerTransformReference" />
        </service>

        <service uid="computeCenterResampled" type="::opItkRegistration::SImageCenter" autoConnect="yes">
            <in key="image" uid="transformedImage" />
            <inout key="transform" uid="centerTransformResampled" />
        </service>

        <service uid="alignCenter" type="::maths::SConcatenateMatrices">
            <in group="matrix">
                <key uid="centerTransformTarget" inverse="true" />
                <key uid="centerTransformReference" />
            </in>
            <inout key="output" uid="${transformUid}" />
        </service>

        <service uid="inverseMat" type="::maths::SConcatenateMatrices">
            <in group="matrix">
                <key uid="${transformUid}" inverse="true" autoConnect="yes" />
            </in>
            <inout key="output" uid="inverseFinalTransform" />
        </service>

        <service uid="resetIdentity" type="::ctrlCamp::SCopy">
            <in key="source" uid="identity" />
            <inout key="target" uid="${transformUid}" />
        </service>

        <service uid="copyLastTransform" type="::ctrlCamp::SCopy">
            <in key="source" uid="${transformUid}" />
            <inout key="target" uid="lastTransform" />
        </service>

        <service uid="copyFlipAxial" type="::ctrlCamp::SCopy">
            <in key="source" uid="flipAxialMatrix" />
            <inout key="target" uid="manualTransform" />
        </service>

        <service uid="copyFlipFrontal" type="::ctrlCamp::SCopy">
            <in key="source" uid="flipFrontalMatrix" />
            <inout key="target" uid="manualTransform" />
        </service>

        <service uid="copyFlipSagittal" type="::ctrlCamp::SCopy">
            <in key="source" uid="flipSagittalMatrix" />
            <inout key="target" uid="manualTransform" />
        </service>

        <service uid="manualConcat" type="::maths::SConcatenateMatrices">
            <in group="matrix">
                <key uid="lastTransform" />
                <key uid="centerTransformResampled" autoConnect="yes" />
                <key uid="manualTransform" autoConnect="yes" />
                <key uid="centerTransformResampled" inverse="true" />
            </in>
            <inout key="output" uid="${transformUid}" />
        </service>

        <connect>
            <signal>ResetRegistration/clicked</signal>
            <slot>resetIdentity/update</slot>
        </connect>

        <connect>
            <signal>${transformUid}/modified</signal>
            <slot>copyLastTransform/update</slot>
        </connect>

        <connect>
            <signal>computeCenter/clicked</signal>
            <slot>alignCenter/update</slot>
        </connect>

        <connect>
            <signal>alignCenter/updated</signal>
            <slot>resampler/update</slot>
        </connect>

        <connect>
            <signal>applyLandmarkTransform/clicked</signal>
            <slot>landmarkRegistration/update</slot>
        </connect>

        <connect>
            <signal>setAutoRegistrationMetric/enumChanged</signal>
            <slot>automaticRegistration/setEnumParameter</slot>
        </connect>

        <connect>
            <signal>applyAutomaticTransform/clicked</signal>
            <slot>automaticRegistration/update</slot>
        </connect>

        <connect>
            <signal>landmarkRegistration/updated</signal>
            <slot>resampler/update</slot>
        </connect>

        <connect>
            <signal>automaticRegistration/updated</signal>
            <slot>resampler/update</slot>
        </connect>

        <!-- Resample when the button is clicked -->
        <connect>
            <signal>applyManualTransform/clicked</signal>
            <slot>resampler/update</slot>
        </connect>

        <connect>
            <signal>flipSagittalButton/clicked</signal>
            <slot>copyFlipSagittal/update</slot>
        </connect>

        <connect>
            <signal>flipFrontalButton/clicked</signal>
            <slot>copyFlipFrontal/update</slot>
        </connect>

        <connect>
            <signal>flipAxialButton/clicked</signal>
            <slot>copyFlipAxial/update</slot>
        </connect>

        <connect>
            <signal>checkerBoardCellSlider/intChanged</signal>
            <slot>registrationImageAdaptor/changeCheckerboardDivision</slot>
        </connect>

        <connect>
            <signal>referencePickerInteractor/picked</signal>
            <slot>referenceLandmarkManager/createLandmark</slot>
        </connect>

        <connect>
            <signal>mixedPickerInteractor/picked</signal>
            <slot>targetLandmarkManager/createLandmark</slot>
        </connect>

        <connect>
            <signal>blendMode/enumChanged</signal>
            <slot>registrationImageAdaptor/changeMode</slot>
        </connect>

        <connect>
            <signal>blendMode/enumChanged</signal>
            <slot>mixedNegatoMPR/changeImageSource</slot>
        </connect>

        <!-- START AND STOP SERVICES -->

        <start uid="mainView" />
        <start uid="medicalImageTargetSrv" />
        <start uid="medicalImageTransformedSrv" />
        <start uid="transformedImageManager" />
        <start uid="targetImageManager" />
        <start uid="computetransformedHistogram" />
        <start uid="resampler" />
        <start uid="referenceLandmarkManager" />
        <start uid="targetLandmarkManager" />
        <start uid="landmarkRegistration" />
        <start uid="automaticRegistration" />
        <start uid="copyFlipSagittal" />
        <start uid="copyFlipFrontal" />
        <start uid="copyFlipAxial" />
        <start uid="computeCenterTarget" />
        <start uid="computeCenterReference" />
        <start uid="computeCenterResampled" />
        <start uid="alignCenter" />
        <start uid="manualConcat" />
        <start uid="copyLastTransform" />
        <start uid="resetIdentity" />
        <start uid="inverseMat" />
        <start uid="tfWidget" />
        <!-- VTK scene 'referenceScene' -->
        <start uid="referenceNegatoMPR" />
        <start uid="referenceInteractorStyle" />
        <start uid="referencePickerInteractor" />
        <start uid="referencePointListAdaptor" />
        <!-- VTK scene 'transformedScene' -->
        <start uid="mixedNegatoMPR" />
        <start uid="mixedInteractorStyle" />
        <start uid="registrationImageAdaptor" />
        <start uid="mixedPickerInteractor" />
        <start uid="mixedPointListAdaptor" />
        <!-- VTK scene '3dScene' -->
        <start uid="transformAdpt" />
        <start uid="targetNegatoMPR" />
        <start uid="3DreferenceNegatoMPR" />
        <start uid="transformedNegatoMPR" />
        <update uid="computeCenterTarget" />
        <update uid="computeCenterReference" />
    </config>
</extension>
