<plugin id="ioARActivity" version="@DASH_VERSION@">

    <requirement id="io" />
    <requirement id="uiIO" />
    <requirement id="media" />
    <requirement id="filterVRRender" />

    <!-- Service config used to read a seriesDB using ioAtoms. -->
    <extension implements="::fwServices::registry::ServiceConfig">
        <id>ARSDBAtomsReaderIOSelectorConfig</id>
        <service>::uiIO::editor::SIOSelector</service>
        <desc>Atoms seriesDB reader for arData.</desc>
        <config>
            <type mode="reader" />
            <selection mode="include" />
            <addSelection service="::ioAtoms::SReader" />
            <config id="ARMDAtomsConfig" service="::ioAtoms::SReader" />
        </config>
    </extension>

    <!-- Service config used to write a seriesDB using ioAtoms. -->
    <extension implements="::fwServices::registry::ServiceConfig">
        <id>ARSDBAtomsWriterIOSelectorConfig</id>
        <service>::uiIO::editor::SIOSelector</service>
        <desc>Atoms seriesDB reader for arData.</desc>
        <config>
            <type mode="writer" />
            <selection mode="include" />
            <addSelection service="::ioAtoms::SWriter" />
            <config id="ARMDAtomsConfig" service="::ioAtoms::SWriter" />
        </config>
    </extension>

    <!-- Service config used to read SeriesDB with all the available reader for SeriesDB. -->
    <extension implements="::fwServices::registry::ServiceConfig">
        <id>ARFullSDBReaderIOSelectorConfig</id>
        <service>::uiIO::editor::SIOSelector</service>
        <desc>IOSelectorService config for SeriesDB reader</desc>
        <config>
            <type mode="reader" />
            <selection mode="exclude" />
            <config id="ARMDAtomsConfig" service="::ioAtoms::SReader" />
        </config>
    </extension>

    <!-- Service config used for ioAtoms reader and writer. Defines the Data version and filter to use. -->
    <extension implements="::fwServices::registry::ServiceConfig">
        <id>ARMDAtomsConfig</id>
        <desc>Reader/Writer for atoms representing a medical data</desc>
        <config>
            <patcher context="MedicalData" version="V12AR" />
            <filter>VRRenderMedicalDataV2</filter>
        </config>
    </extension>
    
    <extension implements="::fwServices::registry::ServiceConfig">
        <id>ARActivityMDAtomsConfig</id>
        <desc>Reader/Writer for atoms representing a medical data</desc>
        <config>
            <archive backend="jsonz">
                <extension>.apz</extension>
            </archive>
            <extensions>
                <extension label="Zipped Activity Project">.apz</extension>
            </extensions>
            <patcher context="MedicalData" version="V12AR" />
        </config>
    </extension>
    
    <extension implements="::fwServices::registry::ServiceConfig">
        <id>ARActivityReaderConfig</id>
        <service>::uiIO::editor::SIOSelector</service>
        <desc>Atoms seriesDB reader for arData.</desc>
        <config>
            <type mode="reader" />
            <selection mode="include" />
            <addSelection service="::ioAtoms::SReader" />
            <config id="ARActivityMDAtomsConfig" service="::ioAtoms::SReader" />
        </config>
    </extension>

    <extension implements="::fwServices::registry::ServiceConfig">
        <id>ARActivityWriterConfig</id>
        <service>::uiIO::editor::SIOSelector</service>
        <desc>SExportWithSeriesDB config for SeriesDB writer</desc>
        <config>
            <type mode="writer" />
            <selection mode="include" />
            <addSelection service="::ioAtoms::SWriter" />
            <config id="ARActivityMDAtomsConfig" service="::ioAtoms::SWriter" />
        </config>
    </extension>

</plugin>
