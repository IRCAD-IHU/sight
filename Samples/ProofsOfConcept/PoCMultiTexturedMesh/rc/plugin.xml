<plugin id="PoCMultiTexturedMesh" version="@DASH_VERSION@">

    <requirement id="visuVTKQt" />

    <extension implements="::fwServices::registry::AppConfig2">
        <id>PoCMultiTexturedMeshConfig</id>
        <config>
            <object uid="mesh" type="::fwData::Mesh" />
            <object uid="pngMarker1" type="::fwData::Image" />
            <object uid="pngMarker2" type="::fwData::Image" />
            <object uid="pngMarker3" type="::fwData::Image" />

            <service uid="mainFrame" type="::gui::frame::SDefaultFrame" >
                <gui>
                    <frame>
                        <name>PoCMultiTexturedPlane</name>
                        <minSize width="1280" height="800" />
                    </frame>
                    <menuBar />
                    <toolBar />
                </gui>
                <registry>
                    <menuBar sid="menuBar" start="yes" />
                    <toolBar sid="toolBar" start="yes" />
                    <view sid="mainView" start="yes" />
                </registry>
            </service>

            <service uid="menuBar" type="::gui::aspect::SDefaultMenuBar">
                <gui>
                    <layout>
                        <menu name="File" />
                    </layout>
                </gui>
                <registry>
                    <menu sid="menuFile" start="yes" />
                </registry>
            </service>

            <service uid="toolBar" type="::gui::aspect::SDefaultToolBar">
                <gui>
                    <layout>
                        <menuItem name="Load Mesh ..." icon="@BUNDLE_PREFIX@/media_0-1/icons/Import.svg" />
                        <separator />
                        <menuItem name="Load Texture 1 ..." icon="@BUNDLE_PREFIX@/media_0-1/icons/Load-landmark.png" />
                        <menuItem name="Load Texture 2 ..." icon="@BUNDLE_PREFIX@/media_0-1/icons/Load-landmark.png" />
                        <menuItem name="Load Texture 3 ..." icon="@BUNDLE_PREFIX@/media_0-1/icons/Load-landmark.png" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="actionOpenMesh" start="yes" />
                    <menuItem sid="actionLoadPNG1" start="yes" />
                    <menuItem sid="actionLoadPNG2" start="yes" />
                    <menuItem sid="actionLoadPNG3" start="yes" />
                </registry>
            </service>

            <service uid="menuFile" type="::gui::aspect::SDefaultMenu" >
                <gui>
                    <layout>
                        <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="actionQuit" start="yes" />
                </registry>
            </service>

            <service uid="actionQuit" type="::gui::action::SQuit" />

            <service uid="actionLoadPNG1" type="::gui::action::SSlotCaller">
                <slots>
                    <slot>pngReader1/configureWithIHM</slot>
                    <slot>pngReader1/update</slot>
                </slots>
            </service>
            <service uid="actionLoadPNG2" type="::gui::action::SSlotCaller">
                <slots>
                    <slot>pngReader2/configureWithIHM</slot>
                    <slot>pngReader2/update</slot>
                </slots>
            </service>
            <service uid="actionLoadPNG3" type="::gui::action::SSlotCaller">
                <slots>
                    <slot>pngReader3/configureWithIHM</slot>
                    <slot>pngReader3/update</slot>
                </slots>
            </service>

            <service uid="actionOpenMesh" type="::gui::action::SStarter">
                <start uid="meshReader" />
            </service>

            <service uid="meshReader" type="::uiIO::editor::SIOSelector">
                <inout key="target" uid="mesh" />
                <type mode="reader" />
                <selection mode="include" />
                <addSelection service="::ioVTK::SMeshReader" />
            </service>

            <service uid="mainView" type="::gui::view::SDefaultView">
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="horizontal" />
                        <view />
                    </layout>
                </gui>
                <registry>
                    <view sid="genericScene" />
                </registry>
            </service>

            <service uid="pngReader1" type="::echoSimulation::SRasterImageReader" worker="w_pngReader">
                <inout key="frame" uid="pngMarker1" />
            </service>
            <service uid="pngReader2" type="::echoSimulation::SRasterImageReader" worker="w_pngReader">
                <inout key="frame" uid="pngMarker2" />
            </service>
            <service uid="pngReader3" type="::echoSimulation::SRasterImageReader" worker="w_pngReader">
                <inout key="frame" uid="pngMarker3" />
            </service>

            <service uid="genericScene" type="::fwRenderVTK::SRender" autoConnect="yes">
                <inout key="meshID" uid="mesh" />
                <inout key="framePNGID1" uid="pngMarker1" />
                <inout key="framePNGID2" uid="pngMarker2" />
                <inout key="framePNGID3" uid="pngMarker3" />

                <scene>
                    <renderer id="default" background="#052833" />

                    <adaptor id="cubeAdaptor" class="::visuVTKAdaptor::Mesh" objectId="meshID" >
                        <config renderer="default" uvgen="plane" texture="pngTextureAdaptor1,pngTextureAdaptor2,pngTextureAdaptor3" />
                    </adaptor>

                    <adaptor id="pngTextureAdaptor1" class="::visuVTKAdaptor::Texture" objectId="framePNGID1" >
                        <config renderer="default" wrapping="clamp" filtering="linear" blending="none" />
                    </adaptor>

                    <adaptor id="pngTextureAdaptor2" class="::visuVTKAdaptor::Texture" objectId="framePNGID2" >
                        <config renderer="default" wrapping="clamp" filtering="linear" blending="add" />
                    </adaptor>

                    <adaptor id="pngTextureAdaptor3" class="::visuVTKAdaptor::Texture" objectId="framePNGID3" >
                        <config renderer="default" wrapping="clamp" filtering="linear" blending="add" />
                    </adaptor>
                </scene>
            </service>

            <start uid="pngReader1" />
            <start uid="pngReader2" />
            <start uid="pngReader3" />

            <start uid="meshReader" />

            <start uid="mainFrame" />
            <start uid="genericScene" />

            <update uid="pngReader1" />
            <update uid="pngReader2" />
            <update uid="pngReader3" />
        </config>
    </extension>
</plugin>

