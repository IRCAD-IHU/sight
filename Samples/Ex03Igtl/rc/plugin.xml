<plugin id="Ex03Igtl" version="@PROJECT_VERSION@">
    <requirement id="dataReg" />
    <requirement id="servicesReg" />
    <requirement id="visuVTKQt" />
    <requirement id="preferences" />
    <extension implements="::fwServices::registry::AppConfig">
        <id>Ex03IgtlConfig</id>
        <config>
            <object uid="objectMeshUid" type="::fwData::Mesh" />
            <object uid="cameraMatrix" type="::fwData::TransformationMatrix3D" />
            <object uid="meshMatrix" type="::fwData::TransformationMatrix3D">
                <matrix>
                    <![CDATA[
                        1    0    0    5
                        0    1    0    0
                        0    0    1    0
                        0    0    0    1
                    ]]>
                </matrix>
            </object>
            <service uid="mainFrame" type="::gui::frame::SDefaultFrame">
                <gui>
                    <frame>
                        <name>Ex03Igtl</name>
                        <icon>Ex03Igtl-@PROJECT_VERSION@/tuto.ico</icon>
                    </frame>
                    <toolBar/>
                </gui>
                <registry>
                    <toolBar sid="toolbar" start="yes" />
                    <view sid="3DView" start="yes" />
                </registry>
            </service>

            <service uid="toolbar" type="::gui::aspect::SDefaultToolBar">
                <gui>
                    <layout>
                        <editor/>
                        <menuItem name="Load mesh" icon="media-0.1/icons/Import.svg" />
                        <separator/>
                        <menuItem name="start sender" icon="arMedia-0.1/icons/Network-Sending.svg" />
                        <menuItem name="stop sender" icon="arMedia-0.1/icons/Network-Stop-Sending.svg" />
                        <menuItem name="configure sender" icon="media-0.1/icons/Settings.svg" />
                        <separator/>
                        <menuItem name="start listener" icon="arMedia-0.1/icons/Network-Receiving.svg" />
                        <menuItem name="stop listener" icon="arMedia-0.1/icons/Network-Stop-Receiving.svg" />
                        <menuItem name="configure listener" icon="media-0.1/icons/Settings.svg" />
                        <separator/>
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="actionLoadMesh" start="yes" />
                    <menuItem sid="startServer" start="yes" />
                    <menuItem sid="stopServer" start="yes" />
                    <menuItem sid="configureServer" start="yes" />
                    <menuItem sid="startClient" start="yes" />
                    <menuItem sid="stopClient" start="yes" />
                    <menuItem sid="configureClient" start="yes" />
                </registry>
            </service>

            <service uid="actionLoadMesh" type="::gui::action::SSlotCaller">
                <slots>
                    <slot>objectMeshReader/update</slot>
                </slots>
            </service>

            <service uid="startServer" type="::gui::action::SStarter">
                <start uid="matrixNetworkSender" />
            </service>

            <service uid="stopServer" type="::gui::action::SStarter">
                <state executable="false" />
                <stop uid="matrixNetworkSender" />
            </service>

            <service uid="configureServer" type="::uiPreferences::action::SPreferencesConfiguration">
                <preference>
                    <type>number</type>
                    <name>Server port</name>
                    <key>SERVER_PORT_KEY</key>
                    <default_value>4242</default_value>
                </preference>
            </service>

            <service uid="startClient" type="::gui::action::SStarter">
                <start uid="matrixNetworkListener" />
            </service>

            <service uid="stopClient" type="::gui::action::SStarter">
                <state executable="false" />
                <stop uid="matrixNetworkListener" />
            </service>

            <service uid="configureClient" type="::uiPreferences::action::SPreferencesConfiguration">
                <preference>
                    <type>text</type>
                    <name>Client IP address</name>
                    <key>CLIENT_IP_KEY</key>
                    <default_value>127.0.0.1</default_value>
                </preference>
                <preference>
                    <type>number</type>
                    <name>Client port</name>
                    <key>CLIENT_PORT_KEY</key>
                    <default_value>4242</default_value>
                </preference>
            </service>

            <!-- *************************** Begin generic scene *************************** -->

            <service uid="3DView" type="::fwRenderVTK::SRender" autoConnect="yes">
                <scene>
                    <renderer id="default" layer="1" background="0.0" />
                    <renderer id="background" layer="0" background="0.0" />
                    <adaptor uid="cameraAdaptor" />
                    <adaptor uid="boxWidgetAdaptor" />
                    <adaptor uid="meshMatrixAdaptor" />
                    <adaptor uid="meshAdaptor" />
                </scene>
            </service>

            <service uid="cameraAdaptor" type="::visuVTKAdaptor::SCamera" autoConnect="yes">
                <inout key="transform" uid="cameraMatrix" />
                <config renderer="default" />
            </service>
            
            <service uid="boxWidgetAdaptor" type="::visuVTKAdaptor::SBoxWidget" autoConnect="yes">
               <inout key="transform" uid="meshMatrix" />
               <config renderer="default" transform="meshMatrixTransform" enableScaling="yes" />
           </service>
   
            <service uid="meshMatrixAdaptor" type="::visuVTKAdaptor::STransform" autoConnect="yes">
                <inout key="tm3d" uid="meshMatrix" />
                <config renderer="default" picker="" transform="meshMatrixTransform" />
            </service>
            
            <service uid="meshAdaptor" type="::visuVTKAdaptor::SMesh" autoConnect="yes">
                <in key="mesh" uid="objectMeshUid" />
                <config renderer="default" picker="" transform="meshMatrixTransform" autoresetcamera="no" />
            </service>

            <!-- *************************** End generic scene *************************** -->

            <service uid="objectMeshReader" type="::uiIO::editor::SIOSelector">
                <inout key="target" uid="objectMeshUid" />
            </service>

            <service uid="matrixNetworkListener" type="::ioIGTL::SClientListener">
                <inout group="objects">
                    <key uid="meshMatrix" deviceName="device01" />
                    <key uid="cameraMatrix" deviceName="device02" />
                </inout>
                <server>%CLIENT_IP_KEY%:%CLIENT_PORT_KEY%</server>
            </service>

            <service uid="matrixNetworkSender" type="::ioIGTL::SServerSender" autoConnect="yes" >
                <in group="objects">
                    <key uid="meshMatrix" deviceName="device01" />
                    <key uid="cameraMatrix" deviceName="device02" />
                </in>
                <port>%SERVER_PORT_KEY%</port>
            </service>

            <connect>
                <signal>matrixNetworkSender/serverStarted</signal>
                <slot>startServer/setInexecutable</slot>
                <slot>stopServer/setExecutable</slot>
            </connect>

            <connect>
                <signal>matrixNetworkSender/serverStopped</signal>
                <slot>startServer/setExecutable</slot>
                <slot>stopServer/setInexecutable</slot>
            </connect>

            <connect>
                <signal>matrixNetworkListener/clientConnected</signal>
                <slot>startClient/setInexecutable</slot>
                <slot>stopClient/setExecutable</slot>
            </connect>

            <connect>
                <signal>matrixNetworkListener/clientDisconnected</signal>
                <slot>startClient/setExecutable</slot>
                <slot>stopClient/setInexecutable</slot>
            </connect>

            <start uid="mainFrame" />
            <start uid="objectMeshReader" />

            <!-- VTK scene '3DView' -->
            <start uid="cameraAdaptor" />
            <start uid="boxWidgetAdaptor" />
            <start uid="meshMatrixAdaptor" />
            <start uid="meshAdaptor" />
        </config>
    </extension>
</plugin>
