<plugin id="Ex03Igtl" version="@DASH_VERSION@" >

    <requirement id="dataReg" />
    <requirement id="servicesReg" />
    <requirement id="visuVTKQt" />
    <requirement id="preferences" />

    <extension implements="::fwServices::registry::AppConfig2">
        <id>Ex03IgtlConfig</id>
        <config>

            <object uid="objectMeshUid" type="::fwData::Mesh" />
            <object uid="identityMatrix" type="::fwData::TransformationMatrix3D" />

            <service uid="mainFrame" type="::gui::frame::SDefaultFrame" >
                <gui>
                    <frame>
                        <name>Ex03Igtl</name>
                        <icon>@BUNDLE_PREFIX@/Ex03Igtl_@DASH_VERSION@/tuto.ico</icon>
                    </frame>
                    <toolBar />
                </gui>
                <registry>
                    <toolBar sid="toolbar" start="yes" />
                    <view sid="3DView" start="yes" />
                </registry>
            </service>

            <service uid="toolbar" type="::gui::aspect::SDefaultToolBar"  >
                <gui>
                    <layout>
                    <editor />
                        <menuItem name="Load mesh" icon="@BUNDLE_PREFIX@/media_0-1/icons/Import.svg" />
                        <separator/>
                        <menuItem name="start sender" icon="@BUNDLE_PREFIX@/arMedia_0-1/icons/Network-Sending.svg"/>
                        <menuItem name="stop sender"  icon="@BUNDLE_PREFIX@/arMedia_0-1/icons/Network-Stop-Sending.svg"/>
                        <menuItem name="configure sender" icon="@BUNDLE_PREFIX@/media_0-1/icons/Settings.svg" />
                        <separator/>
                        <menuItem name="start listener" icon="@BUNDLE_PREFIX@/arMedia_0-1/icons/Network-Receiving.svg"/>
                        <menuItem name="stop listener"  icon="@BUNDLE_PREFIX@/arMedia_0-1/icons/Network-Stop-Receiving.svg"/>
                        <menuItem name="configure listener" icon="@BUNDLE_PREFIX@/media_0-1/icons/Settings.svg" />
                        <separator/>
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="actionLoadMesh" start="yes" />
                    <menuItem sid="startServer" start="yes" />
                    <menuItem sid="stopServer" start="yes" />
                    <menuItem sid="configureServer" start="yes" />
                    <menuItem sid="startClient" start="yes" />
                    <menuItem sid="stopClient" start="yes" />
                    <menuItem sid="configureClient" start="yes" />
                </registry>
            </service>

            <service uid="actionLoadMesh" type="::gui::action::SSlotCaller" >
                <slots>
                    <slot>objectMeshReader/update</slot>
                </slots>
            </service>

            <service uid="startServer" type="::gui::action::SStarter" >
                <start uid="matrixNetworkSender" />
            </service>

            <service uid="stopServer" type="::gui::action::SStarter" >
                <state executable="false" />
                <stop uid="matrixNetworkSender" />
            </service>

            <service uid="configureServer" type="::uiPreferences::action::SPreferencesConfiguration">
                <preference>
                    <type>number</type>
                    <name>Server port</name>
                    <key>SERVER_PORT_KEY</key>
                    <default_value>4242</default_value>
                </preference>
            </service>

            <service uid="startClient" type="::gui::action::SStarter" >
                <start uid="matrixNetworkListener" />
            </service>

            <service uid="stopClient" type="::gui::action::SStarter" >
                <state executable="false" />
                <stop uid="matrixNetworkListener" />
            </service>

            <service uid="configureClient" type="::uiPreferences::action::SPreferencesConfiguration">
                <preference>
                    <type>text</type>
                    <name>Client IP address</name>
                    <key>CLIENT_IP_KEY</key>
                    <default_value>127.0.0.1</default_value>
                </preference>
                <preference>
                    <type>number</type>
                    <name>Client port</name>
                    <key>CLIENT_PORT_KEY</key>
                    <default_value>4242</default_value>
                </preference>
            </service>

            <service uid="3DView" type="::fwRenderVTK::SRender" autoConnect="yes">
                <in key="identityMatrix" uid="identityMatrix" />
                <in key="objectMesh" uid="objectMeshUid" />
                <scene>
                    <renderer id="default" layer="1" background="0.0" />
                    <renderer id="background" layer="0" background="0.0" />

                    <adaptor id="camera" class="::visuVTKAdaptor::Camera2" objectId="identityMatrix">
                        <config renderer="default"/>
                    </adaptor>

                    <adaptor id="markerObjectMesh" class="::visuVTKAdaptor::Mesh" objectId="objectMesh">
                        <config renderer="default" picker="" transform="trackingObjectMatrixTransform" autoresetcamera="no" />
                    </adaptor>
                </scene>
            </service>

            <service uid="objectMeshReader" type="::uiIO::editor::SIOSelector" >
                <inout key="target" uid="objectMeshUid" />
            </service>

            <service uid="matrixNetworkListener" type="::ioIGTL::SOpenIGTLinkListener" >
                <inout key="target" uid="identityMatrix" />
                <server>%CLIENT_IP_KEY%:%CLIENT_PORT_KEY%</server>
            </service>

            <service uid="matrixNetworkSender" type="::ioIGTL::SOpenIGTLinkSender" >
                <in key="target" uid="identityMatrix" />
                <port>%SERVER_PORT_KEY%</port>
            </service>

            <connect>
                <signal>matrixNetworkSender/serverStarted</signal>
                <slot>startServer/setInexecutable</slot>
                <slot>stopServer/setExecutable</slot>
            </connect>

            <connect>
                <signal>matrixNetworkSender/serverStopped</signal>
                <slot>startServer/setExecutable</slot>
                <slot>stopServer/setInexecutable</slot>
            </connect>

            <connect>
                <signal>matrixNetworkListener/clientConnected</signal>
                <slot>startClient/setInexecutable</slot>
                <slot>stopClient/setExecutable</slot>
            </connect>

            <connect>
                <signal>matrixNetworkListener/clientDisconnected</signal>
                <slot>startClient/setExecutable</slot>
                <slot>stopClient/setInexecutable</slot>
            </connect>

            <start uid="mainFrame" />
            <start uid="objectMeshReader" />

            <update uid="startServer" />

        </config>
    </extension>

</plugin>
