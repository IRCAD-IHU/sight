<plugin id="Ex01VideoTracking" version="@DASH_VERSION@">
    <requirement id="dataReg" />
    <requirement id="servicesReg" />
    <requirement id="visuVTKQt" />
    <requirement id="trackerAruco" />
    <requirement id="arMedia" />
    <extension implements="::fwServices::registry::AppConfig">
        <id>Ex01VideoTrackingConfig</id>
        <config>
            <object uid="camera" type="::arData::Camera" />
            <object uid="frameTL" type="::arData::FrameTL">
                <value>100</value>
            </object>

            <object uid="tagTL" type="::arData::MarkerTL" />
            <object uid="videoImage" type="::fwData::Image" />
            <service uid="mainFrame" type="::gui::frame::SDefaultFrame">
                <gui>
                    <frame>
                        <name>Ex01VideoTracking</name>
                        <icon>Ex01VideoTracking_0-1/videotracking.ico</icon>
                    </frame>
                    <toolBar/>
                </gui>
                <registry>
                    <toolBar sid="toolbar" start="yes" />
                    <view sid="cameraView" start="yes" />
                </registry>
            </service>

            <service uid="toolbar" type="::gui::aspect::SDefaultToolBar">
                <gui>
                    <layout>
                        <editor/>
                        <menuItem name="start" icon="arMedia_0-1/icons/start-cam.svg" />
                        <menuItem name="stop" icon="arMedia_0-1/icons/stop-cam.svg" />
                        <menuItem name="pause" icon="arMedia_0-1/icons/pause-cam.svg" />
                    </layout>
                </gui>
                <registry>
                    <editor sid="CameraSelector" start="yes" />
                    <menuItem sid="startVideo" start="yes" />
                    <menuItem sid="stopVideo" start="yes" />
                    <menuItem sid="pauseVideo" start="yes" />
                </registry>
            </service>

            <service uid="startVideo" type="::gui::action::SSlotCaller">
                <slots>
                    <slot>frameGrabber/startCamera</slot>
                </slots>
            </service>

            <service uid="stopVideo" type="::gui::action::SSlotCaller">
                <slots>
                    <slot>frameGrabber/stopCamera</slot>
                </slots>
            </service>

            <service uid="pauseVideo" type="::gui::action::SSlotCaller">
                <slots>
                    <slot>frameGrabber/pauseCamera</slot>
                </slots>
            </service>

            <service uid="cameraView" type="::gui::view::SDefaultView">
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="horizontal" />
                        <view proportion="1" />
                        <view proportion="0" />
                    </layout>
                </gui>
                <registry>
                    <view sid="genericScene" start="yes" />
                    <view sid="parameters" start="yes" />
                </registry>
            </service>

            <!-- *************************** Begin generic scene *************************** -->

            <service uid="genericScene" type="::fwRenderVTK::SRender" autoConnect="yes">
                <scene>
                    <renderer id="default" background="0.0" />
                    <adaptor uid="videoAdpt" />
                    <adaptor uid="interactorStyle" />
                </scene>
            </service>

            <service uid="videoAdpt" type="::visuVTKARAdaptor::SVideo" autoConnect="yes">
                <in key="frame" uid="videoImage" />
                <config renderer="default" />
            </service>

            <service uid="interactorStyle" type="::visuVTKAdaptor::SInteractorStyle">
                <config renderer="default" style="InteractorStyle2DForNegato" />
            </service>

            <!-- *************************** End generic scene *************************** -->

            <service uid="parameters" type="::guiQt::editor::SParameters">
                <parameters>
                    <param type="bool" name="Show Marker" key="debugMode" defaultValue="true" />
                    <param type="enum" name="Detection Method" key="method" defaultValue="CANNY" values="ADPT_THRES,FIXED_THRES,CANNY" />
                    <param type="enum" name="Corner ref." key="corner" defaultValue="SUBPIX" values="NONE,HARRIS,SUBPIX,LINES" />
                    <param type="double" name="block size" key="blocksize" defaultValue="7." min="0." max="30." />
                    <param type="double" name="constant" key="constant" defaultValue="7." min="0." max="50." />
                    <param type="double" name="border width(%)" key="borderwidth" defaultValue="0.01" min="0." max="99.9" />
                    <param type="int" name="Pattern Width(mm)" key="pattern" defaultValue="60" min="10" max="1000" />
                    <param type="int" name="Speed" key="speed" defaultValue="3" min="1" max="3" />
                </parameters>
            </service>

            <service uid="tracker" type="::trackerAruco::SArucoTracker" worker="tracking">
                <in key="timeline" uid="frameTL" autoConnect="yes" />
                <in key="camera" uid="camera" />
                <inout group="tagTL">
                    <key uid="tagTL" />
                </inout>
                <config>
                    <track>
                        <marker id="0,1,2,3,4,5,6,7,8,42,100,101,102,103,104,105" />
                    </track>
                    <threshold>
                        <method>ADPT_THRES</method>
                        <blockSize>7</blockSize>
                        <constant>7</constant>
                    </threshold>
                    <patternWidth>30</patternWidth>
                    <debugMarkers>yes</debugMarkers>
                </config>
            </service>

            <service uid="synchronizer" type="::videoTools::SFrameMatrixSynchronizer" worker="videoWorker">
                <in group="frameTL">
                    <key uid="frameTL" />
                </in>
                <inout group="image">
                    <key uid="videoImage" />
                </inout>
                <framerate>30</framerate>
            </service>

            <service uid="CameraSelector" type="::videoQt::editor::SCamera">
                <inout key="camera" uid="camera" />
                <videoSupport>yes</videoSupport>
            </service>

            <service uid="frameGrabber" type="::videoQt::SFrameGrabber">
                <in key="camera" uid="camera" />
                <inout key="frameTL" uid="frameTL" />
            </service>

            <connect>
                <signal>parameters/boolChanged</signal>
                <slot>tracker/setBoolParameter</slot>
            </connect>

            <connect>
                <signal>parameters/intChanged</signal>
                <slot>tracker/setIntParameter</slot>
            </connect>

            <connect>
                <signal>parameters/doubleChanged</signal>
                <slot>tracker/setDoubleParameter</slot>
            </connect>

            <connect>
                <signal>parameters/enumChanged</signal>
                <slot>tracker/setEnumParameter</slot>
            </connect>

            <connect>
                <signal>camera/idModified</signal>
                <slot>frameGrabber/stopCamera</slot>
            </connect>

            <start uid="mainFrame" />
            <start uid="frameGrabber" />
            <start uid="synchronizer" />
            <start uid="tracker" />
            <!-- VTK scene 'genericScene' -->
            <start uid="videoAdpt" />
            <start uid="interactorStyle" />
        </config>
    </extension>
</plugin>
