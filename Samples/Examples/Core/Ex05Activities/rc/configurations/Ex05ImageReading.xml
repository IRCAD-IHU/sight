<!-- This configuration allows to read an image and display it in a simple scene -->
<extension implements="::fwServices::registry::AppConfig">
    <id>Ex05ImageReading</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="image" />
        <param name="enabledPreviousChannel" default="enabledPreviousChannel" />
        <param name="enabledNextChannel" default="enabledNextChannel" />
        <param name="previousActivityChannel" default="previousActivityChannel" />
        <param name="nextActivityChannel" default="nextActivityChannel" />
    </parameters>
    <config>
        <object uid="${image}" type="::fwData::Image" src="ref" />

        <service uid="mainView" type="::gui::view::SDefaultView" >
            <gui>
                <layout type="::fwGui::CardinalLayoutManager">
                    <view align="center" />
                </layout>
                <toolBar />
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <view sid="imageScene" start="yes" />
                <toolBar sid="toolBar" start="yes" />
            </registry>
        </service>

        <!-- ******************************************************************************************************* -->
        <!-- Toolbar -->
        <!-- ******************************************************************************************************* -->

        <service uid="toolBar" type="::gui::aspect::SDefaultToolBar" >
            <gui>
                <layout>
                    <menuItem name="Previous" icon="media-0.1/icons/Back.svg" />
                    <menuItem name="Next" icon="media-0.1/icons/Next.svg" />
                    <separator />
                    <menuItem name="Import image" icon="media-0.1/icons/Import.svg" />
                </layout>
            </gui>
            <registry>
                <menuItem sid="ActionPrevious" start="yes" />
                <menuItem sid="ActionNext" start="yes" />
                <menuItem sid="ActionImport" start="yes" />
            </registry>
        </service>

        <!-- ******************************************************************************************************* -->
        <!-- Actions -->
        <!-- ******************************************************************************************************* -->

        <service uid="ActionImport" type="::uiIO::editor::SIOSelector">
            <inout key="data" uid="${image}" />
            <type mode="reader" />
            <selection mode="include" />
            <addSelection service="::ioVTK::SImageReader" />
        </service>

        <!-- The action "previous" and "next" are visible only if the application use a "SActivitySequencer".
             This service send signals to enable or not the actions. -->
        <service uid="ActionPrevious" type="::gui::action::SSignal">
            <state visible="false" />
        </service>

        <service uid="ActionNext" type="::gui::action::SSignal">
            <state visible="false" />
        </service>

        <!-- ******************************************************************************************************* -->
        <!-- Services -->
        <!-- ******************************************************************************************************* -->

        <service uid="imageScene" type="::vtkSimpleNegato::SRenderer" autoConnect="yes">
            <in key="image" uid="${image}" />
        </service>

        <!-- ******************************************************************************************************* -->
        <!-- Connections -->
        <!-- ******************************************************************************************************* -->

        <!-- Connection to enable "previous" action. It should be connected to a SActivitySequencer in the application
             configuration.-->
        <connect channel="${enabledPreviousChannel}">
            <slot>ActionExport/hide</slot>
            <slot>ActionPrevious/show</slot>
            <slot>ActionPrevious/setIsExecutable</slot>
        </connect>

        <!-- Connection to called 'previous' slot of the application's SActivitySequencer. -->
        <connect channel="${previousActivityChannel}">
            <signal>ActionPrevious/triggered</signal>
        </connect>

        <!-- Connection to enable "next" action. It should be connected to a SActivitySequencer in the application
             configuration.-->
        <connect channel="${enabledNextChannel}">
            <slot>ActionExport/hide</slot>
            <slot>ActionNext/show</slot>
            <slot>ActionNext/setIsExecutable</slot>
        </connect>

        <!-- Connection to called 'next' slot of the application's SActivitySequencer. -->
        <connect channel="${nextActivityChannel}">
            <signal>ActionNext/triggered</signal>
        </connect>

        <!-- ******************************************************************************************************* -->
        <!-- Start -->
        <!-- ******************************************************************************************************* -->

        <start uid="mainView" />

        <!-- imageScene is started by the mainview, it should be updated to display the image when it exists on start. -->
        <update uid="imageScene" />

    </config>
</extension>
