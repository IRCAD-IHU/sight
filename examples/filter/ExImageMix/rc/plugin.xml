<plugin id="ExImageMix" >

    <requirement id="sight::module::ui::qt" />
    <requirement id="sight::module::service" />
    <requirement id="visuVTK" />
    <requirement id="visuVTKQt" />
    <requirement id="sight::module::ui::base" />

    <extension implements="::sight::service::extension::AppConfig" >
        <id>ExImageMix_AppCfg</id>
        <config>

            <!-- ******************************* Objects declaration ****************************** -->

            <!-- backgroundImage description -->
            <object uid="backgroundImage" type="::sight::data::Image" />
            <!-- frontImage description -->
            <object uid="frontImage" type="::sight::data::Image" />

            <!-- ******************************* UI declaration *********************************** -->

            <service uid="mainFrame" type="::sight::module::ui::base::SFrame" >
                <gui>
                    <frame>
                        <name>ExImageMix</name>
                        <icon>ExImageMix/tuto.ico</icon>
                        <minSize width="1280" height="720" />
                    </frame>
                    <menuBar/>
                </gui>
                <registry>
                    <menuBar sid="menuBarView" start="yes" />
                    <view sid="mainView" start="yes" />
                </registry>
            </service>

            <service uid="menuBarView" type="::sight::module::ui::base::SMenuBar" >
                <gui>
                    <layout>
                        <menu name="File" />
                    </layout>
                </gui>
                <registry>
                    <menu sid="menuFileView" start="yes" />
                </registry>
            </service>

            <service uid="menuFileView" type="::sight::module::ui::base::SMenu" >
                <gui>
                    <layout>
                        <menuItem name="Open background image" shortcut="Ctrl+O" />
                        <menuItem name="Open front image" shortcut="Ctrl+I" />
                        <separator/>
                        <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="openBackgroundFileAct" start="yes" />
                    <menuItem sid="openFrontFileAct" start="yes" />
                    <menuItem sid="quitAct" start="yes" />
                </registry>
            </service>

            <service uid="mainView" type="::sight::module::ui::base::SView" >
                <gui>
                    <layout type="::sight::ui::base::LineLayoutManager" >
                        <orientation value="horizontal" />
                        <view proportion="0" backgroundColor="#36393E" border="5" />
                        <view proportion="1" />
                        <view proportion="0" />
                    </layout>
                </gui>
                <registry>
                    <view sid="editorsView" start="yes" />
                    <view sid="blendSceneView" start="yes" />
                    <view sid="imagesView" start="yes" />
                </registry>
            </service>

            <service uid="editorsView" type="::sight::module::ui::base::SView" >
                <gui>
                    <layout type="::sight::ui::base::LineLayoutManager" >
                        <orientation value="vertical" />
                        <view proportion="0" caption="[background image] Pixel info" />
                        <view proportion="0" caption="[background image] Window Level" />
                        <view proportion="0" caption="[front image] Pixel info" />
                        <view proportion="0" caption="[front image] Image transparency" />
                        <view proportion="0" caption="[front image] Window Level" />
                        <spacer/>
                    </layout>
                </gui>
                <registry>
                    <view sid="imageInfoSrv" start="no" />
                    <view sid="windowLevelSrv" start="no" />
                    <view sid="imageInfo2Srv" start="no" />
                    <view sid="imageTransparencySrv" start="no" />
                    <view sid="windowLevel2Srv" start="no" />
                </registry>
            </service>

            <service uid="blendSceneView" type="::sight::module::ui::base::SView" >
                <gui>
                    <layout type="::sight::ui::base::LineLayoutManager" >
                        <orientation value="vertical" />
                        <view proportion="1" />
                        <view proportion="0" minHeight="30" backgroundColor="#3E4453" border="5" />
                    </layout>
                </gui>
                <registry>
                    <view sid="genericSceneBlendSrv" start="yes" />
                    <view sid="blendSceneBottomView" start="yes" />
                </registry>
            </service>

            <service uid="blendSceneBottomView" type="::sight::module::ui::base::SView" >
                <gui>
                    <layout type="::sight::ui::base::LineLayoutManager" >
                        <orientation value="horizontal" />
                        <view proportion="1" />
                        <view proportion="0" minWidth="30" />
                    </layout>
                </gui>
                <registry>
                    <view sid="sliderIndexEditorSrv" start="no" />
                    <view sid="snapshotBlendSceneEditorSrv" start="yes" />
                </registry>
            </service>

            <service uid="imagesView" type="::sight::module::ui::base::SView" >
                <gui>
                    <layout type="::sight::ui::base::LineLayoutManager" >
                        <orientation value="vertical" />
                        <view proportion="1" minWidth="300" />
                        <view proportion="1" />
                    </layout>
                </gui>
                <registry>
                    <view sid="genericSceneBackgroundSrv" start="yes" />
                    <view sid="genericSceneForegroundSrv" start="yes" />
                </registry>
            </service>

            <!-- ************************************* Action ************************************ -->

            <service uid="openBackgroundFileAct" type="::sight::module::ui::base::com::SStarter" >
                <start uid="backgroundImageReaderSrv" />
            </service>

            <service uid="openFrontFileAct" type="::sight::module::ui::base::com::SStarter" >
                <start uid="foregroundImageReaderSrv" />
            </service>

            <service uid="quitAct" type="::sight::module::ui::base::SQuit" />

            <!-- ******************************* Begin Generic Scene ******************************* -->

            <!-- Generic scene to show merging of backgroung and front images -->
            <service uid="genericSceneBlendSrv" type="::fwRenderVTK::SRender" >
                <scene>
                    <picker id="picker" vtkclass="fwVtkCellPicker" />
                    <vtkObject id="imageBlend" class="vtkImageBlend" />
                    <renderer id="default" background="#36393E" />
                    <adaptor uid="negatoAdp" />
                    <adaptor uid="interactor" />
                    <adaptor uid="backgroundPickerAdp" />
                    <adaptor uid="foregroundPickerAdp" />
                    <adaptor uid="snapshotAdp" />
                    <adaptor uid="imagesBlendAdp" />
                    <adaptor uid="imagesProbeCursorAdp" />
                </scene>
            </service>

            <service uid="negatoAdp" type="::visuVTKAdaptor::SNegatoMPR" autoConnect="yes" >
                <inout key="image" uid="backgroundImage" />
                <config renderer="default" picker="picker" mode="2D" slices="1" sliceIndex="axial" vtkimagesource="imageBlend" />
            </service>

            <service uid="interactor" type="::visuVTKAdaptor::SInteractorStyle" >
                <config renderer="default" style="InteractorStyle2DForNegato" />
            </service>

            <service uid="backgroundPickerAdp" type="::visuVTKAdaptor::SImagePickerInteractor" autoConnect="yes" >
                <inout key="image" uid="backgroundImage" />
                <config renderer="default" picker="picker" />
            </service>

            <service uid="foregroundPickerAdp" type="::visuVTKAdaptor::SImagePickerInteractor" autoConnect="yes" >
                <inout key="image" uid="frontImage" />
                <config renderer="default" picker="picker" />
            </service>

            <service uid="snapshotAdp" type="::visuVTKAdaptor::SSnapshot" >
                <config renderer="default" />
            </service>

            <!-- Adaptor to show background and front image merge in the same view. -->
            <service uid="imagesBlendAdp" type="::visuVTKAdaptor::SImagesBlend" >
                <inout group="image" autoConnect="yes" >
                    <key uid="backgroundImage" opacity="1.0" tfalpha="no" />
                    <key uid="frontImage" opacity="1.0" tfalpha="yes" />
                </inout>
                <config renderer="default" vtkimageregister="imageBlend" />
            </service>

            <!-- Adaptor to show the red cross and images pixel values informations in scene top left. -->
            <service uid="imagesProbeCursorAdp" type="::visuVTKAdaptor::SImagesProbeCursor" >
                <inout group="image" autoConnect="yes" >
                    <key uid="backgroundImage" name="background" />
                    <key uid="frontImage" name="front" />
                </inout>
                <config renderer="default" picker="picker" />
            </service>

            <!-- ******************************* Begin Generic Scene ******************************* -->

            <!-- Generic scene for background image -->
            <service uid="genericSceneBackgroundSrv" type="::fwRenderVTK::SRender" >
                <scene>
                    <picker id="picker" vtkclass="fwVtkCellPicker" />
                    <renderer id="default" background="#36393E" />
                    <adaptor uid="BGNegatoAdp" />
                    <adaptor uid="BGPickerAdp" />
                    <adaptor uid="BGInteractorAdp" />
                </scene>
            </service>

            <service uid="BGNegatoAdp" type="::visuVTKAdaptor::SNegatoMPR" autoConnect="yes" >
                <inout key="image" uid="backgroundImage" />
                <config renderer="default" picker="picker" mode="2D" slices="1" sliceIndex="axial" />
            </service>

            <service uid="BGPickerAdp" type="::visuVTKAdaptor::SImagePickerInteractor" autoConnect="yes" >
                <inout key="image" uid="backgroundImage" />
                <config renderer="default" picker="picker" />
            </service>

            <service uid="BGInteractorAdp" type="::visuVTKAdaptor::SInteractorStyle" >
                <config renderer="default" style="InteractorStyle2DForNegato" />
            </service>

            <!-- ******************************* Begin Generic Scene ******************************* -->

            <!-- Generic scene for front image -->
            <service uid="genericSceneForegroundSrv" type="::fwRenderVTK::SRender" >
                <scene>
                    <picker id="picker" vtkclass="fwVtkCellPicker" />
                    <renderer id="default" background="#36393E" />
                    <adaptor uid="FGNegatoAdp" />
                    <adaptor uid="FGPickerAdp" />
                    <adaptor uid="FGInteractorAdp" />
                </scene>
            </service>

            <service uid="FGNegatoAdp" type="::visuVTKAdaptor::SNegatoMPR" autoConnect="yes" >
                <inout key="image" uid="frontImage" />
                <config renderer="default" picker="picker" mode="2D" slices="1" sliceIndex="axial" />
            </service>

            <service uid="FGPickerAdp" type="::visuVTKAdaptor::SImagePickerInteractor" autoConnect="yes" >
                <inout key="image" uid="frontImage" />
                <config renderer="default" picker="picker" />
            </service>

            <service uid="FGInteractorAdp" type="::visuVTKAdaptor::SInteractorStyle" >
                <config renderer="default" style="InteractorStyle2DForNegato" />
            </service>

            <!-- ******************************* Services ***************************************** -->

            <service uid="snapshotBlendSceneEditorSrv" type="::sight::module::ui::qt::viz::SnapshotEditor" />

            <service uid="backgroundImageReaderSrv" type="::sight::module::ui::base::io::SSelector" >
                <inout key="data" uid="backgroundImage" />
                <type mode="reader" class="::sight::data::Image" />
            </service>

            <service uid="foregroundImageReaderSrv" type="::sight::module::ui::base::io::SSelector" >
                <inout key="data" uid="frontImage" />
                <type mode="reader" class="::sight::data::Image" />
            </service>

            <!-- This service convert a simple fwData::Image to medical Image -->
            <service uid="medicalImageConverterSrv" type="::sight::module::data::MedicalImageSrv" >
                <inout key="image" uid="backgroundImage" />
            </service>

            <service uid="sliderIndexEditorSrv" type="::sight::module::ui::qt::image::SliceIndexPositionEditor" autoConnect="yes" >
                <inout key="image" uid="backgroundImage" />
                <sliceIndex>axial</sliceIndex>
            </service>

            <!-- Editors of background image -->
            <service uid="imageInfoSrv" type="::sight::module::ui::qt::image::ImageInfo" >
                <in key="image" uid="backgroundImage" autoConnect="yes" />
            </service>

            <service uid="windowLevelSrv" type="::sight::module::ui::qt::image::WindowLevel" >
                <inout key="image" uid="backgroundImage" autoConnect="yes" />
            </service>

            <!-- This service convert a simple fwData::Image to medical Image -->
            <service uid="medicalImageConverterSrv2" type="::sight::module::data::MedicalImageSrv" >
                <inout key="image" uid="frontImage" />
            </service>

            <!-- Editors of front image -->
            <service uid="imageInfo2Srv" type="::sight::module::ui::qt::image::ImageInfo" >
                <in key="image" uid="frontImage" autoConnect="yes" />
            </service>

            <service uid="imageTransparencySrv" type="::sight::module::ui::qt::image::ImageTransparency" autoConnect="yes" >
                <inout key="image" uid="frontImage" autoConnect="yes" />
                <shortcut value="V" />
            </service>

            <service uid="windowLevel2Srv" type="::sight::module::ui::qt::image::WindowLevel" >
                <inout key="image" uid="frontImage" autoConnect="yes" />
            </service>

            <!-- Service to forward signal from backgroundImage to front image -->
            <service uid="forwarderMsgSrv" type="::sight::module::data::wrapper::SImageSignalForwarder" >
                <in key="target" uid="frontImage" />
                <in key="source" uid="backgroundImage" />
                <forward>sliceIndexModified</forward>
                <forward>sliceTypeModified</forward>
            </service>

            <!-- ******************************* Connections ***************************************** -->

            <connect>
                <signal>snapshotBlendSceneEditorSrv/snapped</signal>
                <slot>snapshotAdp/snap</slot>
            </connect>

            <connect>
                <signal>backgroundPickerAdp/picked</signal>
                <signal>BGPickerAdp/picked</signal>
                <slot>imageInfo/getInteraction</slot>
            </connect>

            <connect>
                <signal>FGPickerAdp/picked</signal>
                <slot>imageInfo2/getInteraction</slot>
            </connect>

            <!-- ******************************* Start services ***************************************** -->

            <start uid="mainFrame" />
            <start uid="forwarderMsgSrv" />
            <start uid="sliderIndexEditorSrv" />
            <start uid="imageInfoSrv" />
            <start uid="windowLevelSrv" />
            <start uid="imageInfo2Srv" />
            <start uid="windowLevel2Srv" />
            <start uid="imageTransparencySrv" />
            <start uid="medicalImageConverterSrv" />
            <start uid="medicalImageConverterSrv2" />
            <start uid="negatoAdp" />
            <start uid="interactor" />
            <start uid="backgroundPickerAdp" />
            <start uid="foregroundPickerAdp" />
            <start uid="snapshotAdp" />
            <start uid="imagesBlendAdp" />
            <start uid="imagesProbeCursorAdp" />
            <start uid="BGNegatoAdp" />
            <start uid="BGPickerAdp" />
            <start uid="BGInteractorAdp" />
            <start uid="FGNegatoAdp" />
            <start uid="FGPickerAdp" />
            <start uid="FGInteractorAdp" />

        </config>
    </extension>
</plugin>
