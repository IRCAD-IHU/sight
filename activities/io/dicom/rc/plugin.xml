<plugin id="activity_io_dicom" version="@PROJECT_VERSION@" >

    <requirement id="module_activity" />
    <requirement id="module_ui_qt" />
    <requirement id="module_viz_ogreQt" />

    <xi:include href="configurations/DicomPacsReader.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/DicomPacsWriter.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/PacsConfigurationManager.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/2DPacsPreviewConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/2DLocalPreviewConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/DicomFiltering.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/DicomPreview.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

    <extension implements="::sight::activity::registry::Activity">
        <id>DicomPacsReader</id>
        <title>Dicom PACS Reader</title>
        <desc>Dicom PACS Reader activity</desc>
        <icon>module_ui_media-0.1/icons/Pull.svg</icon>
        <requirements>
        </requirements>
        <builder>::activity::builder::ActivitySeries</builder>
        <appConfig id="DicomPacsReader">
        </appConfig>
        </extension>

    <extension implements="::sight::activity::registry::Activity">
        <id>DicomPacsWriter</id>
        <title>Dicom PACS Writer</title>
        <desc>Dicom Pacs Writer activity</desc>
        <icon>module_ui_media-0.1/icons/Push.svg</icon>
        <requirements>
        </requirements>
        <builder>::activity::builder::ActivitySeries</builder>
        <appConfig id="DicomPacsWriter">
        </appConfig>
    </extension>

    <extension implements="::sight::service::registry::ServiceConfig">
        <id>DicomPacsReaderConfig</id>
        <desc>Reader configuration to convert retrieved DicomSeries to ImageSeries</desc>
        <config>
            <filterType>::sight::filter::dicom::custom::DefaultDicomFilter</filterType>
        </config>
    </extension>

    <extension implements="::sight::activity::registry::Activity">
        <id>DicomFiltering</id>
        <title>DICOM Filtering</title>
        <desc>DICOM Filtering activity</desc>
        <icon>module_ui_media-0.1/icons/icon-DICOM-Filtering.svg</icon>
        <requirements>
        </requirements>
        <builder>::activity::builder::ActivitySeries</builder>
        <appConfig id="DicomFiltering">
        </appConfig>
    </extension>

    <extension implements="::sight::service::registry::ServiceConfig">
        <id>IOSelectorServiceConfigVRRenderExtDicomSeriesDBReader</id>
        <service>::sight::modules::ui::base::io::SSelector</service>
        <desc>IOSelectorService config for DICOM Filtering Activity</desc>
        <config>
            <type mode="reader" />
            <selection mode="include" />
            <addSelection service="::sight::modules::io::dicom::SDicomSeriesDBReader" />
            <config id="DicomReaderConfig" service="::sight::modules::io::dicom::SDicomSeriesDBReader" />
        </config>
    </extension>

    <extension implements="::sight::service::registry::ServiceConfig">
         <id>DicomReaderConfig</id>
         <desc>DICOM Reader Config</desc>
         <config>
            <dicomdirSupport>user_selection</dicomdirSupport>
            <mode>direct</mode>
         </config>
     </extension>
     
</plugin>
