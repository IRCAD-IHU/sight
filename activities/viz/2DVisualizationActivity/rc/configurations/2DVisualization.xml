<extension implements="::sight::service::registry::AppConfig">
    <id>2DVisualization</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="SERIESDB" />
        <param name="AS_UID" />
        <param name="image" />
        <param name="landmarks" />
        <param name="advancedLandmarksEditor" default="yes" />
        <param name="enabledPreviousChannel" default="enabledPreviousChannel" />
        <param name="enabledNextChannel" default="enabledNextChannel" />
        <param name="previousActivityChannel" default="previousActivityChannel" />
        <param name="nextActivityChannel" default="nextActivityChannel" />
    </parameters>
    <config>
        <object uid="${SERIESDB}" type="::sight::data::SeriesDB" src="ref" />
        <object uid="${AS_UID}" type="::sight::data::ActivitySeries" src="ref" />
        <object uid="${image}" type="::sight::data::Image" src="ref" />
        <object uid="${landmarks}" type="::sight::data::Landmarks" src="ref" />

        <service uid="mainView" type="::sight::modules::ui::base::SView">
            <gui>
                <layout type="::sight::ui::base::CardinalLayoutManager">
                    <view caption="Negato1" align="center" />
                    <view caption="Negato2" align="right" />
                    <view caption="Negato3" align="right" />
                    <view align="left" visible="false" />
                </layout>
                <toolBar />
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <toolBar sid="toolBar" start="yes" />
                <view wid="view_negato1" />
                <view wid="view_negato2" />
                <view wid="view_negato3" />
                <view sid="landmarksEditor" start="yes" />
            </registry>
        </service>

        <service uid="toolBar" type="::sight::modules::ui::base::SToolBar">
            <gui>
                <layout>
                    <menuItem name="Previous" icon="module_ui_media-0.1/icons/Back.svg" />
                    <menuItem name="Next" icon="module_ui_media-0.1/icons/Next.svg" />
                    <menuItem name="Load landmark" icon="module_ui_media-0.1/icons/Load-landmark.png" />
                    <menuItem name="Save landmark" icon="module_ui_media-0.1/icons/Save-landmark.png" />
                    <menuItem name="Focus landmark" icon="module_ui_media-0.1/icons/Find-landmark.png" />
                    <menuItem name="Display Landmarks editor" icon="module_ui_media-0.1/icons/View-landmark.png" style="check" />
                    <separator />
                    <menuItem name="Add distance" icon="module_ui_media-0.1/icons/distance.png" />
                    <menuItem name="Remove distance" icon="module_ui_media-0.1/icons/RemoveDistance.png" />
                    <menuItem name="Hide distance" icon="module_ui_media-0.1/icons/HideDistance.png" style="check" />
                    <separator />
                    <menuItem name="Hide cross" icon="module_ui_media-0.1/icons/HideCross.png" style="radio" />
                    <menuItem name="Show normal cross" icon="module_ui_media-0.1/icons/NormalCross.png" style="radio" />
                    <menuItem name="Show full cross" icon="module_ui_media-0.1/icons/FullCross.png" style="radio" />
                    <separator />
                    <menuItem name="Export Activity" icon="module_ui_media-0.1/icons/Export.svg" />
                </layout>
            </gui>
            <registry>
                <menuItem sid="ActionPrevious" start="yes" />
                <menuItem sid="ActionNext" start="yes" />
                <menuItem sid="ActionLoadLandmark" start="yes" />
                <menuItem sid="ActionSaveLandmark" start="yes" />
                <menuItem sid="ActionSFocusLandmark" start="yes" />
                <menuItem sid="ActionEditLandmark" start="yes" />
                <menuItem sid="ActionAddDistance" start="yes" />
                <menuItem sid="ActionRemoveDistance" start="yes" />
                <menuItem sid="ActionHideDistance" start="yes" />
                <menuItem sid="ActionHideCross" start="yes" />
                <menuItem sid="ActionShowNormalCross" start="yes" />
                <menuItem sid="ActionShowFullCross" start="yes" />
                <menuItem sid="ActionExportActivity" start="yes" />
            </registry>
        </service>

        <service uid="cfgNegato1" type="::sight::service::SConfigController">
            <appConfig id="2DNegato" />
            <inout key="image" uid="${image}" />
            <inout key="landmarks" uid="${landmarks}" />
            <parameter replace="WID_PARENT" by="view_negato1" />
            <parameter replace="CrossTypeChannel" by="crossTypeChannel" />
            <parameter replace="PickingChannel" by="pickerChannel" />
            <parameter replace="orientation" by="axial" />
        </service>

        <service uid="cfgNegato2" type="::sight::service::SConfigController">
            <appConfig id="2DNegato" />
            <inout key="image" uid="${image}" />
            <inout key="landmarks" uid="${landmarks}" />
            <parameter replace="WID_PARENT" by="view_negato2" />
            <parameter replace="CrossTypeChannel" by="crossTypeChannel" />
            <parameter replace="PickingChannel" by="pickerChannel" />
            <parameter replace="orientation" by="frontal" />
        </service>

        <service uid="cfgNegato3" type="::sight::service::SConfigController">
            <appConfig id="2DNegato" />
            <inout key="image" uid="${image}" />
            <inout key="landmarks" uid="${landmarks}" />
            <parameter replace="WID_PARENT" by="view_negato3" />
            <parameter replace="CrossTypeChannel" by="crossTypeChannel" />
            <parameter replace="PickingChannel" by="pickerChannel" />
            <parameter replace="orientation" by="sagittal" />
        </service>

        <service uid="extractLandmarks" type="::sight::modules::data::SCopy" >
            <in key="source" uid="${image}">
                <extract from="@fields.m_landmarksId" />
            </in>
            <inout key="target" uid="${landmarks}"/>
        </service>

        <service uid="ActionExportActivity" type="::sight::modules::ui::base::series::SExport" autoConnect="yes">
            <inout key="seriesDB" uid="${SERIESDB}" />
            <inout key="series" uid="${AS_UID}" />
        </service>

        <service uid="landmarksEditor" type="::sight::modules::ui::qt::metrics::SLandmarks" autoConnect="yes">
            <inout key="landmarks" uid="${landmarks}" />
            <advanced>${advancedLandmarksEditor}</advanced>
        </service>

        <service uid="MedicalImageSrv" type="::sight::modules::data::MedicalImageSrv" autoConnect="yes">
            <inout key="image" uid="${image}" />
        </service>

        <service uid="ActionSFocusLandmark" type="::sight::modules::ui::base::metrics::SFocusLandmark" >
            <in key="landmarks" uid="${landmarks}" autoConnect="yes" />
            <inout key="image" uid="${image}" />
        </service>

        <service uid="ActionLoadLandmark" type="::sight::modules::ui::base::com::SSlotCaller" >
            <slots>
                <slot>LoadLandmark/update</slot>
            </slots>
        </service>

        <service uid="ActionSaveLandmark" type="::sight::modules::ui::base::com::SSlotCaller" >
            <slots>
                <slot>SaveLandmark/update</slot>
            </slots>
        </service>

        <service uid="ActionEditLandmark" type="::sight::modules::ui::base::com::SBooleanSlotCaller">
            <slots>
                <slot>landmarksEditor/setVisible</slot>
            </slots>
        </service>
        <service uid="ActionAddDistance" type="::sight::modules::ui::base::metrics::AddDistance" >
            <inout key="image" uid="${image}" />
        </service>
        <service uid="ActionRemoveDistance" type="::sight::modules::ui::base::metrics::RemoveDistance" >
            <inout key="image" uid="${image}" />
        </service>
        <service uid="ActionHideDistance" type="::sight::modules::ui::base::metrics::ShowDistance" autoConnect="yes" >
            <inout key="image" uid="${image}" />
        </service>

        <!-- The action "previous" and "next" are visible only if the application use a "SSequencer".
             This service send signals to enable or not the actions. -->
        <service uid="ActionPrevious" type="::sight::modules::ui::base::com::SSignal">
            <state visible="false" />
        </service>

        <service uid="ActionNext" type="::sight::modules::ui::base::com::SSignal">
            <state visible="false" />
        </service>

        <service uid="LoadLandmark" type="::sight::modules::ui::base::io::SSelector" >
            <inout key="data" uid="${landmarks}" />
            <type mode="reader" />
            <selection mode="include" />
            <addSelection service="::sight::modules::io::atoms::SReader" />
            <config id="LandmarksAtomsConfig" service="::sight::modules::io::atoms::SReader" />
        </service>

        <service uid="SaveLandmark" type="::sight::modules::ui::base::io::SSelector" >
            <inout key="data" uid="${landmarks}" />
            <type mode="writer" />
            <selection mode="include" />
            <addSelection service="::sight::modules::io::atoms::SWriter" />
            <config id="LandmarksAtomsConfig" service="::sight::modules::io::atoms::SWriter" />
        </service>

        <service uid="ActionHideCross" type="::sight::modules::ui::base::viz::CrossTypeAction">
            <in key="image" uid="${image}" />
            <crossType>hide</crossType>
        </service>
        <service uid="ActionShowNormalCross" type="::sight::modules::ui::base::viz::CrossTypeAction">
            <in key="image" uid="${image}" />
            <crossType>half</crossType>
            <state active="true" />
        </service>
        <service uid="ActionShowFullCross" type="::sight::modules::ui::base::viz::CrossTypeAction">
            <in key="image" uid="${image}" />
            <crossType>full</crossType>
        </service>

        <connect channel="crossTypeChannel">
            <signal>ActionHideCross/crossTypeModified</signal>
            <signal>ActionShowNormalCross/crossTypeModified</signal>
            <signal>ActionShowFullCross/crossTypeModified</signal>
        </connect>

        <connect channel="pickerChannel">
            <slot>landmarksEditor/addPickedPoint</slot>
        </connect>

        <!-- Connection to enable "previous" action. It should be connected to a SSequencer in the application
             configuration.-->
        <connect channel="${enabledPreviousChannel}">
            <slot>ActionExportActivity/hide</slot>
            <slot>ActionPrevious/show</slot>
            <slot>ActionPrevious/setIsExecutable</slot>
        </connect>

        <!-- Connection to called 'previous' slot of the application's SSequencer. -->
        <connect channel="${previousActivityChannel}">
            <signal>ActionPrevious/triggered</signal>
        </connect>

        <!-- Connection to enable "next" action. It should be connected to a SSequencer in the application
             configuration.-->
        <connect channel="${enabledNextChannel}">
            <slot>ActionExportActivity/hide</slot>
            <slot>ActionNext/show</slot>
            <slot>ActionNext/setIsExecutable</slot>
        </connect>

        <!-- Connection to called 'next' slot of the application's SSequencer. -->
        <connect channel="${nextActivityChannel}">
            <signal>ActionNext/triggered</signal>
        </connect>


        <!-- START AND STOP SERVICES -->
        <start uid="mainView" />
        <start uid="MedicalImageSrv" />

        <start uid="cfgNegato1" />
        <start uid="cfgNegato2" />
        <start uid="cfgNegato3" />

        <start uid="LoadLandmark" />
        <start uid="SaveLandmark" />

        <!-- start deferred -->
        <start uid="extractLandmarks" />

        <update uid="extractLandmarks" />

    </config>
</extension>
