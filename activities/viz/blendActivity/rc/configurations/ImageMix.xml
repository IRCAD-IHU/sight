<extension implements="::sight::services::registry::AppConfig">
    <id>ImageMix</id>
    <parameters>
        <param name="WID_PARENT" />
        <param name="GENERIC_UID" />
        <param name="tfBackgroundImage" />
        <param name="tfFrontImage" />
        <param name="backgroundImageUid" />
        <param name="frontImageUid" />
        <param name="patient_name" default="" />
    </parameters>
    <config>
        <object uid="${backgroundImageUid}" type="::sight::data::Image" src="ref" />
        <object uid="${frontImageUid}" type="::sight::data::Image" src="ref" />

        <object uid="${tfBackgroundImage}" type="::sight::data::TransferFunction" src="deferred" />
        <object uid="${tfFrontImage}" type="::sight::data::TransferFunction" src="deferred" />

        <service uid="mainView" type="::sight::modules::ui::base::view::SDefaultView">
            <gui>
                <layout type="::sight::ui::base::CardinalLayoutManager">
                    <view caption="Blend" align="center" />
                    <view align="bottom" />
                </layout>
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <view sid="blendGenericScene" start="yes" />
                <view sid="bottomView" start="yes" />
            </registry>
        </service>

        <service uid="bottomView" type="::sight::modules::ui::base::view::SDefaultView">
            <gui>
                <layout type="::sight::ui::base::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="sliderView" start="yes" />
                <view sid="editorsView" start="yes" />
            </registry>
        </service>

        <service uid="sliderView" type="::sight::modules::ui::base::view::SDefaultView">
            <gui>
                <layout type="::sight::ui::base::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view proportion="1" />
                    <view proportion="0" />
                </layout>
            </gui>
            <registry>
                <view sid="slider" start="yes" />
                <view sid="snapshot" start="yes" />
            </registry>
        </service>

        <service uid="editorsView" type="::sight::modules::ui::base::view::SDefaultView">
            <gui>
                <layout type="::sight::ui::base::LineLayoutManager">
                    <orientation value="horizontal" />
                    <view caption="Background image" proportion="1" />
                    <view caption="Front image" proportion="1" />
                </layout>
            </gui>
            <registry>
                <view sid="bgBottomView" start="yes" />
                <view sid="frontBottomView" start="yes" />
            </registry>
        </service>

        <service uid="bgBottomView" type="::sight::modules::ui::base::view::SDefaultView">
            <gui>
                <layout type="::sight::ui::base::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" />
                    <spacer/>
                </layout>
            </gui>
            <registry>
                <view sid="bg_windowLevel" start="no" />
            </registry>
        </service>

        <service uid="frontBottomView" type="::sight::modules::ui::base::view::SDefaultView">
            <gui>
                <layout type="::sight::ui::base::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" />
                    <view proportion="0" />
                    <spacer/>
                </layout>
            </gui>
            <registry>
                <view sid="front_windowLevel" start="no" />
                <view sid="front_imageTransparency" start="yes" />
            </registry>
        </service>

        <service uid="snapshot" type="::sight::modules::ui::qt::viz::SnapshotEditor" />

        <service uid="bgLockDump" type="::sight::modules::memory::LockDumpSrv">
            <inout key="target" uid="${backgroundImageUid}" />
        </service>

        <!-- This service convert a stypee fwData::Image to medical Image -->
        <service uid="bg_medicalImageConverter" type="::sight::modules::data::MedicalImageSrv" autoConnect="yes">
            <inout key="image" uid="${backgroundImageUid}" />
        </service>
        <service uid="slider" type="::sight::modules::ui::qt::image::SliceIndexPositionEditor" autoConnect="yes">
            <inout key="image" uid="${backgroundImageUid}" />
            <sliceIndex>axial</sliceIndex>
        </service>
        <service uid="bg_windowLevel" type="::sight::modules::ui::qt::image::WindowLevel">
            <inout key="image" uid="${backgroundImageUid}" autoConnect="yes" />
            <inout key="tf" uid="${tfBackgroundImage}" />
        </service>

        <service uid="frontLockDump" type="::sight::modules::memory::LockDumpSrv">
            <inout key="target" uid="${frontImageUid}" />
        </service>

        <!-- This service convert a stypee fwData::Image to medical Image -->
        <service uid="frontMedicalImageConverter" type="::sight::modules::data::MedicalImageSrv" autoConnect="yes">
            <inout key="image" uid="${frontImageUid}" />
        </service>

        <service uid="front_imageTransparency" type="::sight::modules::ui::qt::image::ImageTransparency" autoConnect="yes">
            <inout key="image" uid="${frontImageUid}" />
            <shortcut value="V" />
        </service>

        <service uid="front_windowLevel" type="::sight::modules::ui::qt::image::WindowLevel">
            <inout key="image" uid="${frontImageUid}" autoConnect="yes" />
            <inout key="tf" uid="${tfFrontImage}" />
        </service>

        <!-- Generic scene to show merging of backgroung and front images -->
        <!-- *************************** Begin generic scene *************************** -->

        <service uid="blendGenericScene" type="::fwRenderVTK::SRender">
            <scene>
                <picker id="myPicker" vtkclass="fwVtkCellPicker" />
                <vtkObject id="imageBlend" class="vtkImageBlend" />
                <renderer id="default" background="0.0" />
                <adaptor uid="MPRNegato3D" />
                <adaptor uid="interactor" />
                <adaptor uid="bgImagePicker" />
                <adaptor uid="frontImagePicker" />
                <adaptor uid="snapshotAdaptor" />
                <adaptor uid="myImagesBlendAdaptor" />
                <adaptor uid="nameAdaptor" />
                <adaptor uid="myImagesProbeCursor" />
            </scene>
        </service>

        <service uid="MPRNegato3D" type="::visuVTKAdaptor::SNegatoMPR" autoConnect="yes">
            <inout key="image" uid="${backgroundImageUid}" />
            <inout key="tf" uid="${tfBackgroundImage}" />
            <config renderer="default" picker="myPicker" mode="2D" slices="1" sliceIndex="axial" vtkimagesource="imageBlend" />
        </service>

        <service uid="interactor" type="::visuVTKAdaptor::SInteractorStyle">
            <config renderer="default" style="InteractorStyle2DForNegato" />
        </service>

        <service uid="bgImagePicker" type="::visuVTKAdaptor::SImagePickerInteractor" autoConnect="yes">
            <inout key="image" uid="${backgroundImageUid}" />
            <config renderer="default" picker="myPicker" />
        </service>

        <service uid="frontImagePicker" type="::visuVTKAdaptor::SImagePickerInteractor" autoConnect="yes">
            <inout key="image" uid="${frontImageUid}" />
            <config renderer="default" picker="myPicker" />
        </service>

        <service uid="snapshotAdaptor" type="::visuVTKAdaptor::SSnapshot">
            <config renderer="default" />
        </service>

        <!-- Adaptor to show background and front image merge in the same view. -->
        <service uid="myImagesBlendAdaptor" type="::visuVTKAdaptor::SImagesBlend">
            <inout group="image" autoConnect="yes">
                <key uid="${backgroundImageUid}" tfalpha="no" />
                <key uid="${frontImageUid}" tfalpha="yes" />
            </inout>
            <inout group="tf" optional="yes">
                <key uid="${tfBackgroundImage}" />
                <key uid="${tfFrontImage}" />
            </inout>
            <config vtkimageregister="imageBlend" />
        </service>

        <service uid="nameAdaptor" type="::visuVTKAdaptor::SText">
            <config renderer="default" text="${patient_name}" fontSize="15" hAlign="right" vAlign="top" />
        </service>

        <!-- Adaptor to show the red cross and images pixel values informations in scene top left. -->
        <service uid="myImagesProbeCursor" type="::visuVTKAdaptor::SImagesProbeCursor">
            <inout group="image" autoConnect="yes">
                <key uid="${backgroundImageUid}" name="background" />
                <key uid="${frontImageUid}" name="front" />
            </inout>
            <config renderer="default" picker="myPicker" />
        </service>

        <!-- *************************** End generic scene *************************** -->

        <connect>
            <signal>snapshot/snapped</signal>
            <slot>snapshotAdaptor/snap</slot>
        </connect>

        <!-- START AND STOP SERVICES -->
        <start uid="mainView" />

        <!-- blendGenericScene adaptors -->
        <start uid="interactor" />
        <start uid="bgImagePicker" />
        <start uid="frontImagePicker" />
        <start uid="snapshotAdaptor" />
        <start uid="myImagesBlendAdaptor" />
        <start uid="nameAdaptor" />
        <start uid="myImagesProbeCursor" />
        <start uid="MPRNegato3D" />
        <start uid="bgLockDump" />
        <start uid="frontLockDump" />
        <start uid="bg_medicalImageConverter" />
        <start uid="frontMedicalImageConverter" />

        <!-- deferred -->
        <start uid="bg_windowLevel" />
        <start uid="front_windowLevel" />

    </config>
</extension>
