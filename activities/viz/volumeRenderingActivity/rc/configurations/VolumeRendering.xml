<extension implements="::sight::services::registry::AppConfig">
    <id>VolumeRendering</id>
    <parameters>
        <!-- activity parameters -->
        <param name="WID_PARENT" />
        <param name="SERIESDB" />
        <param name="AS_UID" />
        <param name="ICON_PATH" />

        <!-- data -->
        <param name="image" />
        <param name="patient_name" default="" />
        <param name="optionalModelSeriesComposite" />
    </parameters>
    <!-- input image -->
    <config>
        <!-- activity -->
        <object uid="${SERIESDB}" type="::sight::data::SeriesDB" src="ref" />
        <object uid="${AS_UID}" type="::sight::data::ActivitySeries" src="ref" />

        <!-- input image -->
        <object uid="${image}" type="::sight::data::Image" src="ref" />

        <!-- Transfer function -->
        <object uid="transferFunction" type="::sight::data::TransferFunction" src="deferred" />

        <!-- optional model series -->
        <object uid="${optionalModelSeriesComposite}" type="::sight::data::Composite" src="ref" />
        <object uid="optionalModelSeries" type="::sight::data::Image" src="deferred" />

        <!-- TF editor -->
        <object uid="Histogram" type="::sight::data::Histogram" />
        <object uid="landmarks" type="::sight::data::Landmarks" />
        <service uid="mainView" type="::sight::modules::ui::base::view::SDefaultView">
            <gui>
                <layout type="::sight::ui::base::CardinalLayoutManager">
                    <view caption="VR" align="center" />
                    <view align="right" minWidth="450" />
                </layout>
                <toolBar/>
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <toolBar sid="toolBar" start="yes" />
                <view sid="vr" start="yes" />
                <view wid="tfEditor" />
            </registry>
        </service>

        <service uid="toolBar" type="::sight::modules::ui::base::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <menuItem name="Show 3d slice cursor" icon="media-0.1/icons/icon-landmark.png" style="check" />
                    <menuItem name="Show mesh" icon="media-0.1/icons/icon-3D.png" style="check" />
                    <menuItem name="Manage organs color" icon="media-0.1/icons/ManageOrgan.png" style="check" />
                    <separator/>
                    <menuItem name="Show/hide box cropping" icon="media-0.1/icons/icon-box.png" style="check" />
                    <menuItem name="Reset box cropping" icon="media-0.1/icons/icon-box-reset.png" />
                    <separator/>
                    <menuItem name="Snapshot VR" icon="media-0.1/icons/camera-photo.png" />
                    <separator/>
                    <menuItem name="Export Activity" icon="media-0.1/icons/Export.svg" />
                </layout>
            </gui>
            <registry>
                <menuItem sid="ActionShowSliceCursor" start="yes" />
                <menuItem sid="ActionShowMesh" start="yes" />
                <menuItem sid="action_organManager" start="no" />
                <menuItem sid="ActionShowHideBoxWidget" start="yes" />
                <menuItem sid="ActionResetBoxWidget" start="yes" />
                <menuItem sid="ActionSnapshotVR" start="yes" />
                <menuItem sid="ActionExportActivity" start="yes" />
            </registry>
        </service>

        <service uid="ActionExportActivity" type="::sight::modules::ui::qt::action::SExportSeries" autoConnect="yes">
            <inout key="seriesDB" uid="${SERIESDB}" />
            <inout key="series" uid="${AS_UID}" />
        </service>

        <service uid="ActionShowSliceCursor" type="::sight::modules::ui::base::action::SStarter" >
            <start_or_stop uid="image3DCursorAdaptor" />
        </service>

        <service uid="ActionShowMesh" type="::sight::modules::ui::base::action::SPushObject">
            <inout key="source" uid="${optionalModelSeriesComposite}" />
            <out key="destination" uid="optionalModelSeries" />
            <push srcKey="optionalModelSeriesKey" />
        </service>

        <service uid="action_organManager" type="::sight::modules::ui::base::action::SConfigLauncher">
            <appConfig id="ModelSeriesManagerWindow" />
            <inout key="ORGAN_MANAGER_MODELSERIES" uid="optionalModelSeries" />
            <parameter replace="ICON_PATH" by="${ICON_PATH}" />
        </service>

        <service uid="ActionSnapshotVR" type="::sight::modules::ui::base::viz::action::SSnapshot" />
        <!-- Generic Scene VR -->
        <!-- *************************** Begin generic scene *************************** -->

        <service uid="vr" type="::fwRenderVTK::SRender">
            <scene>
                <picker id="negato1default" vtkclass="fwVtkCellPicker" />
                <renderer id="default" background="0.0" />

                <adaptor uid="snapshot1" />
                <adaptor uid="Interactor1" />
                <adaptor uid="modelSeriesAdaptor" />
                <adaptor uid="VolumeScene3DA" />
                <adaptor uid="nameAdaptor" />
                <adaptor uid="image3DCursorAdaptor" />
            </scene>
        </service>

        <service uid="snapshot1" type="::visuVTKAdaptor::SSnapshot">
            <config renderer="default" />
        </service>

        <service uid="Interactor1" type="::visuVTKAdaptor::SInteractorStyle">
            <config renderer="default" style="InteractorStyle3DForNegato" />
        </service>

        <service uid="modelSeriesAdaptor" type="::visuVTKAdaptor::SModelSeries" autoConnect="yes">
            <in key="model" uid="optionalModelSeries" />
            <config renderer="default" picker="negato1default" autoresetcamera="no" />
        </service>

        <service uid="VolumeScene3DA" type="::visuVTKVRAdaptor::SVolume" autoConnect="yes">
            <inout key="image" uid="${image}" />
            <inout key="tf" uid="transferFunction" optional="yes" />
            <config renderer="default" />
        </service>

        <service uid="nameAdaptor" type="::visuVTKAdaptor::SText" autoConnect="yes">
            <in key="object" uid="${image}" />
            <config renderer="default" text="${patient_name}" fontSize="15" hAlign="right" vAlign="top" />
        </service>

        <service uid="image3DCursorAdaptor" type="::visuVTKAdaptor::SImage3DCursor" autoConnect="yes">
            <inout key="image" uid="${image}" />
            <config renderer="default" />
        </service>

        <!-- *************************** End generic scene *************************** -->

        <!-- Services working on input image -->
        <service uid="LockImageSrv" type="::sight::modules::memory::LockDumpSrv">
            <inout key="target" uid="${image}" />
        </service>

        <service uid="MedicalImageSrv" type="::sight::modules::data::MedicalImageSrv">
            <inout key="image" uid="${image}" />
        </service>

        <service uid="ActionShowHideBoxWidget" type="::sight::modules::ui::base::action::SBooleanSlotCaller">
            <slots>
                <slot>VolumeScene3DA/activateBoxClipping</slot>
            </slots>
            <state active="true" />
        </service>

        <service uid="ActionResetBoxWidget" type="::sight::modules::ui::base::action::SSlotCaller">
            <slots>
                <slot>VolumeScene3DA/resetBoxWidget</slot>
            </slots>
        </service>

        <!-- Services working on TF -->
        <service uid="tfEditor" type="::sight::services::SConfigController">
            <appConfig id="TransferFunctionWithNegatoEditor" />
            <inout key="image" uid="${image}" />
            <inout key="histogram" uid="Histogram" />
            <inout key="landmarks" uid="landmarks" />
            <inout key="transferFunctionOutput" uid="transferFunction" optional="yes" />
            <parameter replace="WID_PARENT" by="tfEditor" />
        </service>

        <service uid="computeHistogram" type="::sight::modules::viz::scene2d::processing::SComputeHistogram" autoConnect="yes" worker="COMPUTING_THREAD">
            <in key="image" uid="${image}" />
            <inout key="histogram" uid="Histogram" />
            <binsWidth>5.0</binsWidth>
        </service>

        <!-- If the image has landmarks, extract them and display them in the TF editor -->
        <service uid="extractLandmarks" type="::sight::modules::data::SCopy">
            <in key="source" uid="${image}">
                <extract from="@fields.m_landmarksId" />
            </in>
            <inout key="target" uid="landmarks" />
        </service>

        <!-- ************************************* Connections ************************************ -->

        <connect>
            <signal>ActionSnapshotVR/snapped</signal>
            <slot>snapshot1/snap</slot>
        </connect>

        <!-- START AND STOP SERVICES -->
        <start uid="computeHistogram" />
        <start uid="LockImageSrv" />
        <start uid="MedicalImageSrv" />
        <start uid="mainView" />
        <start uid="tfEditor" />
        <start uid="extractLandmarks" />

        <!-- Deferred start -->
        <start uid="action_organManager" />

        <!-- vr adaptors -->
        <start uid="snapshot1" />
        <start uid="Interactor1" />
        <start uid="modelSeriesAdaptor" />
        <start uid="VolumeScene3DA" />
        <start uid="nameAdaptor" />
        <start uid="image3DCursorAdaptor" />

        <update uid="extractLandmarks" />

    </config>
</extension>
